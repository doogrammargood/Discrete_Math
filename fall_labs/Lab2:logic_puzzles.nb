(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    243505,       6171]
NotebookOptionsPosition[    233526,       6008]
NotebookOutlinePosition[    233918,       6024]
CellTagsIndexPosition[    233875,       6021]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Lab 2: Logic Puzzles", "Title",
 CellChangeTimes->{{3.946910110669417*^9, 
  3.946910119270069*^9}},ExpressionUUID->"8d56379c-42a4-4ed5-a246-\
22858e3b684f"],

Cell["\<\
In this lab, we will construct different logic puzzles using Truth Tables and \
Mathematica. This includes a recap of Problem 3 on Homework 1. At the same \
time, we want to describe how the code works and explain some features of the \
Wolfram language.
\
\>", "Text",
 CellChangeTimes->{{3.946910121787839*^9, 3.946910195667507*^9}, {
   3.946910255773594*^9, 3.946910318258359*^9}, 
   3.965486338613006*^9},ExpressionUUID->"bc43c1da-6c59-4e6c-9ac6-\
6ec1553fa041"],

Cell[CellGroupData[{

Cell["Agenda:", "Section",
 CellChangeTimes->{{3.9654863500428*^9, 3.965486368144022*^9}, {
  3.9655984562404213`*^9, 
  3.965598458221121*^9}},ExpressionUUID->"47af226d-4166-4864-913f-\
776d2dd51c4b"],

Cell[CellGroupData[{

Cell["Writing (30 minutes): ", "Subsection",
 CellChangeTimes->{{3.965486432427348*^9, 3.965486452853525*^9}, {
  3.965486494917193*^9, 
  3.965486510823896*^9}},ExpressionUUID->"b9c98a55-4c9e-44a3-9618-\
a949d01780d2"],

Cell[TextData[{
 "Break into groups of at most 4. Choose a puzzle type or invent a type of \
your own. Use the Mathematica code to create a truth table, then get logical \
formulas that match the truth table to serve as the puzzle\[CloseCurlyQuote]s \
clues. Finally, convert your clues into English sentences. Be sure to include \
some instructions with your puzzle so that it is self-explanatory. \n\n",
 StyleBox["Submit a screenshot of your puzzle for the quiz.",
  FontWeight->"Bold"],
 " Don\[CloseCurlyQuote]t use the same puzzle that you used for your \
homework. Include any planning materials such as truth tables in your \
submission. Also include any notes  from the solving discussion phases."
}], "Text",
 CellChangeTimes->{{3.965486380481577*^9, 3.965486384130279*^9}, {
  3.96548642399844*^9, 3.965486426778399*^9}, {3.965486545848737*^9, 
  3.965486546740514*^9}, {3.9654866478114653`*^9, 3.9654866567403383`*^9}, {
  3.9655984630516443`*^9, 3.965598506269054*^9}, {3.965598560878954*^9, 
  3.965598665569997*^9}, {3.965598705723484*^9, 3.965598736111732*^9}, {
  3.965598854831992*^9, 3.9655988678657*^9}, {3.965803244589357*^9, 
  3.9658033138742447`*^9}},ExpressionUUID->"7181c2db-bbce-420b-b525-\
1a3949b2a1a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solving (20 minutes):", "Subsection",
 CellChangeTimes->{{3.96548656812363*^9, 3.965486594808909*^9}, 
   3.965486642769816*^9},ExpressionUUID->"eaeff5ea-5c9e-41ca-a4cf-\
7e28efd348ee"],

Cell["\<\
Groups should trade puzzles. Each group should write the clues to their \
puzzle symbolically. They may need to ask the puzzle creation group about the \
meanings of clues, if any are ambiguous. The solvers should attempt to solve \
the puzzle. Three potential strategies for solving the puzzle are: Creating \
truth tables, reasoning intuitively, and using symbolic manipulation.\
\>", "Text",
 CellChangeTimes->{{3.9654866082456408`*^9, 3.9654866119089193`*^9}, {
  3.965486686366061*^9, 3.965486694738789*^9}, {3.965598744494214*^9, 
  3.965598770426836*^9}, {3.965599124784947*^9, 3.965599259344136*^9}, {
  3.9655992910577106`*^9, 
  3.965599300767026*^9}},ExpressionUUID->"2396eb69-b4a2-4f0d-932d-\
5f0a31e26ce5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion (15 minutes):", "Subsection",
 CellChangeTimes->{{3.965486716303113*^9, 3.965486725615046*^9}, {
  3.96559931089041*^9, 
  3.965599320815865*^9}},ExpressionUUID->"c12e9b30-5c89-4486-91de-\
c784e255ff7f"],

Cell["\<\
Here are some discussion questions:
-Did you notice anything wrong with any puzzles? For example, ambiguous clues \
or non-unique solutions.
-What puzzle types seemed hardest?
-What method of solving the puzzles seemed most efficient?\
\>", "Text",
 CellChangeTimes->{{3.965599343109438*^9, 
  3.965599413349333*^9}},ExpressionUUID->"bb31eb30-c2ba-407c-91c5-\
afb04ea95a6f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Puzzle Examples", "Section",
 CellChangeTimes->{{3.96559880282701*^9, 
  3.9655988056446466`*^9}},ExpressionUUID->"7ed8a72d-0f0f-4a2e-bec0-\
2b6b9c98a7c4"],

Cell["\<\
Now we give several examples of different types of puzzles. Feel free to come \
up with your own type of puzzle using these as inspiration.\
\>", "Text",
 CellChangeTimes->{{3.965599514200327*^9, 
  3.965599550431602*^9}},ExpressionUUID->"0bf7b99d-b5f6-4d17-ba3d-\
4f69703d0188"],

Cell[CellGroupData[{

Cell["Puzzle Type 1: ", "Subsection",
 CellChangeTimes->{{3.946910326533091*^9, 3.946910356193739*^9}, 
   3.96559883677991*^9},ExpressionUUID->"55a09f87-ebe0-45f8-af6c-\
962c82285a55"],

Cell["\<\
These puzzles are like the ones of Homework 1 Problem 3. To recap:
We want a puzzle that consists of 3 clues (compound propositions) P,Q,R that \
depend on 3 facts (basic propositions) a,b,c.
In order for the puzzle to be interesting, we require 
1.) No clue determines any of the facts. 
2.) There is a unique solution.
3.) All clues are needed.

The following code generates a Truth Table that the user can enter. It \
generates the propositions that correspond to the truth table.\
\>", "Text",
 CellChangeTimes->{{3.946910334376272*^9, 3.9469105841609364`*^9}, {
  3.946910646366021*^9, 3.9469106546057673`*^9}, {3.9469110408629208`*^9, 
  3.946911058872761*^9}, {3.9655988236196327`*^9, 
  3.965598848293544*^9}},ExpressionUUID->"6f62e4e5-1504-47ca-a6ad-\
8d86e2541d7c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"P", ",", "Q", ",", "R"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fun3", "[", 
   RowBox[{
    RowBox[{"p1_", "/;", 
     RowBox[{"BooleanQ", "[", "p1", "]"}]}], ",", 
    RowBox[{"p2_", "/;", 
     RowBox[{"BooleanQ", "[", "p2", "]"}]}], ",", 
    RowBox[{"p3_", "/;", 
     RowBox[{"BooleanQ", "[", "p3", "]"}]}], ",", 
    RowBox[{"p4_", "/;", 
     RowBox[{"BooleanQ", "[", "p4", "]"}]}], ",", 
    RowBox[{"p5_", "/;", 
     RowBox[{"BooleanQ", "[", "p5", "]"}]}], ",", 
    RowBox[{"p6_", "/;", 
     RowBox[{"BooleanQ", "[", "p6", "]"}]}], ",", 
    RowBox[{"p7_", "/;", 
     RowBox[{"BooleanQ", "[", "p7", "]"}]}], ",", 
    RowBox[{"p8_", "/;", 
     RowBox[{"BooleanQ", "[", "p8", "]"}]}]}], "]"}], ":=", 
  RowBox[{"BooleanFunction", "[", 
   RowBox[{
    RowBox[{"MapThread", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#1", "->", "#2"}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tuples", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}], ",", "3"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "p1", ",", "p2", ",", "p3", ",", "p4", ",", "p5", ",", "p6", ",", 
          "p7", ",", "p8"}], "}"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ColFunG", "[", "s_", "]"}], ":=", 
  RowBox[{"DynamicModule", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"p1", "=", "Null"}], ",", 
      RowBox[{"p2", "=", "Null"}], ",", 
      RowBox[{"p3", "=", "Null"}], ",", 
      RowBox[{"p4", "=", "Null"}], ",", 
      RowBox[{"p5", "=", "Null"}], ",", 
      RowBox[{"p6", "=", "Null"}], ",", 
      RowBox[{"p7", "=", "Null"}], ",", 
      RowBox[{"p8", "=", "Null"}], ",", 
      RowBox[{"result", "=", "\"\<\>\""}]}], "}"}], ",", 
    "\[IndentingNewLine]", "  ", 
    RowBox[{"Grid", "@", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ToString", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
         "   ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p1", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "    ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p2", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "    ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p3", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "    ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p4", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "   ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p5", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "    ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p6", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "    ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p7", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "    ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p8", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Button", "[", 
          RowBox[{"\"\<Evaluate\>\"", ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"result", "=", 
               RowBox[{"Fun3", "[", 
                RowBox[{
                "p1", ",", "p2", ",", "p3", ",", "p4", ",", "p5", ",", "p6", 
                 ",", "p7", ",", "p8"}], "]"}]}], ",", 
              RowBox[{"s", "=", "result"}]}], "}"}], ";"}]}], "]"}], ",", 
         "\[IndentingNewLine]", "    ", 
         RowBox[{"Dynamic", "[", " ", "\[IndentingNewLine]", "            ", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"ToString", "[", 
             RowBox[{"FullSimplify", "[", "result", "]"}], "]"}], ",", 
            "Bold"}], "]"}], "]"}]}], "\[IndentingNewLine]", "  ", "}"}], 
       "}"}]}]}], ",", 
    RowBox[{"SaveDefinitions", "->", "True"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{"Prepend", "[", 
        RowBox[{
         RowBox[{"Tuples", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}], ",", "3"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\""}], "}"}]}], 
        "]"}], ",", 
       RowBox[{"Spacings", "->", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "1.25"}], "}"}]}], ",", 
       RowBox[{"BaselinePosition", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"6", ",", "1"}], "}"}], ",", "Bottom"}], "}"}]}]}], "]"}], 
     ",", 
     RowBox[{"ColFunG", "[", "P", "]"}], ",", 
     RowBox[{"ColFunG", "[", "Q", "]"}], ",", 
     RowBox[{"ColFunG", "[", "R", "]"}]}], "}"}], ",", 
   RowBox[{"Spacer", "[", "2", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.946482981171259*^9, 3.946482993620782*^9}, {
   3.9464848302489862`*^9, 3.946484843066457*^9}, {3.946485402557185*^9, 
   3.9464854322988234`*^9}, {3.9464855200191708`*^9, 3.946485521028439*^9}, {
   3.94648558062934*^9, 3.9464856125427017`*^9}, {3.946487938594656*^9, 
   3.946487974576713*^9}, {3.946545186017455*^9, 3.946545228508277*^9}, {
   3.946545775737715*^9, 3.9465458018345413`*^9}, {3.946553391150886*^9, 
   3.946553393520286*^9}, {3.9465540799116*^9, 3.946554082993629*^9}, {
   3.9465663886680193`*^9, 3.946566426188772*^9}, 3.946566469889864*^9, {
   3.946837294879858*^9, 3.946837305563841*^9}, {3.9468375375021*^9, 
   3.946837537931828*^9}},
 CellLabel->
  "In[138]:=",ExpressionUUID->"40c2c7b8-a6b4-4e82-8249-81168f07eda8"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{2}, "Spacer1"], 
   TagBox[
    GridBox[{{"\"a\"", "\"b\"", "\"c\""}, {"True", "True", "True"}, {
      "True", "True", "False"}, {"True", "False", "True"}, {
      "True", "False", "False"}, {"False", "True", "True"}, {
      "False", "True", "False"}, {"False", "False", "True"}, {
      "False", "False", "False"}}, AutoDelete -> False, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.25}}}, 
     BaselinePosition -> {{6, 1}, Bottom}], "Grid"], 
   DynamicModuleBox[{$CellContext`p1$$ = False, $CellContext`p2$$ = 
     True, $CellContext`p3$$ = True, $CellContext`p4$$ = 
     False, $CellContext`p5$$ = True, $CellContext`p6$$ = 
     False, $CellContext`p7$$ = False, $CellContext`p8$$ = 
     True, $CellContext`result$$ = Or[
       And[$CellContext`a, $CellContext`b, 
        Not[$CellContext`c]], 
       And[$CellContext`a, 
        Not[$CellContext`b], $CellContext`c], 
       And[
        Not[$CellContext`a], $CellContext`b, $CellContext`c], 
       And[
        Not[$CellContext`a], 
        Not[$CellContext`b], 
        Not[$CellContext`c]]]}, 
    TagBox[
     GridBox[{{"\"P\""}, {
        InputFieldBox[
         Dynamic[$CellContext`p1$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p2$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p3$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p4$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p5$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p6$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p7$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p8$$]]}, {
        ButtonBox[
        "\"Evaluate\"", Appearance -> Automatic, 
         ButtonFunction :> ({$CellContext`result$$ = \
$CellContext`Fun3[$CellContext`p1$$, $CellContext`p2$$, $CellContext`p3$$, \
$CellContext`p4$$, $CellContext`p5$$, $CellContext`p6$$, $CellContext`p7$$, \
$CellContext`p8$$], $CellContext`P = $CellContext`result$$}; Null), Evaluator -> 
         Automatic, Method -> "Preemptive"]}, {
        DynamicBox[
         ToBoxes[
          Style[
           ToString[
            FullSimplify[$CellContext`result$$]], Bold], StandardForm], 
         ImageSizeCache -> {99.328125, {3.48046875, 12.55078125}}]}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
    DynamicModuleValues :> {}, Initialization :> ($CellContext`Fun3[
       Condition[
        Pattern[$CellContext`p1, 
         Blank[]], 
        BooleanQ[$CellContext`p1]], 
       Condition[
        Pattern[$CellContext`p2, 
         Blank[]], 
        BooleanQ[$CellContext`p2]], 
       Condition[
        Pattern[$CellContext`p3, 
         Blank[]], 
        BooleanQ[$CellContext`p3]], 
       Condition[
        Pattern[$CellContext`p4, 
         Blank[]], 
        BooleanQ[$CellContext`p4]], 
       Condition[
        Pattern[$CellContext`p5, 
         Blank[]], 
        BooleanQ[$CellContext`p5]], 
       Condition[
        Pattern[$CellContext`p6, 
         Blank[]], 
        BooleanQ[$CellContext`p6]], 
       Condition[
        Pattern[$CellContext`p7, 
         Blank[]], 
        BooleanQ[$CellContext`p7]], 
       Condition[
        Pattern[$CellContext`p8, 
         Blank[]], 
        BooleanQ[$CellContext`p8]]] := BooleanFunction[
       MapThread[# -> #2& , {
         Tuples[{True, False}, 
          3], {$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, $CellContext`p5, $CellContext`p6, $CellContext`p7, \
$CellContext`p8}}], {$CellContext`a, $CellContext`b, $CellContext`c}])], 
   DynamicModuleBox[{$CellContext`p1$$ = True, $CellContext`p2$$ = 
     True, $CellContext`p3$$ = True, $CellContext`p4$$ = 
     True, $CellContext`p5$$ = False, $CellContext`p6$$ = 
     True, $CellContext`p7$$ = False, $CellContext`p8$$ = 
     True, $CellContext`result$$ = Or[$CellContext`a, 
       Not[$CellContext`c]]}, 
    TagBox[
     GridBox[{{"\"Q\""}, {
        InputFieldBox[
         Dynamic[$CellContext`p1$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p2$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p3$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p4$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p5$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p6$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p7$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p8$$]]}, {
        ButtonBox[
        "\"Evaluate\"", Appearance -> Automatic, 
         ButtonFunction :> ({$CellContext`result$$ = \
$CellContext`Fun3[$CellContext`p1$$, $CellContext`p2$$, $CellContext`p3$$, \
$CellContext`p4$$, $CellContext`p5$$, $CellContext`p6$$, $CellContext`p7$$, \
$CellContext`p8$$], $CellContext`Q = $CellContext`result$$}; Null), Evaluator -> 
         Automatic, Method -> "Preemptive"]}, {
        DynamicBox[
         ToBoxes[
          Style[
           ToString[
            FullSimplify[$CellContext`result$$]], Bold], StandardForm], 
         ImageSizeCache -> {53.484375, {3.48046875, 12.55078125}}]}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
    DynamicModuleValues :> {}, Initialization :> ($CellContext`Fun3[
       Condition[
        Pattern[$CellContext`p1, 
         Blank[]], 
        BooleanQ[$CellContext`p1]], 
       Condition[
        Pattern[$CellContext`p2, 
         Blank[]], 
        BooleanQ[$CellContext`p2]], 
       Condition[
        Pattern[$CellContext`p3, 
         Blank[]], 
        BooleanQ[$CellContext`p3]], 
       Condition[
        Pattern[$CellContext`p4, 
         Blank[]], 
        BooleanQ[$CellContext`p4]], 
       Condition[
        Pattern[$CellContext`p5, 
         Blank[]], 
        BooleanQ[$CellContext`p5]], 
       Condition[
        Pattern[$CellContext`p6, 
         Blank[]], 
        BooleanQ[$CellContext`p6]], 
       Condition[
        Pattern[$CellContext`p7, 
         Blank[]], 
        BooleanQ[$CellContext`p7]], 
       Condition[
        Pattern[$CellContext`p8, 
         Blank[]], 
        BooleanQ[$CellContext`p8]]] := BooleanFunction[
       MapThread[# -> #2& , {
         Tuples[{True, False}, 
          3], {$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, $CellContext`p5, $CellContext`p6, $CellContext`p7, \
$CellContext`p8}}], {$CellContext`a, $CellContext`b, $CellContext`c}])], 
   DynamicModuleBox[{$CellContext`p1$$ = False, $CellContext`p2$$ = 
     True, $CellContext`p3$$ = False, $CellContext`p4$$ = 
     True, $CellContext`p5$$ = True, $CellContext`p6$$ = 
     True, $CellContext`p7$$ = False, $CellContext`p8$$ = 
     False, $CellContext`result$$ = Or[
       And[$CellContext`a, 
        Not[$CellContext`c]], 
       And[
        Not[$CellContext`a], $CellContext`b]]}, 
    TagBox[
     GridBox[{{"\"R\""}, {
        InputFieldBox[
         Dynamic[$CellContext`p1$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p2$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p3$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p4$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p5$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p6$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p7$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p8$$]]}, {
        ButtonBox[
        "\"Evaluate\"", Appearance -> Automatic, 
         ButtonFunction :> ({$CellContext`result$$ = \
$CellContext`Fun3[$CellContext`p1$$, $CellContext`p2$$, $CellContext`p3$$, \
$CellContext`p4$$, $CellContext`p5$$, $CellContext`p6$$, $CellContext`p7$$, \
$CellContext`p8$$], $CellContext`R = $CellContext`result$$}; Null), Evaluator -> 
         Automatic, Method -> "Preemptive"]}, {
        DynamicBox[
         ToBoxes[
          Style[
           ToString[
            FullSimplify[$CellContext`result$$]], Bold], StandardForm], 
         ImageSizeCache -> {168.09375, {3.48046875, 12.55078125}}]}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
    DynamicModuleValues :> {}, Initialization :> ($CellContext`Fun3[
       Condition[
        Pattern[$CellContext`p1, 
         Blank[]], 
        BooleanQ[$CellContext`p1]], 
       Condition[
        Pattern[$CellContext`p2, 
         Blank[]], 
        BooleanQ[$CellContext`p2]], 
       Condition[
        Pattern[$CellContext`p3, 
         Blank[]], 
        BooleanQ[$CellContext`p3]], 
       Condition[
        Pattern[$CellContext`p4, 
         Blank[]], 
        BooleanQ[$CellContext`p4]], 
       Condition[
        Pattern[$CellContext`p5, 
         Blank[]], 
        BooleanQ[$CellContext`p5]], 
       Condition[
        Pattern[$CellContext`p6, 
         Blank[]], 
        BooleanQ[$CellContext`p6]], 
       Condition[
        Pattern[$CellContext`p7, 
         Blank[]], 
        BooleanQ[$CellContext`p7]], 
       Condition[
        Pattern[$CellContext`p8, 
         Blank[]], 
        BooleanQ[$CellContext`p8]]] := BooleanFunction[
       MapThread[# -> #2& , {
         Tuples[{True, False}, 
          3], {$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, $CellContext`p5, $CellContext`p6, $CellContext`p7, \
$CellContext`p8}}], {$CellContext`a, $CellContext`b, $CellContext`c}])]},
  "RowWithSeparator"]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.946545803089329*^9, 3.946566432197179*^9, 3.946566470360731*^9, 
   3.946566662211216*^9, 3.946837315368676*^9, 3.9468375403649063`*^9, {
   3.946855669655368*^9, 
   3.946855686736343*^9}},ExpressionUUID->"93f68006-d28d-484c-adde-\
8b3a4dfaf0f7"]
}, Open  ]],

Cell["\<\
We designed the truth table so that the constraints seem to be satisfied. For \
example, the unique solution is reflected by the fact that there is a unique \
\[OpenCurlyDoubleQuote]True, True, True\[CloseCurlyDoubleQuote] row. We \
finessed the last column a bit until it had a simple form. Therefore, we \
define the clues as\
\>", "Text",
 CellChangeTimes->{{3.946911069812904*^9, 3.946911187633491*^9}, {
  3.94691122630579*^9, 
  3.946911229163378*^9}},ExpressionUUID->"cd41720e-b546-4ce8-a819-\
ac4fde2ae934"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"P", "  ", "=", " ", 
   RowBox[{"!", 
    RowBox[{"Xor", "[", 
     RowBox[{"a", ",", "b", ",", "c"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Q", "=", " ", 
   RowBox[{"a", "||", 
    RowBox[{"!", "c"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"a", " ", "&&", " ", 
      RowBox[{"!", "c"}]}], ")"}], "||", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"!", "a"}], " ", "&&", " ", "b"}], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.946553502347975*^9, {3.946855738091599*^9, 3.9468558171330338`*^9}, {
   3.9468572314341373`*^9, 3.946857233598325*^9}, {3.9469111462248917`*^9, 
   3.946911151165044*^9}, {3.965384790379155*^9, 3.965384815662529*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"10425265-16ce-4ed0-b7d9-7e1767a7074b"],

Cell["\<\
There is a simple English translation:

There are 3 cups before you, some of which may be poisoned.
1.) \[OpenCurlyDoubleQuote]An even number of cups is poisoned.\
\[CloseCurlyDoubleQuote]
2.) \[OpenCurlyDoubleQuote]If the grail is poisoned, then the goblet is \
poisoned.\[CloseCurlyDoubleQuote]
3.) \[OpenCurlyDoubleQuote]Either the goblet is poisoned and the grail is \
safe, or else the goblet is safe and the chalice is poisoned.\
\[CloseCurlyDoubleQuote]
Which do you drink?
3.) (alternate) If the goblet is poisoned, then the grail is safe. Otherwise, \
the chalice is poisoned.

Some notes on the English translation:
-the facts correspond to a= \[OpenCurlyDoubleQuote]The goblet is poisoned\
\[CloseCurlyDoubleQuote], b= \[OpenCurlyDoubleQuote]The chalice is poisoned\
\[CloseCurlyDoubleQuote], and c= \[OpenCurlyDoubleQuote]The grail is \
poisoned.\[CloseCurlyDoubleQuote]
- The Xor function can generally be described by a parity.
-We use simple transformation rules.
-The third clue is potentially ambiguous, and could be misinterpreted as \
((a&&!c )|| !a)&&b. The comma does a lot of work in preventing this \
misinterpretation.
-The Either/or construction in the third clue could be misinterpreted as an \
exclusive or. But in this case the exclusive or and the usual or are the same.\
\>", "Text",
 CellChangeTimes->{{3.9468559274421043`*^9, 3.946856066504023*^9}, {
  3.9468561376677237`*^9, 3.946856155824546*^9}, {3.946856204658655*^9, 
  3.9468562790083847`*^9}, {3.946856773765329*^9, 3.946856778851441*^9}, {
  3.946856966263657*^9, 3.946857091067848*^9}, {3.946857131348961*^9, 
  3.946857136479189*^9}, {3.9469112334722557`*^9, 3.946911242721013*^9}, {
  3.946911276059908*^9, 3.946911276675749*^9}, {3.946911318779685*^9, 
  3.9469116426761436`*^9}, {3.947058011494404*^9, 3.947058068428616*^9}, {
  3.9477111824377403`*^9, 
  3.9477113497251596`*^9}},ExpressionUUID->"cd041a3b-ce92-4d16-8b26-\
3d9bb443982f"],

Cell["Checking the puzzle:", "Text",
 CellChangeTimes->{{3.946911665329198*^9, 3.9469116662393723`*^9}, {
  3.946912318177828*^9, 
  3.946912327681539*^9}},ExpressionUUID->"7314eb5f-bae7-45a4-b56f-\
027feb22e849"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SatisfiabilityCount", "[", 
   RowBox[{
    RowBox[{"P", "&&", "Q", "&&", "R"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Returns", " ", "1", " ", "if", " ", "there", " ", "is", " ", "a", " ", 
    "unique", " ", "solution"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"clues", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"P", ",", "Q", ",", "R"}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Next", ",", " ", 
    RowBox[{
    "check", " ", "that", " ", "every", " ", "pair", " ", "has", " ", "at", 
     " ", "least", " ", "1", " ", 
     RowBox[{"solution", "."}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cluepairs", " ", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Outer", "[", 
      RowBox[{"List", ",", 
       RowBox[{"{", 
        RowBox[{"P", ",", "Q", ",", "R"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"P", ",", "Q", ",", "R"}], "}"}]}], "]"}], ",", "1"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"subpuzzlesToCheck", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{"Function", "[", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "&&", 
        RowBox[{"x", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], ",", "cluepairs"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AllTrue", "[", 
   RowBox[{"subpuzzlesToCheck", ",", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"SatisfiabilityCount", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}], ">", "1"}], " ", 
      "&"}], ")"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Should", " ", "print", " ", "\"\<True\>\""}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LiteralList", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", 
      RowBox[{"!", "a"}], ",", 
      RowBox[{"!", "b"}], ",", 
      RowBox[{"!", "c"}]}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Finally", ",", " ", 
    RowBox[{
    "we", " ", "check", " ", "that", " ", "every", " ", "literal", " ", "and",
      " ", "clue", " ", "are", " ", "satisfiable", " ", "together"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClueList", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"P", ",", "Q", ",", "R"}], "}"}]}], ";"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{"AllTrue", "[", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"SatisfiableQ", "[", 
          RowBox[{
           RowBox[{"ClueList", "[", 
            RowBox[{"[", "clueIndex", "]"}], "]"}], " ", "&&", " ", 
           RowBox[{"LiteralList", "[", 
            RowBox[{"[", "literalIndex", "]"}], "]"}]}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"literalIndex", ",", " ", "1", ",", "6"}], "}"}]}], "]"}], 
       ",", " ", 
       RowBox[{"{", 
        RowBox[{"clueIndex", ",", "1", ",", "3"}], "}"}]}], "]"}], "]"}], ",",
     " ", 
    RowBox[{"(", 
     RowBox[{"#", "&"}], ")"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Should", " ", "print", " ", "True"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.94691233542327*^9, 3.946912456148904*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"ba4f868b-0b5c-48b5-a398-17705f15a437"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.9653848194621887`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"84df695b-3a03-4c42-a9a3-ab3b9d1e6deb"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.965384819462981*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"d541d8a7-bbde-4bea-a728-812687b0e4a4"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.965384819463434*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"babe2da3-53fd-438b-81cd-2a98c55cb7fb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Another Example :", "Subsection",
 CellChangeTimes->{{3.9469124781449547`*^9, 3.946912481752939*^9}, {
  3.965599628078134*^9, 3.965599629902583*^9}, {3.965599689328473*^9, 
  3.965599719494178*^9}},ExpressionUUID->"9caf9bb8-b28b-41c2-a370-\
219d228027c9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"P", ",", "Q", ",", "R"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fun3", "[", 
   RowBox[{
    RowBox[{"p1_", "/;", 
     RowBox[{"BooleanQ", "[", "p1", "]"}]}], ",", 
    RowBox[{"p2_", "/;", 
     RowBox[{"BooleanQ", "[", "p2", "]"}]}], ",", 
    RowBox[{"p3_", "/;", 
     RowBox[{"BooleanQ", "[", "p3", "]"}]}], ",", 
    RowBox[{"p4_", "/;", 
     RowBox[{"BooleanQ", "[", "p4", "]"}]}], ",", 
    RowBox[{"p5_", "/;", 
     RowBox[{"BooleanQ", "[", "p5", "]"}]}], ",", 
    RowBox[{"p6_", "/;", 
     RowBox[{"BooleanQ", "[", "p6", "]"}]}], ",", 
    RowBox[{"p7_", "/;", 
     RowBox[{"BooleanQ", "[", "p7", "]"}]}], ",", 
    RowBox[{"p8_", "/;", 
     RowBox[{"BooleanQ", "[", "p8", "]"}]}]}], "]"}], ":=", 
  RowBox[{"BooleanFunction", "[", 
   RowBox[{
    RowBox[{"MapThread", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#1", "->", "#2"}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tuples", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}], ",", "3"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "p1", ",", "p2", ",", "p3", ",", "p4", ",", "p5", ",", "p6", ",", 
          "p7", ",", "p8"}], "}"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ColFunG", "[", "s_", "]"}], ":=", 
  RowBox[{"DynamicModule", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"p1", "=", "Null"}], ",", 
      RowBox[{"p2", "=", "Null"}], ",", 
      RowBox[{"p3", "=", "Null"}], ",", 
      RowBox[{"p4", "=", "Null"}], ",", 
      RowBox[{"p5", "=", "Null"}], ",", 
      RowBox[{"p6", "=", "Null"}], ",", 
      RowBox[{"p7", "=", "Null"}], ",", 
      RowBox[{"p8", "=", "Null"}], ",", 
      RowBox[{"result", "=", "\"\<\>\""}]}], "}"}], ",", 
    "\[IndentingNewLine]", "  ", 
    RowBox[{"Grid", "@", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ToString", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
         "   ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p16", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "    ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p2", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "    ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p3", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "    ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p4", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "   ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p5", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "    ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p6", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "    ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p7", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "    ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p8", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Button", "[", 
          RowBox[{"\"\<Evaluate\>\"", ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"result", "=", 
               RowBox[{"Fun3", "[", 
                RowBox[{
                "p1", ",", "p2", ",", "p3", ",", "p4", ",", "p5", ",", "p6", 
                 ",", "p7", ",", "p8"}], "]"}]}], ",", 
              RowBox[{"s", "=", "result"}]}], "}"}], ";"}]}], "]"}], ",", 
         "\[IndentingNewLine]", "    ", 
         RowBox[{"Dynamic", "[", " ", "\[IndentingNewLine]", "            ", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"ToString", "[", 
             RowBox[{"FullSimplify", "[", "result", "]"}], "]"}], ",", 
            "Bold"}], "]"}], "]"}]}], "\[IndentingNewLine]", "  ", "}"}], 
       "}"}]}]}], ",", 
    RowBox[{"SaveDefinitions", "->", "True"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{"Prepend", "[", 
        RowBox[{
         RowBox[{"Tuples", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}], ",", "3"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\""}], "}"}]}], 
        "]"}], ",", 
       RowBox[{"Spacings", "->", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "1.25"}], "}"}]}], ",", 
       RowBox[{"BaselinePosition", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"6", ",", "1"}], "}"}], ",", "Bottom"}], "}"}]}]}], "]"}], 
     ",", 
     RowBox[{"ColFunG", "[", "P", "]"}], ",", 
     RowBox[{"ColFunG", "[", "Q", "]"}], ",", 
     RowBox[{"ColFunG", "[", "R", "]"}]}], "}"}], ",", 
   RowBox[{"Spacer", "[", "2", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.947072258474415*^9},ExpressionUUID->"f4aa970b-02bd-40d5-b6f9-\
78c8b385db3f"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{2}, "Spacer1"], 
   TagBox[
    GridBox[{{"\"a\"", "\"b\"", "\"c\""}, {"True", "True", "True"}, {
      "True", "True", "False"}, {"True", "False", "True"}, {
      "True", "False", "False"}, {"False", "True", "True"}, {
      "False", "True", "False"}, {"False", "False", "True"}, {
      "False", "False", "False"}}, AutoDelete -> False, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.25}}}, 
     BaselinePosition -> {{6, 1}, Bottom}], "Grid"], 
   DynamicModuleBox[{$CellContext`p1$$ = True, $CellContext`p2$$ = 
     True, $CellContext`p3$$ = False, $CellContext`p4$$ = 
     False, $CellContext`p5$$ = True, $CellContext`p6$$ = 
     True, $CellContext`p7$$ = True, $CellContext`p8$$ = 
     True, $CellContext`result$$ = Or[
       Not[$CellContext`a], $CellContext`b]}, 
    TagBox[
     GridBox[{{"\"P\""}, {
        InputFieldBox[
         Dynamic[$CellContext`p1$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p2$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p3$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p4$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p5$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p6$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p7$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p8$$]]}, {
        ButtonBox[
        "\"Evaluate\"", Appearance -> Automatic, 
         ButtonFunction :> ({$CellContext`result$$ = \
$CellContext`Fun3[$CellContext`p1$$, $CellContext`p2$$, $CellContext`p3$$, \
$CellContext`p4$$, $CellContext`p5$$, $CellContext`p6$$, $CellContext`p7$$, \
$CellContext`p8$$], $CellContext`P = $CellContext`result$$}; Null), Evaluator -> 
         Automatic, Method -> "Preemptive"]}, {
        DynamicBox[
         ToBoxes[
          Style[
           ToString[
            FullSimplify[$CellContext`result$$]], Bold], StandardForm], 
         ImageSizeCache -> {99.328125, {3.48046875, 12.55078125}}]}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
    DynamicModuleValues :> {}, Initialization :> ($CellContext`Fun3[
       Condition[
        Pattern[$CellContext`p1, 
         Blank[]], 
        BooleanQ[$CellContext`p1]], 
       Condition[
        Pattern[$CellContext`p2, 
         Blank[]], 
        BooleanQ[$CellContext`p2]], 
       Condition[
        Pattern[$CellContext`p3, 
         Blank[]], 
        BooleanQ[$CellContext`p3]], 
       Condition[
        Pattern[$CellContext`p4, 
         Blank[]], 
        BooleanQ[$CellContext`p4]], 
       Condition[
        Pattern[$CellContext`p5, 
         Blank[]], 
        BooleanQ[$CellContext`p5]], 
       Condition[
        Pattern[$CellContext`p6, 
         Blank[]], 
        BooleanQ[$CellContext`p6]], 
       Condition[
        Pattern[$CellContext`p7, 
         Blank[]], 
        BooleanQ[$CellContext`p7]], 
       Condition[
        Pattern[$CellContext`p8, 
         Blank[]], 
        BooleanQ[$CellContext`p8]]] := BooleanFunction[
       MapThread[# -> #2& , {
         Tuples[{True, False}, 
          3], {$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, $CellContext`p5, $CellContext`p6, $CellContext`p7, \
$CellContext`p8}}], {$CellContext`a, $CellContext`b, $CellContext`c}])], 
   DynamicModuleBox[{$CellContext`p1$$ = True, $CellContext`p2$$ = 
     False, $CellContext`p3$$ = False, $CellContext`p4$$ = 
     True, $CellContext`p5$$ = True, $CellContext`p6$$ = 
     False, $CellContext`p7$$ = False, $CellContext`p8$$ = 
     True, $CellContext`result$$ = Or[
       And[$CellContext`b, $CellContext`c], 
       And[
        Not[$CellContext`b], 
        Not[$CellContext`c]]]}, 
    TagBox[
     GridBox[{{"\"Q\""}, {
        InputFieldBox[
         Dynamic[$CellContext`p1$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p2$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p3$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p4$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p5$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p6$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p7$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p8$$]]}, {
        ButtonBox[
        "\"Evaluate\"", Appearance -> Automatic, 
         ButtonFunction :> ({$CellContext`result$$ = \
$CellContext`Fun3[$CellContext`p1$$, $CellContext`p2$$, $CellContext`p3$$, \
$CellContext`p4$$, $CellContext`p5$$, $CellContext`p6$$, $CellContext`p7$$, \
$CellContext`p8$$], $CellContext`Q = $CellContext`result$$}; Null), Evaluator -> 
         Automatic, Method -> "Preemptive"]}, {
        DynamicBox[
         ToBoxes[
          Style[
           ToString[
            FullSimplify[$CellContext`result$$]], Bold], StandardForm], 
         ImageSizeCache -> {76.40625, {3.48046875, 12.55078125}}]}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
    DynamicModuleValues :> {}, Initialization :> ($CellContext`Fun3[
       Condition[
        Pattern[$CellContext`p1, 
         Blank[]], 
        BooleanQ[$CellContext`p1]], 
       Condition[
        Pattern[$CellContext`p2, 
         Blank[]], 
        BooleanQ[$CellContext`p2]], 
       Condition[
        Pattern[$CellContext`p3, 
         Blank[]], 
        BooleanQ[$CellContext`p3]], 
       Condition[
        Pattern[$CellContext`p4, 
         Blank[]], 
        BooleanQ[$CellContext`p4]], 
       Condition[
        Pattern[$CellContext`p5, 
         Blank[]], 
        BooleanQ[$CellContext`p5]], 
       Condition[
        Pattern[$CellContext`p6, 
         Blank[]], 
        BooleanQ[$CellContext`p6]], 
       Condition[
        Pattern[$CellContext`p7, 
         Blank[]], 
        BooleanQ[$CellContext`p7]], 
       Condition[
        Pattern[$CellContext`p8, 
         Blank[]], 
        BooleanQ[$CellContext`p8]]] := BooleanFunction[
       MapThread[# -> #2& , {
         Tuples[{True, False}, 
          3], {$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, $CellContext`p5, $CellContext`p6, $CellContext`p7, \
$CellContext`p8}}], {$CellContext`a, $CellContext`b, $CellContext`c}])], 
   DynamicModuleBox[{$CellContext`p1$$ = False, $CellContext`p2$$ = 
     False, $CellContext`p3$$ = True, $CellContext`p4$$ = 
     True, $CellContext`p5$$ = True, $CellContext`p6$$ = 
     True, $CellContext`p7$$ = False, $CellContext`p8$$ = 
     False, $CellContext`result$$ = Or[
       And[$CellContext`a, 
        Not[$CellContext`b]], 
       And[
        Not[$CellContext`a], $CellContext`b]]}, 
    TagBox[
     GridBox[{{"\"R\""}, {
        InputFieldBox[
         Dynamic[$CellContext`p1$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p2$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p3$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p4$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p5$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p6$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p7$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p8$$]]}, {
        ButtonBox[
        "\"Evaluate\"", Appearance -> Automatic, 
         ButtonFunction :> ({$CellContext`result$$ = \
$CellContext`Fun3[$CellContext`p1$$, $CellContext`p2$$, $CellContext`p3$$, \
$CellContext`p4$$, $CellContext`p5$$, $CellContext`p6$$, $CellContext`p7$$, \
$CellContext`p8$$], $CellContext`R = $CellContext`result$$}; Null), Evaluator -> 
         Automatic, Method -> "Preemptive"]}, {
        DynamicBox[
         ToBoxes[
          Style[
           ToString[
            FullSimplify[$CellContext`result$$]], Bold], StandardForm], 
         ImageSizeCache -> {68.765625, {3.48046875, 12.55078125}}]}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
    DynamicModuleValues :> {}, Initialization :> ($CellContext`Fun3[
       Condition[
        Pattern[$CellContext`p1, 
         Blank[]], 
        BooleanQ[$CellContext`p1]], 
       Condition[
        Pattern[$CellContext`p2, 
         Blank[]], 
        BooleanQ[$CellContext`p2]], 
       Condition[
        Pattern[$CellContext`p3, 
         Blank[]], 
        BooleanQ[$CellContext`p3]], 
       Condition[
        Pattern[$CellContext`p4, 
         Blank[]], 
        BooleanQ[$CellContext`p4]], 
       Condition[
        Pattern[$CellContext`p5, 
         Blank[]], 
        BooleanQ[$CellContext`p5]], 
       Condition[
        Pattern[$CellContext`p6, 
         Blank[]], 
        BooleanQ[$CellContext`p6]], 
       Condition[
        Pattern[$CellContext`p7, 
         Blank[]], 
        BooleanQ[$CellContext`p7]], 
       Condition[
        Pattern[$CellContext`p8, 
         Blank[]], 
        BooleanQ[$CellContext`p8]]] := BooleanFunction[
       MapThread[# -> #2& , {
         Tuples[{True, False}, 
          3], {$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, $CellContext`p5, $CellContext`p6, $CellContext`p7, \
$CellContext`p8}}], {$CellContext`a, $CellContext`b, $CellContext`c}])]},
  "RowWithSeparator"]], "Output",
 CellChangeTimes->{3.946911674603567*^9},
 CellLabel->
  "Out[285]=",ExpressionUUID->"a179e639-eb78-4b0f-bb40-ffb252f1fcf5"]
}, Open  ]],

Cell["\<\
1.) The killer is either in the basement or the attic.
2.) If the killer is in the attic, then he must also be in the basement.
3.) The circuit breakers are in the basement.
Can the killer access the circuit breakers?\
\>", "Text",
 CellChangeTimes->{{3.946912083459197*^9, 3.946912166170938*^9}, {
   3.946912268383465*^9, 3.946912268986274*^9}, {3.946912506717545*^9, 
   3.946912559797778*^9}, {3.946912618004444*^9, 3.946912666253393*^9}, 
   3.946912702720491*^9, {3.965599565212325*^9, 3.965599587657461*^9}, {
   3.965599724664156*^9, 3.9655997610698957`*^9}, {3.965599960372863*^9, 
   3.9656000179780807`*^9}},ExpressionUUID->"ce01fe12-1ced-4827-85ab-\
cd0933fd8f3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Puzzle type 2: Two Truths and a Lie", "Subsection",
 CellChangeTimes->{{3.946912729809523*^9, 
  3.946912736671742*^9}},ExpressionUUID->"54614cb7-d4c1-4e30-b808-\
a47fdf0b9170"],

Cell["\<\
For this puzzle type, we must present three clues: two truths and a lie. We \
don\[CloseCurlyQuote]t say which clue is the lie.
There should be a unique solution. That is, a unique assignment of truth \
values that makes two of the clues true and the third one false.
Essentially, this means that every row in the Truth table consists of at most \
1 \[OpenCurlyDoubleQuote]True\[CloseCurlyDoubleQuote] value, except for one \
row that has 2 \[OpenCurlyDoubleQuote]True\[CloseCurlyDoubleQuote] values.\
\>", "Text",
 CellChangeTimes->{{3.9469127583454123`*^9, 3.946912890578177*^9}, {
  3.9469133071794033`*^9, 
  3.946913350478775*^9}},ExpressionUUID->"a96b4e16-8819-4eb7-b3b9-\
9fca630ed7f0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"P", ",", "Q", ",", "R"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fun3", "[", 
   RowBox[{
    RowBox[{"p1_", "/;", 
     RowBox[{"BooleanQ", "[", "p1", "]"}]}], ",", 
    RowBox[{"p2_", "/;", 
     RowBox[{"BooleanQ", "[", "p2", "]"}]}], ",", 
    RowBox[{"p3_", "/;", 
     RowBox[{"BooleanQ", "[", "p3", "]"}]}], ",", 
    RowBox[{"p4_", "/;", 
     RowBox[{"BooleanQ", "[", "p4", "]"}]}], ",", 
    RowBox[{"p5_", "/;", 
     RowBox[{"BooleanQ", "[", "p5", "]"}]}], ",", 
    RowBox[{"p6_", "/;", 
     RowBox[{"BooleanQ", "[", "p6", "]"}]}], ",", 
    RowBox[{"p7_", "/;", 
     RowBox[{"BooleanQ", "[", "p7", "]"}]}], ",", 
    RowBox[{"p8_", "/;", 
     RowBox[{"BooleanQ", "[", "p8", "]"}]}]}], "]"}], ":=", 
  RowBox[{"BooleanFunction", "[", 
   RowBox[{
    RowBox[{"MapThread", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#1", "->", "#2"}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tuples", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}], ",", "3"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "p1", ",", "p2", ",", "p3", ",", "p4", ",", "p5", ",", "p6", ",", 
          "p7", ",", "p8"}], "}"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ColFunG", "[", "s_", "]"}], ":=", 
  RowBox[{"DynamicModule", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"p1", "=", "Null"}], ",", 
      RowBox[{"p2", "=", "Null"}], ",", 
      RowBox[{"p3", "=", "Null"}], ",", 
      RowBox[{"p4", "=", "Null"}], ",", 
      RowBox[{"p5", "=", "Null"}], ",", 
      RowBox[{"p6", "=", "Null"}], ",", 
      RowBox[{"p7", "=", "Null"}], ",", 
      RowBox[{"p8", "=", "Null"}], ",", 
      RowBox[{"result", "=", "\"\<\>\""}]}], "}"}], ",", 
    "\[IndentingNewLine]", "  ", 
    RowBox[{"Grid", "@", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ToString", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
         "   ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p1", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "    ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p2", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "    ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p3", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "    ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p4", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "   ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p5", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "    ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p6", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "    ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p7", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "    ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p8", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Button", "[", 
          RowBox[{"\"\<Evaluate\>\"", ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"result", "=", 
               RowBox[{"Fun3", "[", 
                RowBox[{
                "p1", ",", "p2", ",", "p3", ",", "p4", ",", "p5", ",", "p6", 
                 ",", "p7", ",", "p8"}], "]"}]}], ",", 
              RowBox[{"s", "=", "result"}]}], "}"}], ";"}]}], "]"}], ",", 
         "\[IndentingNewLine]", "    ", 
         RowBox[{"Dynamic", "[", " ", "\[IndentingNewLine]", "            ", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"ToString", "[", 
             RowBox[{"FullSimplify", "[", "result", "]"}], "]"}], ",", 
            "Bold"}], "]"}], "]"}]}], "\[IndentingNewLine]", "  ", "}"}], 
       "}"}]}]}], ",", 
    RowBox[{"SaveDefinitions", "->", "True"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{"Prepend", "[", 
        RowBox[{
         RowBox[{"Tuples", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}], ",", "3"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\""}], "}"}]}], 
        "]"}], ",", 
       RowBox[{"Spacings", "->", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "1.25"}], "}"}]}], ",", 
       RowBox[{"BaselinePosition", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"6", ",", "1"}], "}"}], ",", "Bottom"}], "}"}]}]}], "]"}], 
     ",", 
     RowBox[{"ColFunG", "[", "P", "]"}], ",", 
     RowBox[{"ColFunG", "[", "Q", "]"}], ",", 
     RowBox[{"ColFunG", "[", "R", "]"}]}], "}"}], ",", 
   RowBox[{"Spacer", "[", "2", "]"}]}], "]"}]}], "Input",
 CellLabel->
  "In[288]:=",ExpressionUUID->"ce2c65b1-2926-4fef-ad87-fc9536fabd82"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{2}, "Spacer1"], 
   TagBox[
    GridBox[{{"\"a\"", "\"b\"", "\"c\""}, {"True", "True", "True"}, {
      "True", "True", "False"}, {"True", "False", "True"}, {
      "True", "False", "False"}, {"False", "True", "True"}, {
      "False", "True", "False"}, {"False", "False", "True"}, {
      "False", "False", "False"}}, AutoDelete -> False, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.25}}}, 
     BaselinePosition -> {{6, 1}, Bottom}], "Grid"], 
   DynamicModuleBox[{$CellContext`p1$$ = True, $CellContext`p2$$ = 
     False, $CellContext`p3$$ = False, $CellContext`p4$$ = 
     True, $CellContext`p5$$ = False, $CellContext`p6$$ = 
     False, $CellContext`p7$$ = True, $CellContext`p8$$ = 
     True, $CellContext`result$$ = Or[
       And[$CellContext`a, $CellContext`b, $CellContext`c], 
       And[
        Not[$CellContext`a], 
        Not[$CellContext`b]], 
       And[
        Not[$CellContext`b], 
        Not[$CellContext`c]]]}, 
    TagBox[
     GridBox[{{"\"P\""}, {
        InputFieldBox[
         Dynamic[$CellContext`p1$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p2$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p3$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p4$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p5$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p6$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p7$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p8$$]]}, {
        ButtonBox[
        "\"Evaluate\"", Appearance -> Automatic, 
         ButtonFunction :> ({$CellContext`result$$ = \
$CellContext`Fun3[$CellContext`p1$$, $CellContext`p2$$, $CellContext`p3$$, \
$CellContext`p4$$, $CellContext`p5$$, $CellContext`p6$$, $CellContext`p7$$, \
$CellContext`p8$$], $CellContext`P = $CellContext`result$$}; Null), Evaluator -> 
         Automatic, Method -> "Preemptive"]}, {
        DynamicBox[
         ToBoxes[
          Style[
           ToString[
            FullSimplify[$CellContext`result$$]], Bold], StandardForm], 
         ImageSizeCache -> {114.609375, {3.48046875, 12.55078125}}]}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
    DynamicModuleValues :> {}, Initialization :> ($CellContext`Fun3[
       Condition[
        Pattern[$CellContext`p1, 
         Blank[]], 
        BooleanQ[$CellContext`p1]], 
       Condition[
        Pattern[$CellContext`p2, 
         Blank[]], 
        BooleanQ[$CellContext`p2]], 
       Condition[
        Pattern[$CellContext`p3, 
         Blank[]], 
        BooleanQ[$CellContext`p3]], 
       Condition[
        Pattern[$CellContext`p4, 
         Blank[]], 
        BooleanQ[$CellContext`p4]], 
       Condition[
        Pattern[$CellContext`p5, 
         Blank[]], 
        BooleanQ[$CellContext`p5]], 
       Condition[
        Pattern[$CellContext`p6, 
         Blank[]], 
        BooleanQ[$CellContext`p6]], 
       Condition[
        Pattern[$CellContext`p7, 
         Blank[]], 
        BooleanQ[$CellContext`p7]], 
       Condition[
        Pattern[$CellContext`p8, 
         Blank[]], 
        BooleanQ[$CellContext`p8]]] := BooleanFunction[
       MapThread[# -> #2& , {
         Tuples[{True, False}, 
          3], {$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, $CellContext`p5, $CellContext`p6, $CellContext`p7, \
$CellContext`p8}}], {$CellContext`a, $CellContext`b, $CellContext`c}])], 
   DynamicModuleBox[{$CellContext`p1$$ = False, $CellContext`p2$$ = 
     False, $CellContext`p3$$ = True, $CellContext`p4$$ = 
     False, $CellContext`p5$$ = False, $CellContext`p6$$ = 
     False, $CellContext`p7$$ = True, $CellContext`p8$$ = 
     False, $CellContext`result$$ = And[
       Not[$CellContext`b], $CellContext`c]}, 
    TagBox[
     GridBox[{{"\"Q\""}, {
        InputFieldBox[
         Dynamic[$CellContext`p1$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p2$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p3$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p4$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p5$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p6$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p7$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p8$$]]}, {
        ButtonBox[
        "\"Evaluate\"", Appearance -> Automatic, 
         ButtonFunction :> ({$CellContext`result$$ = \
$CellContext`Fun3[$CellContext`p1$$, $CellContext`p2$$, $CellContext`p3$$, \
$CellContext`p4$$, $CellContext`p5$$, $CellContext`p6$$, $CellContext`p7$$, \
$CellContext`p8$$], $CellContext`Q = $CellContext`result$$}; Null), Evaluator -> 
         Automatic, Method -> "Preemptive"]}, {
        DynamicBox[
         ToBoxes[
          Style[
           ToString[
            FullSimplify[$CellContext`result$$]], Bold], StandardForm], 
         ImageSizeCache -> {53.484375, {3.48046875, 12.55078125}}]}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
    DynamicModuleValues :> {}, Initialization :> ($CellContext`Fun3[
       Condition[
        Pattern[$CellContext`p1, 
         Blank[]], 
        BooleanQ[$CellContext`p1]], 
       Condition[
        Pattern[$CellContext`p2, 
         Blank[]], 
        BooleanQ[$CellContext`p2]], 
       Condition[
        Pattern[$CellContext`p3, 
         Blank[]], 
        BooleanQ[$CellContext`p3]], 
       Condition[
        Pattern[$CellContext`p4, 
         Blank[]], 
        BooleanQ[$CellContext`p4]], 
       Condition[
        Pattern[$CellContext`p5, 
         Blank[]], 
        BooleanQ[$CellContext`p5]], 
       Condition[
        Pattern[$CellContext`p6, 
         Blank[]], 
        BooleanQ[$CellContext`p6]], 
       Condition[
        Pattern[$CellContext`p7, 
         Blank[]], 
        BooleanQ[$CellContext`p7]], 
       Condition[
        Pattern[$CellContext`p8, 
         Blank[]], 
        BooleanQ[$CellContext`p8]]] := BooleanFunction[
       MapThread[# -> #2& , {
         Tuples[{True, False}, 
          3], {$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, $CellContext`p5, $CellContext`p6, $CellContext`p7, \
$CellContext`p8}}], {$CellContext`a, $CellContext`b, $CellContext`c}])], 
   DynamicModuleBox[{$CellContext`p1$$ = False, $CellContext`p2$$ = 
     False, $CellContext`p3$$ = False, $CellContext`p4$$ = 
     False, $CellContext`p5$$ = True, $CellContext`p6$$ = 
     True, $CellContext`p7$$ = False, $CellContext`p8$$ = 
     False, $CellContext`result$$ = And[
       Not[$CellContext`a], $CellContext`b]}, 
    TagBox[
     GridBox[{{"\"R\""}, {
        InputFieldBox[
         Dynamic[$CellContext`p1$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p2$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p3$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p4$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p5$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p6$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p7$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p8$$]]}, {
        ButtonBox[
        "\"Evaluate\"", Appearance -> Automatic, 
         ButtonFunction :> ({$CellContext`result$$ = \
$CellContext`Fun3[$CellContext`p1$$, $CellContext`p2$$, $CellContext`p3$$, \
$CellContext`p4$$, $CellContext`p5$$, $CellContext`p6$$, $CellContext`p7$$, \
$CellContext`p8$$], $CellContext`R = $CellContext`result$$}; Null), Evaluator -> 
         Automatic, Method -> "Preemptive"]}, {
        DynamicBox[
         ToBoxes[
          Style[
           ToString[
            FullSimplify[$CellContext`result$$]], Bold], StandardForm], 
         ImageSizeCache -> {53.484375, {3.48046875, 12.55078125}}]}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
    DynamicModuleValues :> {}, Initialization :> ($CellContext`Fun3[
       Condition[
        Pattern[$CellContext`p1, 
         Blank[]], 
        BooleanQ[$CellContext`p1]], 
       Condition[
        Pattern[$CellContext`p2, 
         Blank[]], 
        BooleanQ[$CellContext`p2]], 
       Condition[
        Pattern[$CellContext`p3, 
         Blank[]], 
        BooleanQ[$CellContext`p3]], 
       Condition[
        Pattern[$CellContext`p4, 
         Blank[]], 
        BooleanQ[$CellContext`p4]], 
       Condition[
        Pattern[$CellContext`p5, 
         Blank[]], 
        BooleanQ[$CellContext`p5]], 
       Condition[
        Pattern[$CellContext`p6, 
         Blank[]], 
        BooleanQ[$CellContext`p6]], 
       Condition[
        Pattern[$CellContext`p7, 
         Blank[]], 
        BooleanQ[$CellContext`p7]], 
       Condition[
        Pattern[$CellContext`p8, 
         Blank[]], 
        BooleanQ[$CellContext`p8]]] := BooleanFunction[
       MapThread[# -> #2& , {
         Tuples[{True, False}, 
          3], {$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, $CellContext`p5, $CellContext`p6, $CellContext`p7, \
$CellContext`p8}}], {$CellContext`a, $CellContext`b, $CellContext`c}])]},
  "RowWithSeparator"]], "Output",
 CellChangeTimes->{3.946912907792677*^9},
 CellLabel->
  "Out[291]=",ExpressionUUID->"68944a0c-77f2-4bb3-9d4c-c7b1193274d6"]
}, Open  ]],

Cell["\<\
1.) We have a party whenever there\[CloseCurlyQuote]s alcohol and chocolate. \
*This doesn\[CloseCurlyQuote]t exactly mean what I want it to mean...*
2.) We don\[CloseCurlyQuote]t have a party, but we have chocolate.
3.) We don\[CloseCurlyQuote]t have alcohol, but we party anyway.
Is there a party? What\[CloseCurlyQuote]s the lie?

Alternate version:
(To scam is to lie and profit)
(I won\[CloseCurlyQuote]t scam, but I\[CloseCurlyQuote]ll profit.)
I won\[CloseCurlyQuote]t lie, but I\[CloseCurlyQuote]ll scam anyway.
We use the following conversion: a= \[OpenCurlyDoubleQuote]There\
\[CloseCurlyQuote]s alcohol.\[CloseCurlyDoubleQuote] b= \
\[OpenCurlyDoubleQuote]We have a party.\[CloseCurlyDoubleQuote] c= \
\[OpenCurlyDoubleQuote]There\[CloseCurlyQuote]s chocolate.\
\[CloseCurlyDoubleQuote] \
\>", "Text",
 CellChangeTimes->{{3.946913414324836*^9, 3.946913481698807*^9}, {
  3.94691360333117*^9, 3.946913604289578*^9}, {3.9469137022540894`*^9, 
  3.94691370475025*^9}, {3.946917284724106*^9, 3.946917323591175*^9}, {
  3.947710556170142*^9, 3.947710574300769*^9}, {3.947710933256832*^9, 
  3.947710943795083*^9}, {3.94804696760041*^9, 3.9480470006355467`*^9}, {
  3.948047040538185*^9, 3.948047065321753*^9}, {3.948049709548444*^9, 
  3.9480497332659807`*^9}},ExpressionUUID->"ef10f1ea-24c3-4a7b-8f63-\
77907ae00e50"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SatisfiabilityCount", "[", 
  RowBox[{
   RowBox[{"!", "P"}], "&&", "Q", "&&", "R"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"SatisfiabilityCount", "[", 
  RowBox[{"P", "&&", 
   RowBox[{"!", "Q"}], "&&", "R"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"SatisfiabilityCount", "[", 
  RowBox[{"P", "&&", "Q", "&&", 
   RowBox[{"!", "R"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.946917204502041*^9, 3.946917226006545*^9}},
 CellLabel->
  "In[613]:=",ExpressionUUID->"5ee9f470-5e21-4fe6-983e-f6baa0c01be4"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.9469172272379293`*^9},
 CellLabel->
  "Out[613]=",ExpressionUUID->"a6d73137-e14f-418c-8eb2-bcfb1539d797"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.94691722724179*^9},
 CellLabel->
  "Out[614]=",ExpressionUUID->"e790646b-7385-43b1-b2f2-cb8dfb9fafca"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.946917227244231*^9},
 CellLabel->
  "Out[615]=",ExpressionUUID->"17633067-7c85-4aa2-840d-4667b12910aa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SatisfiabilityInstances", "[", 
  RowBox[{
   RowBox[{"P", "&&", "Q", "&&", 
    RowBox[{"!", "R"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.946917237609449*^9, 3.946917269403247*^9}},
 CellLabel->
  "In[618]:=",ExpressionUUID->"9282194a-0dac-4188-97db-5c8d9859bb96"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"False", ",", "False", ",", "True"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.946917247633874*^9, 3.946917270256321*^9}},
 CellLabel->
  "Out[618]=",ExpressionUUID->"e923d682-6287-4a5b-8833-61538b662ed4"]
}, Open  ]],

Cell["", "Text",
 CellChangeTimes->{
  3.9480485755207567`*^9},ExpressionUUID->"00e11c36-5c99-46e4-b044-\
2e0bc56b7db0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"P", ",", "Q", ",", "R", ",", "a", ",", "b", ",", "c"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fun3", "[", 
   RowBox[{
    RowBox[{"p1_", "/;", 
     RowBox[{"BooleanQ", "[", "p1", "]"}]}], ",", 
    RowBox[{"p2_", "/;", 
     RowBox[{"BooleanQ", "[", "p2", "]"}]}], ",", 
    RowBox[{"p3_", "/;", 
     RowBox[{"BooleanQ", "[", "p3", "]"}]}], ",", 
    RowBox[{"p4_", "/;", 
     RowBox[{"BooleanQ", "[", "p4", "]"}]}], ",", 
    RowBox[{"p5_", "/;", 
     RowBox[{"BooleanQ", "[", "p5", "]"}]}], ",", 
    RowBox[{"p6_", "/;", 
     RowBox[{"BooleanQ", "[", "p6", "]"}]}], ",", 
    RowBox[{"p7_", "/;", 
     RowBox[{"BooleanQ", "[", "p7", "]"}]}], ",", 
    RowBox[{"p8_", "/;", 
     RowBox[{"BooleanQ", "[", "p8", "]"}]}]}], "]"}], ":=", 
  RowBox[{"BooleanFunction", "[", 
   RowBox[{
    RowBox[{"MapThread", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#1", "->", "#2"}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tuples", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}], ",", "3"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "p1", ",", "p2", ",", "p3", ",", "p4", ",", "p5", ",", "p6", ",", 
          "p7", ",", "p8"}], "}"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ColFunG", "[", "s_", "]"}], ":=", 
  RowBox[{"DynamicModule", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"p1", "=", "Null"}], ",", 
      RowBox[{"p2", "=", "Null"}], ",", 
      RowBox[{"p3", "=", "Null"}], ",", 
      RowBox[{"p4", "=", "Null"}], ",", 
      RowBox[{"p5", "=", "Null"}], ",", 
      RowBox[{"p6", "=", "Null"}], ",", 
      RowBox[{"p7", "=", "Null"}], ",", 
      RowBox[{"p8", "=", "Null"}], ",", 
      RowBox[{"result", "=", "\"\<\>\""}]}], "}"}], ",", 
    "\[IndentingNewLine]", "  ", 
    RowBox[{"Grid", "@", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ToString", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
         "   ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p1", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "    ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p2", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "    ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p3", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "    ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p4", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "   ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p5", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "    ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p6", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "    ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p7", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "    ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p8", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Button", "[", 
          RowBox[{"\"\<Evaluate\>\"", ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"result", "=", 
               RowBox[{"Fun3", "[", 
                RowBox[{
                "p1", ",", "p2", ",", "p3", ",", "p4", ",", "p5", ",", "p6", 
                 ",", "p7", ",", "p8"}], "]"}]}], ",", 
              RowBox[{"s", "=", "result"}]}], "}"}], ";"}]}], "]"}], ",", 
         "\[IndentingNewLine]", "    ", 
         RowBox[{"Dynamic", "[", " ", "\[IndentingNewLine]", "            ", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"ToString", "[", 
             RowBox[{"FullSimplify", "[", "result", "]"}], "]"}], ",", 
            "Bold"}], "]"}], "]"}]}], "\[IndentingNewLine]", "  ", "}"}], 
       "}"}]}]}], ",", 
    RowBox[{"SaveDefinitions", "->", "True"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{"Prepend", "[", 
        RowBox[{
         RowBox[{"Tuples", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}], ",", "3"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\""}], "}"}]}], 
        "]"}], ",", 
       RowBox[{"Spacings", "->", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "1.25"}], "}"}]}], ",", 
       RowBox[{"BaselinePosition", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"6", ",", "1"}], "}"}], ",", "Bottom"}], "}"}]}]}], "]"}], 
     ",", 
     RowBox[{"ColFunG", "[", "P", "]"}], ",", 
     RowBox[{"ColFunG", "[", "Q", "]"}], ",", 
     RowBox[{"ColFunG", "[", "R", "]"}]}], "}"}], ",", 
   RowBox[{"Spacer", "[", "2", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.948048875266597*^9, 3.94804887685956*^9}},
 CellLabel->
  "In[371]:=",ExpressionUUID->"41582be3-3c62-40bf-9ebb-51403e3c7ec7"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{2}, "Spacer1"], 
   TagBox[
    GridBox[{{"\"a\"", "\"b\"", "\"c\""}, {"True", "True", "True"}, {
      "True", "True", "False"}, {"True", "False", "True"}, {
      "True", "False", "False"}, {"False", "True", "True"}, {
      "False", "True", "False"}, {"False", "False", "True"}, {
      "False", "False", "False"}}, AutoDelete -> False, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.25}}}, 
     BaselinePosition -> {{6, 1}, Bottom}], "Grid"], 
   DynamicModuleBox[{$CellContext`p1$$ = True, $CellContext`p2$$ = 
     True, $CellContext`p3$$ = False, $CellContext`p4$$ = 
     False, $CellContext`p5$$ = True, $CellContext`p6$$ = 
     True, $CellContext`p7$$ = True, $CellContext`p8$$ = 
     False, $CellContext`result$$ = Or[
       And[
        Not[$CellContext`a], $CellContext`c], $CellContext`b]}, 
    TagBox[
     GridBox[{{"\"P\""}, {
        InputFieldBox[
         Dynamic[$CellContext`p1$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p2$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p3$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p4$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p5$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p6$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p7$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p8$$]]}, {
        ButtonBox[
        "\"Evaluate\"", Appearance -> Automatic, 
         ButtonFunction :> ({$CellContext`result$$ = \
$CellContext`Fun3[$CellContext`p1$$, $CellContext`p2$$, $CellContext`p3$$, \
$CellContext`p4$$, $CellContext`p5$$, $CellContext`p6$$, $CellContext`p7$$, \
$CellContext`p8$$], $CellContext`P = $CellContext`result$$}; Null), Evaluator -> 
         Automatic, Method -> "Preemptive"]}, {
        DynamicBox[
         ToBoxes[
          Style[
           ToString[
            FullSimplify[$CellContext`result$$]], Bold], StandardForm], 
         ImageSizeCache -> {106.96875, {3.48046875, 12.55078125}}]}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
    DynamicModuleValues :> {}, Initialization :> {$CellContext`Fun3[
        Condition[
         Pattern[$CellContext`p1, 
          Blank[]], 
         BooleanQ[$CellContext`p1]], 
        Condition[
         Pattern[$CellContext`p2, 
          Blank[]], 
         BooleanQ[$CellContext`p2]], 
        Condition[
         Pattern[$CellContext`p3, 
          Blank[]], 
         BooleanQ[$CellContext`p3]], 
        Condition[
         Pattern[$CellContext`p4, 
          Blank[]], 
         BooleanQ[$CellContext`p4]], 
        Condition[
         Pattern[$CellContext`p5, 
          Blank[]], 
         BooleanQ[$CellContext`p5]], 
        Condition[
         Pattern[$CellContext`p6, 
          Blank[]], 
         BooleanQ[$CellContext`p6]], 
        Condition[
         Pattern[$CellContext`p7, 
          Blank[]], 
         BooleanQ[$CellContext`p7]], 
        Condition[
         Pattern[$CellContext`p8, 
          Blank[]], 
         BooleanQ[$CellContext`p8]]] := BooleanFunction[
        MapThread[# -> #2& , {
          
          Tuples[{True, False}, 
           3], {$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, $CellContext`p5, $CellContext`p6, $CellContext`p7, \
$CellContext`p8}}], {$CellContext`a, $CellContext`b, $CellContext`c}], \
$CellContext`Fun3[
        Pattern[$CellContext`p, 
         Blank[]]] := BooleanFunction[
        MapThread[# -> #2& , {
          Tuples[{True, False}, $CellContext`n], 
          Table[
           
           Part[$CellContext`p, $CellContext`i], {$CellContext`i, 1, 
            2^$CellContext`n}]}], {$CellContext`a, $CellContext`b, \
$CellContext`c, $CellContext`d}], $CellContext`n = 4, $CellContext`i = 5}], 
   DynamicModuleBox[{$CellContext`p1$$ = False, $CellContext`p2$$ = 
     True, $CellContext`p3$$ = True, $CellContext`p4$$ = 
     False, $CellContext`p5$$ = True, $CellContext`p6$$ = 
     False, $CellContext`p7$$ = True, $CellContext`p8$$ = 
     False, $CellContext`result$$ = Or[
       And[$CellContext`a, $CellContext`b, 
        Not[$CellContext`c]], 
       And[
        Not[$CellContext`a], $CellContext`c], 
       And[
        Not[$CellContext`b], $CellContext`c]]}, 
    TagBox[
     GridBox[{{"\"Q\""}, {
        InputFieldBox[
         Dynamic[$CellContext`p1$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p2$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p3$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p4$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p5$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p6$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p7$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p8$$]]}, {
        ButtonBox[
        "\"Evaluate\"", Appearance -> Automatic, 
         ButtonFunction :> ({$CellContext`result$$ = \
$CellContext`Fun3[$CellContext`p1$$, $CellContext`p2$$, $CellContext`p3$$, \
$CellContext`p4$$, $CellContext`p5$$, $CellContext`p6$$, $CellContext`p7$$, \
$CellContext`p8$$], $CellContext`Q = $CellContext`result$$}; Null), Evaluator -> 
         Automatic, Method -> "Preemptive"]}, {
        DynamicBox[
         ToBoxes[
          Style[
           ToString[
            FullSimplify[$CellContext`result$$]], Bold], StandardForm], 
         ImageSizeCache -> {106.96875, {3.48046875, 12.55078125}}]}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
    DynamicModuleValues :> {}, Initialization :> {$CellContext`Fun3[
        Condition[
         Pattern[$CellContext`p1, 
          Blank[]], 
         BooleanQ[$CellContext`p1]], 
        Condition[
         Pattern[$CellContext`p2, 
          Blank[]], 
         BooleanQ[$CellContext`p2]], 
        Condition[
         Pattern[$CellContext`p3, 
          Blank[]], 
         BooleanQ[$CellContext`p3]], 
        Condition[
         Pattern[$CellContext`p4, 
          Blank[]], 
         BooleanQ[$CellContext`p4]], 
        Condition[
         Pattern[$CellContext`p5, 
          Blank[]], 
         BooleanQ[$CellContext`p5]], 
        Condition[
         Pattern[$CellContext`p6, 
          Blank[]], 
         BooleanQ[$CellContext`p6]], 
        Condition[
         Pattern[$CellContext`p7, 
          Blank[]], 
         BooleanQ[$CellContext`p7]], 
        Condition[
         Pattern[$CellContext`p8, 
          Blank[]], 
         BooleanQ[$CellContext`p8]]] := BooleanFunction[
        MapThread[# -> #2& , {
          
          Tuples[{True, False}, 
           3], {$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, $CellContext`p5, $CellContext`p6, $CellContext`p7, \
$CellContext`p8}}], {$CellContext`a, $CellContext`b, $CellContext`c}], \
$CellContext`Fun3[
        Pattern[$CellContext`p, 
         Blank[]]] := BooleanFunction[
        MapThread[# -> #2& , {
          Tuples[{True, False}, $CellContext`n], 
          Table[
           
           Part[$CellContext`p, $CellContext`i], {$CellContext`i, 1, 
            2^$CellContext`n}]}], {$CellContext`a, $CellContext`b, \
$CellContext`c, $CellContext`d}], $CellContext`n = 4, $CellContext`i = 5}], 
   DynamicModuleBox[{$CellContext`p1$$ = False, $CellContext`p2$$ = 
     True, $CellContext`p3$$ = False, $CellContext`p4$$ = 
     True, $CellContext`p5$$ = True, $CellContext`p6$$ = 
     False, $CellContext`p7$$ = False, $CellContext`p8$$ = 
     True, $CellContext`result$$ = Or[
       And[$CellContext`a, 
        Not[$CellContext`c]], 
       And[
        Not[$CellContext`a], $CellContext`b, $CellContext`c], 
       And[
        Not[$CellContext`b], 
        Not[$CellContext`c]]]}, 
    TagBox[
     GridBox[{{"\"R\""}, {
        InputFieldBox[
         Dynamic[$CellContext`p1$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p2$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p3$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p4$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p5$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p6$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p7$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p8$$]]}, {
        ButtonBox[
        "\"Evaluate\"", Appearance -> Automatic, 
         ButtonFunction :> ({$CellContext`result$$ = \
$CellContext`Fun3[$CellContext`p1$$, $CellContext`p2$$, $CellContext`p3$$, \
$CellContext`p4$$, $CellContext`p5$$, $CellContext`p6$$, $CellContext`p7$$, \
$CellContext`p8$$], $CellContext`R = $CellContext`result$$}; Null), Evaluator -> 
         Automatic, Method -> "Preemptive"]}, {
        DynamicBox[
         ToBoxes[
          Style[
           ToString[
            FullSimplify[$CellContext`result$$]], Bold], StandardForm], 
         ImageSizeCache -> {137.53125, {3.48046875, 12.55078125}}]}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
    DynamicModuleValues :> {}, Initialization :> {$CellContext`Fun3[
        Condition[
         Pattern[$CellContext`p1, 
          Blank[]], 
         BooleanQ[$CellContext`p1]], 
        Condition[
         Pattern[$CellContext`p2, 
          Blank[]], 
         BooleanQ[$CellContext`p2]], 
        Condition[
         Pattern[$CellContext`p3, 
          Blank[]], 
         BooleanQ[$CellContext`p3]], 
        Condition[
         Pattern[$CellContext`p4, 
          Blank[]], 
         BooleanQ[$CellContext`p4]], 
        Condition[
         Pattern[$CellContext`p5, 
          Blank[]], 
         BooleanQ[$CellContext`p5]], 
        Condition[
         Pattern[$CellContext`p6, 
          Blank[]], 
         BooleanQ[$CellContext`p6]], 
        Condition[
         Pattern[$CellContext`p7, 
          Blank[]], 
         BooleanQ[$CellContext`p7]], 
        Condition[
         Pattern[$CellContext`p8, 
          Blank[]], 
         BooleanQ[$CellContext`p8]]] := BooleanFunction[
        MapThread[# -> #2& , {
          
          Tuples[{True, False}, 
           3], {$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, $CellContext`p5, $CellContext`p6, $CellContext`p7, \
$CellContext`p8}}], {$CellContext`a, $CellContext`b, $CellContext`c}], \
$CellContext`Fun3[
        Pattern[$CellContext`p, 
         Blank[]]] := BooleanFunction[
        MapThread[# -> #2& , {
          Tuples[{True, False}, $CellContext`n], 
          Table[
           
           Part[$CellContext`p, $CellContext`i], {$CellContext`i, 1, 
            2^$CellContext`n}]}], {$CellContext`a, $CellContext`b, \
$CellContext`c, $CellContext`d}], $CellContext`n = 4, $CellContext`i = 5}]},
  "RowWithSeparator"]], "Output",
 CellChangeTimes->{3.948048641875202*^9, 3.948048877955035*^9},
 CellLabel->
  "Out[374]=",ExpressionUUID->"db3b0227-ba0e-4d77-9d68-c57c6e54ab40"]
}, Open  ]],

Cell["\<\
a= \[OpenCurlyDoubleQuote]The countdown has already begun.\
\[CloseCurlyDoubleQuote]
b= \[OpenCurlyDoubleQuote]The universe is \
meaningless.\[CloseCurlyDoubleQuote]
c= \[OpenCurlyDoubleQuote]The end is inevitable.\[CloseCurlyDoubleQuote]

1.) If the universe holds meaning, then the countdown to the inevitable end \
has not begun.
2.) Either the end is inevitable or the countdown for the meaningless \
universe has begun, but not both.
3.) If the universe is meaningless, then the end and the countdown are the \
same. Otherwise, the end can be avoided.\
\>", "Text",
 CellChangeTimes->{{3.9480496955099173`*^9, 3.948049704067925*^9}, {
   3.948049845213855*^9, 3.948049865562354*^9}, {3.9480499855029707`*^9, 
   3.9480500101398277`*^9}, {3.948050092273191*^9, 3.948050390611144*^9}, {
   3.948050424725354*^9, 3.948050441975629*^9}, 3.948050482582615*^9, {
   3.948050547874447*^9, 3.948050570096842*^9}, {3.9480543295237417`*^9, 
   3.948054336908328*^9}},ExpressionUUID->"b9d96f98-b416-42d8-98f0-\
c5af331013e3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Puzzle Type 3: Incomplete Information", "Subsection",
 CellChangeTimes->{{3.946917349341237*^9, 3.946917361129964*^9}, {
  3.946917621586087*^9, 
  3.946917621923677*^9}},ExpressionUUID->"73446e25-c2ef-47bd-b46f-\
34c80c4fde23"],

Cell["\<\
In this type of puzzle, we would like the clues to be incomplete, in that \
they do not uniquely determine all of the facts. But they uniquely determine \
one of the facts. In this type of puzzle, we should also require that none of \
the facts are determined by any of the clues.\
\>", "Text",
 CellChangeTimes->{{3.946917373703232*^9, 
  3.946917531228723*^9}},ExpressionUUID->"8c21504a-44ec-427e-a16d-\
91943c914d90"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"P", ",", "Q", ",", "R"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fun3", "[", 
   RowBox[{
    RowBox[{"p1_", "/;", 
     RowBox[{"BooleanQ", "[", "p1", "]"}]}], ",", 
    RowBox[{"p2_", "/;", 
     RowBox[{"BooleanQ", "[", "p2", "]"}]}], ",", 
    RowBox[{"p3_", "/;", 
     RowBox[{"BooleanQ", "[", "p3", "]"}]}], ",", 
    RowBox[{"p4_", "/;", 
     RowBox[{"BooleanQ", "[", "p4", "]"}]}], ",", 
    RowBox[{"p5_", "/;", 
     RowBox[{"BooleanQ", "[", "p5", "]"}]}], ",", 
    RowBox[{"p6_", "/;", 
     RowBox[{"BooleanQ", "[", "p6", "]"}]}], ",", 
    RowBox[{"p7_", "/;", 
     RowBox[{"BooleanQ", "[", "p7", "]"}]}], ",", 
    RowBox[{"p8_", "/;", 
     RowBox[{"BooleanQ", "[", "p8", "]"}]}]}], "]"}], ":=", 
  RowBox[{"BooleanFunction", "[", 
   RowBox[{
    RowBox[{"MapThread", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#1", "->", "#2"}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tuples", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}], ",", "3"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "p1", ",", "p2", ",", "p3", ",", "p4", ",", "p5", ",", "p6", ",", 
          "p7", ",", "p8"}], "}"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ColFunG", "[", "s_", "]"}], ":=", 
  RowBox[{"DynamicModule", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"p1", "=", "Null"}], ",", 
      RowBox[{"p2", "=", "Null"}], ",", 
      RowBox[{"p3", "=", "Null"}], ",", 
      RowBox[{"p4", "=", "Null"}], ",", 
      RowBox[{"p5", "=", "Null"}], ",", 
      RowBox[{"p6", "=", "Null"}], ",", 
      RowBox[{"p7", "=", "Null"}], ",", 
      RowBox[{"p8", "=", "Null"}], ",", 
      RowBox[{"result", "=", "\"\<\>\""}]}], "}"}], ",", 
    "\[IndentingNewLine]", "  ", 
    RowBox[{"Grid", "@", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ToString", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
         "   ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p1", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "    ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p2", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "    ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p3", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "    ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p4", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "   ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p5", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "    ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p6", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "    ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p7", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "    ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p8", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Button", "[", 
          RowBox[{"\"\<Evaluate\>\"", ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"result", "=", 
               RowBox[{"Fun3", "[", 
                RowBox[{
                "p1", ",", "p2", ",", "p3", ",", "p4", ",", "p5", ",", "p6", 
                 ",", "p7", ",", "p8"}], "]"}]}], ",", 
              RowBox[{"s", "=", "result"}]}], "}"}], ";"}]}], "]"}], ",", 
         "\[IndentingNewLine]", "    ", 
         RowBox[{"Dynamic", "[", " ", "\[IndentingNewLine]", "            ", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"ToString", "[", 
             RowBox[{"FullSimplify", "[", "result", "]"}], "]"}], ",", 
            "Bold"}], "]"}], "]"}]}], "\[IndentingNewLine]", "  ", "}"}], 
       "}"}]}]}], ",", 
    RowBox[{"SaveDefinitions", "->", "True"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{"Prepend", "[", 
        RowBox[{
         RowBox[{"Tuples", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}], ",", "3"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\""}], "}"}]}], 
        "]"}], ",", 
       RowBox[{"Spacings", "->", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "1.25"}], "}"}]}], ",", 
       RowBox[{"BaselinePosition", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"6", ",", "1"}], "}"}], ",", "Bottom"}], "}"}]}]}], "]"}], 
     ",", 
     RowBox[{"ColFunG", "[", "P", "]"}], ",", 
     RowBox[{"ColFunG", "[", "Q", "]"}], ",", 
     RowBox[{"ColFunG", "[", "R", "]"}]}], "}"}], ",", 
   RowBox[{"Spacer", "[", "2", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.94691749842035*^9, 3.946917500991301*^9}, 
   3.946917545922203*^9},
 CellLabel->
  "In[619]:=",ExpressionUUID->"838ea2a0-5dab-4f04-8bcf-6c68c6cb3250"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{2}, "Spacer1"], 
   TagBox[
    GridBox[{{"\"a\"", "\"b\"", "\"c\""}, {"True", "True", "True"}, {
      "True", "True", "False"}, {"True", "False", "True"}, {
      "True", "False", "False"}, {"False", "True", "True"}, {
      "False", "True", "False"}, {"False", "False", "True"}, {
      "False", "False", "False"}}, AutoDelete -> False, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.25}}}, 
     BaselinePosition -> {{6, 1}, Bottom}], "Grid"], 
   DynamicModuleBox[{$CellContext`p1$$ = False, $CellContext`p2$$ = 
     False, $CellContext`p3$$ = True, $CellContext`p4$$ = 
     True, $CellContext`p5$$ = True, $CellContext`p6$$ = 
     True, $CellContext`p7$$ = True, $CellContext`p8$$ = 
     True, $CellContext`result$$ = Or[
       Not[$CellContext`a], 
       Not[$CellContext`b]]}, 
    TagBox[
     GridBox[{{"\"P\""}, {
        InputFieldBox[
         Dynamic[$CellContext`p1$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p2$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p3$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p4$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p5$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p6$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p7$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p8$$]]}, {
        ButtonBox[
        "\"Evaluate\"", Appearance -> Automatic, 
         ButtonFunction :> ({$CellContext`result$$ = \
$CellContext`Fun3[$CellContext`p1$$, $CellContext`p2$$, $CellContext`p3$$, \
$CellContext`p4$$, $CellContext`p5$$, $CellContext`p6$$, $CellContext`p7$$, \
$CellContext`p8$$], $CellContext`P = $CellContext`result$$}; Null), Evaluator -> 
         Automatic, Method -> "Preemptive"]}, {
        DynamicBox[
         ToBoxes[
          Style[
           ToString[
            FullSimplify[$CellContext`result$$]], Bold], StandardForm], 
         ImageSizeCache -> {68.765625, {3.48046875, 12.55078125}}]}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
    DynamicModuleValues :> {}, Initialization :> ($CellContext`Fun3[
       Condition[
        Pattern[$CellContext`p1, 
         Blank[]], 
        BooleanQ[$CellContext`p1]], 
       Condition[
        Pattern[$CellContext`p2, 
         Blank[]], 
        BooleanQ[$CellContext`p2]], 
       Condition[
        Pattern[$CellContext`p3, 
         Blank[]], 
        BooleanQ[$CellContext`p3]], 
       Condition[
        Pattern[$CellContext`p4, 
         Blank[]], 
        BooleanQ[$CellContext`p4]], 
       Condition[
        Pattern[$CellContext`p5, 
         Blank[]], 
        BooleanQ[$CellContext`p5]], 
       Condition[
        Pattern[$CellContext`p6, 
         Blank[]], 
        BooleanQ[$CellContext`p6]], 
       Condition[
        Pattern[$CellContext`p7, 
         Blank[]], 
        BooleanQ[$CellContext`p7]], 
       Condition[
        Pattern[$CellContext`p8, 
         Blank[]], 
        BooleanQ[$CellContext`p8]]] := BooleanFunction[
       MapThread[# -> #2& , {
         Tuples[{True, False}, 
          3], {$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, $CellContext`p5, $CellContext`p6, $CellContext`p7, \
$CellContext`p8}}], {$CellContext`a, $CellContext`b, $CellContext`c}])], 
   DynamicModuleBox[{$CellContext`p1$$ = True, $CellContext`p2$$ = 
     True, $CellContext`p3$$ = True, $CellContext`p4$$ = 
     True, $CellContext`p5$$ = True, $CellContext`p6$$ = 
     False, $CellContext`p7$$ = True, $CellContext`p8$$ = 
     False, $CellContext`result$$ = Or[$CellContext`a, $CellContext`c]}, 
    TagBox[
     GridBox[{{"\"Q\""}, {
        InputFieldBox[
         Dynamic[$CellContext`p1$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p2$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p3$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p4$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p5$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p6$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p7$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p8$$]]}, {
        ButtonBox[
        "\"Evaluate\"", Appearance -> Automatic, 
         ButtonFunction :> ({$CellContext`result$$ = \
$CellContext`Fun3[$CellContext`p1$$, $CellContext`p2$$, $CellContext`p3$$, \
$CellContext`p4$$, $CellContext`p5$$, $CellContext`p6$$, $CellContext`p7$$, \
$CellContext`p8$$], $CellContext`Q = $CellContext`result$$}; Null), Evaluator -> 
         Automatic, Method -> "Preemptive"]}, {
        DynamicBox[
         ToBoxes[
          Style[
           ToString[
            FullSimplify[$CellContext`result$$]], Bold], StandardForm], 
         ImageSizeCache -> {45.84375, {3.48046875, 12.55078125}}]}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
    DynamicModuleValues :> {}, Initialization :> ($CellContext`Fun3[
       Condition[
        Pattern[$CellContext`p1, 
         Blank[]], 
        BooleanQ[$CellContext`p1]], 
       Condition[
        Pattern[$CellContext`p2, 
         Blank[]], 
        BooleanQ[$CellContext`p2]], 
       Condition[
        Pattern[$CellContext`p3, 
         Blank[]], 
        BooleanQ[$CellContext`p3]], 
       Condition[
        Pattern[$CellContext`p4, 
         Blank[]], 
        BooleanQ[$CellContext`p4]], 
       Condition[
        Pattern[$CellContext`p5, 
         Blank[]], 
        BooleanQ[$CellContext`p5]], 
       Condition[
        Pattern[$CellContext`p6, 
         Blank[]], 
        BooleanQ[$CellContext`p6]], 
       Condition[
        Pattern[$CellContext`p7, 
         Blank[]], 
        BooleanQ[$CellContext`p7]], 
       Condition[
        Pattern[$CellContext`p8, 
         Blank[]], 
        BooleanQ[$CellContext`p8]]] := BooleanFunction[
       MapThread[# -> #2& , {
         Tuples[{True, False}, 
          3], {$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, $CellContext`p5, $CellContext`p6, $CellContext`p7, \
$CellContext`p8}}], {$CellContext`a, $CellContext`b, $CellContext`c}])], 
   DynamicModuleBox[{$CellContext`p1$$ = True, $CellContext`p2$$ = 
     True, $CellContext`p3$$ = False, $CellContext`p4$$ = 
     False, $CellContext`p5$$ = True, $CellContext`p6$$ = 
     True, $CellContext`p7$$ = True, $CellContext`p8$$ = 
     True, $CellContext`result$$ = Or[
       Not[$CellContext`a], $CellContext`b]}, 
    TagBox[
     GridBox[{{"\"R\""}, {
        InputFieldBox[
         Dynamic[$CellContext`p1$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p2$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p3$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p4$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p5$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p6$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p7$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p8$$]]}, {
        ButtonBox[
        "\"Evaluate\"", Appearance -> Automatic, 
         ButtonFunction :> ({$CellContext`result$$ = \
$CellContext`Fun3[$CellContext`p1$$, $CellContext`p2$$, $CellContext`p3$$, \
$CellContext`p4$$, $CellContext`p5$$, $CellContext`p6$$, $CellContext`p7$$, \
$CellContext`p8$$], $CellContext`R = $CellContext`result$$}; Null), Evaluator -> 
         Automatic, Method -> "Preemptive"]}, {
        DynamicBox[
         ToBoxes[
          Style[
           ToString[
            FullSimplify[$CellContext`result$$]], Bold], StandardForm], 
         ImageSizeCache -> {99.328125, {3.48046875, 12.55078125}}]}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
    DynamicModuleValues :> {}, Initialization :> ($CellContext`Fun3[
       Condition[
        Pattern[$CellContext`p1, 
         Blank[]], 
        BooleanQ[$CellContext`p1]], 
       Condition[
        Pattern[$CellContext`p2, 
         Blank[]], 
        BooleanQ[$CellContext`p2]], 
       Condition[
        Pattern[$CellContext`p3, 
         Blank[]], 
        BooleanQ[$CellContext`p3]], 
       Condition[
        Pattern[$CellContext`p4, 
         Blank[]], 
        BooleanQ[$CellContext`p4]], 
       Condition[
        Pattern[$CellContext`p5, 
         Blank[]], 
        BooleanQ[$CellContext`p5]], 
       Condition[
        Pattern[$CellContext`p6, 
         Blank[]], 
        BooleanQ[$CellContext`p6]], 
       Condition[
        Pattern[$CellContext`p7, 
         Blank[]], 
        BooleanQ[$CellContext`p7]], 
       Condition[
        Pattern[$CellContext`p8, 
         Blank[]], 
        BooleanQ[$CellContext`p8]]] := BooleanFunction[
       MapThread[# -> #2& , {
         Tuples[{True, False}, 
          3], {$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, $CellContext`p5, $CellContext`p6, $CellContext`p7, \
$CellContext`p8}}], {$CellContext`a, $CellContext`b, $CellContext`c}])]},
  "RowWithSeparator"]], "Output",
 CellChangeTimes->{3.9469175483486767`*^9},
 CellLabel->
  "Out[622]=",ExpressionUUID->"21d79508-5115-408b-8e5e-7e59f234c1d2"]
}, Open  ]],

Cell["\<\
a = \[OpenCurlyDoubleQuote]The witness is lying\[CloseCurlyDoubleQuote]
b= \[OpenCurlyDoubleQuote]We have a mistrial.\[CloseCurlyDoubleQuote]
c= \[OpenCurlyDoubleQuote]The suspect is released.\[CloseCurlyDoubleQuote]

1.) The witness isn\[CloseCurlyQuote]t lying and we don\[CloseCurlyQuote]t \
have a mistrial.
2.) The witness is lying, or the suspect was released. Maybe both.
3.) If the witness was lying, then we have a mistrial.
What can we say about the trial?\
\>", "Text",
 CellChangeTimes->{{3.946917866632457*^9, 3.946918080662918*^9}, {
  3.9655989559815903`*^9, 3.96559895921397*^9}, {3.965599004751141*^9, 
  3.965599007083227*^9}},ExpressionUUID->"a0624347-0969-4aff-98d1-\
def07950e764"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Another Example: Where only one fact is determined", "Subsection",
 CellChangeTimes->{{3.946918097829135*^9, 3.946918109198291*^9}, {
  3.946919332018333*^9, 
  3.946919340191785*^9}},ExpressionUUID->"f0e06ed1-9543-42f9-8e16-\
4cdb91283351"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"P", ",", "Q", ",", "R"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fun3", "[", 
   RowBox[{
    RowBox[{"p1_", "/;", 
     RowBox[{"BooleanQ", "[", "p1", "]"}]}], ",", 
    RowBox[{"p2_", "/;", 
     RowBox[{"BooleanQ", "[", "p2", "]"}]}], ",", 
    RowBox[{"p3_", "/;", 
     RowBox[{"BooleanQ", "[", "p3", "]"}]}], ",", 
    RowBox[{"p4_", "/;", 
     RowBox[{"BooleanQ", "[", "p4", "]"}]}], ",", 
    RowBox[{"p5_", "/;", 
     RowBox[{"BooleanQ", "[", "p5", "]"}]}], ",", 
    RowBox[{"p6_", "/;", 
     RowBox[{"BooleanQ", "[", "p6", "]"}]}], ",", 
    RowBox[{"p7_", "/;", 
     RowBox[{"BooleanQ", "[", "p7", "]"}]}], ",", 
    RowBox[{"p8_", "/;", 
     RowBox[{"BooleanQ", "[", "p8", "]"}]}]}], "]"}], ":=", 
  RowBox[{"BooleanFunction", "[", 
   RowBox[{
    RowBox[{"MapThread", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#1", "->", "#2"}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tuples", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}], ",", "3"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "p1", ",", "p2", ",", "p3", ",", "p4", ",", "p5", ",", "p6", ",", 
          "p7", ",", "p8"}], "}"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ColFunG", "[", "s_", "]"}], ":=", 
  RowBox[{"DynamicModule", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"p1", "=", "Null"}], ",", 
      RowBox[{"p2", "=", "Null"}], ",", 
      RowBox[{"p3", "=", "Null"}], ",", 
      RowBox[{"p4", "=", "Null"}], ",", 
      RowBox[{"p5", "=", "Null"}], ",", 
      RowBox[{"p6", "=", "Null"}], ",", 
      RowBox[{"p7", "=", "Null"}], ",", 
      RowBox[{"p8", "=", "Null"}], ",", 
      RowBox[{"result", "=", "\"\<\>\""}]}], "}"}], ",", 
    "\[IndentingNewLine]", "  ", 
    RowBox[{"Grid", "@", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ToString", "[", "s", "]"}], ",", "\[IndentingNewLine]", 
         "   ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p1", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "    ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p2", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "    ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p3", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "    ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p4", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "   ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p5", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "    ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p6", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "    ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p7", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "    ", 
         RowBox[{"InputField", "[", 
          RowBox[{"Dynamic", "[", "p8", "]"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Button", "[", 
          RowBox[{"\"\<Evaluate\>\"", ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"result", "=", 
               RowBox[{"Fun3", "[", 
                RowBox[{
                "p1", ",", "p2", ",", "p3", ",", "p4", ",", "p5", ",", "p6", 
                 ",", "p7", ",", "p8"}], "]"}]}], ",", 
              RowBox[{"s", "=", "result"}]}], "}"}], ";"}]}], "]"}], ",", 
         "\[IndentingNewLine]", "    ", 
         RowBox[{"Dynamic", "[", " ", "\[IndentingNewLine]", "            ", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"ToString", "[", 
             RowBox[{"FullSimplify", "[", "result", "]"}], "]"}], ",", 
            "Bold"}], "]"}], "]"}]}], "\[IndentingNewLine]", "  ", "}"}], 
       "}"}]}]}], ",", 
    RowBox[{"SaveDefinitions", "->", "True"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{"Prepend", "[", 
        RowBox[{
         RowBox[{"Tuples", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"True", ",", "False"}], "}"}], ",", "3"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\""}], "}"}]}], 
        "]"}], ",", 
       RowBox[{"Spacings", "->", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "1.25"}], "}"}]}], ",", 
       RowBox[{"BaselinePosition", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"6", ",", "1"}], "}"}], ",", "Bottom"}], "}"}]}]}], "]"}], 
     ",", 
     RowBox[{"ColFunG", "[", "P", "]"}], ",", 
     RowBox[{"ColFunG", "[", "Q", "]"}], ",", 
     RowBox[{"ColFunG", "[", "R", "]"}]}], "}"}], ",", 
   RowBox[{"Spacer", "[", "2", "]"}]}], "]"}]}], "Input",
 CellLabel->
  "In[623]:=",ExpressionUUID->"24030975-6190-4b16-8bd4-297f2745e6b7"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{2}, "Spacer1"], 
   TagBox[
    GridBox[{{"\"a\"", "\"b\"", "\"c\""}, {"True", "True", "True"}, {
      "True", "True", "False"}, {"True", "False", "True"}, {
      "True", "False", "False"}, {"False", "True", "True"}, {
      "False", "True", "False"}, {"False", "False", "True"}, {
      "False", "False", "False"}}, AutoDelete -> False, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.25}}}, 
     BaselinePosition -> {{6, 1}, Bottom}], "Grid"], 
   DynamicModuleBox[{$CellContext`p1$$ = True, $CellContext`p2$$ = 
     True, $CellContext`p3$$ = True, $CellContext`p4$$ = 
     False, $CellContext`p5$$ = True, $CellContext`p6$$ = 
     True, $CellContext`p7$$ = True, $CellContext`p8$$ = 
     False, $CellContext`result$$ = Or[$CellContext`b, $CellContext`c]}, 
    TagBox[
     GridBox[{{"\"P\""}, {
        InputFieldBox[
         Dynamic[$CellContext`p1$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p2$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p3$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p4$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p5$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p6$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p7$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p8$$]]}, {
        ButtonBox[
        "\"Evaluate\"", Appearance -> Automatic, 
         ButtonFunction :> ({$CellContext`result$$ = \
$CellContext`Fun3[$CellContext`p1$$, $CellContext`p2$$, $CellContext`p3$$, \
$CellContext`p4$$, $CellContext`p5$$, $CellContext`p6$$, $CellContext`p7$$, \
$CellContext`p8$$], $CellContext`P = $CellContext`result$$}; Null), Evaluator -> 
         Automatic, Method -> "Preemptive"]}, {
        DynamicBox[
         ToBoxes[
          Style[
           ToString[
            FullSimplify[$CellContext`result$$]], Bold], StandardForm], 
         ImageSizeCache -> {45.84375, {3.48046875, 12.55078125}}]}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
    DynamicModuleValues :> {}, Initialization :> ($CellContext`Fun3[
       Condition[
        Pattern[$CellContext`p1, 
         Blank[]], 
        BooleanQ[$CellContext`p1]], 
       Condition[
        Pattern[$CellContext`p2, 
         Blank[]], 
        BooleanQ[$CellContext`p2]], 
       Condition[
        Pattern[$CellContext`p3, 
         Blank[]], 
        BooleanQ[$CellContext`p3]], 
       Condition[
        Pattern[$CellContext`p4, 
         Blank[]], 
        BooleanQ[$CellContext`p4]], 
       Condition[
        Pattern[$CellContext`p5, 
         Blank[]], 
        BooleanQ[$CellContext`p5]], 
       Condition[
        Pattern[$CellContext`p6, 
         Blank[]], 
        BooleanQ[$CellContext`p6]], 
       Condition[
        Pattern[$CellContext`p7, 
         Blank[]], 
        BooleanQ[$CellContext`p7]], 
       Condition[
        Pattern[$CellContext`p8, 
         Blank[]], 
        BooleanQ[$CellContext`p8]]] := BooleanFunction[
       MapThread[# -> #2& , {
         Tuples[{True, False}, 
          3], {$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, $CellContext`p5, $CellContext`p6, $CellContext`p7, \
$CellContext`p8}}], {$CellContext`a, $CellContext`b, $CellContext`c}])], 
   DynamicModuleBox[{$CellContext`p1$$ = True, $CellContext`p2$$ = 
     True, $CellContext`p3$$ = False, $CellContext`p4$$ = 
     False, $CellContext`p5$$ = True, $CellContext`p6$$ = 
     True, $CellContext`p7$$ = True, $CellContext`p8$$ = 
     True, $CellContext`result$$ = Or[
       Not[$CellContext`a], $CellContext`b]}, 
    TagBox[
     GridBox[{{"\"Q\""}, {
        InputFieldBox[
         Dynamic[$CellContext`p1$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p2$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p3$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p4$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p5$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p6$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p7$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p8$$]]}, {
        ButtonBox[
        "\"Evaluate\"", Appearance -> Automatic, 
         ButtonFunction :> ({$CellContext`result$$ = \
$CellContext`Fun3[$CellContext`p1$$, $CellContext`p2$$, $CellContext`p3$$, \
$CellContext`p4$$, $CellContext`p5$$, $CellContext`p6$$, $CellContext`p7$$, \
$CellContext`p8$$], $CellContext`Q = $CellContext`result$$}; Null), Evaluator -> 
         Automatic, Method -> "Preemptive"]}, {
        DynamicBox[
         ToBoxes[
          Style[
           ToString[
            FullSimplify[$CellContext`result$$]], Bold], StandardForm], 
         ImageSizeCache -> {99.328125, {3.48046875, 12.55078125}}]}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
    DynamicModuleValues :> {}, Initialization :> ($CellContext`Fun3[
       Condition[
        Pattern[$CellContext`p1, 
         Blank[]], 
        BooleanQ[$CellContext`p1]], 
       Condition[
        Pattern[$CellContext`p2, 
         Blank[]], 
        BooleanQ[$CellContext`p2]], 
       Condition[
        Pattern[$CellContext`p3, 
         Blank[]], 
        BooleanQ[$CellContext`p3]], 
       Condition[
        Pattern[$CellContext`p4, 
         Blank[]], 
        BooleanQ[$CellContext`p4]], 
       Condition[
        Pattern[$CellContext`p5, 
         Blank[]], 
        BooleanQ[$CellContext`p5]], 
       Condition[
        Pattern[$CellContext`p6, 
         Blank[]], 
        BooleanQ[$CellContext`p6]], 
       Condition[
        Pattern[$CellContext`p7, 
         Blank[]], 
        BooleanQ[$CellContext`p7]], 
       Condition[
        Pattern[$CellContext`p8, 
         Blank[]], 
        BooleanQ[$CellContext`p8]]] := BooleanFunction[
       MapThread[# -> #2& , {
         Tuples[{True, False}, 
          3], {$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, $CellContext`p5, $CellContext`p6, $CellContext`p7, \
$CellContext`p8}}], {$CellContext`a, $CellContext`b, $CellContext`c}])], 
   DynamicModuleBox[{$CellContext`p1$$ = False, $CellContext`p2$$ = 
     True, $CellContext`p3$$ = True, $CellContext`p4$$ = 
     True, $CellContext`p5$$ = True, $CellContext`p6$$ = 
     True, $CellContext`p7$$ = False, $CellContext`p8$$ = 
     True, $CellContext`result$$ = Or[
       And[$CellContext`a, 
        Not[$CellContext`b]], 
       And[
        Not[$CellContext`a], $CellContext`b], 
       Not[$CellContext`c]]}, 
    TagBox[
     GridBox[{{"\"R\""}, {
        InputFieldBox[
         Dynamic[$CellContext`p1$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p2$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p3$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p4$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p5$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p6$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p7$$]]}, {
        InputFieldBox[
         Dynamic[$CellContext`p8$$]]}, {
        ButtonBox[
        "\"Evaluate\"", Appearance -> Automatic, 
         ButtonFunction :> ({$CellContext`result$$ = \
$CellContext`Fun3[$CellContext`p1$$, $CellContext`p2$$, $CellContext`p3$$, \
$CellContext`p4$$, $CellContext`p5$$, $CellContext`p6$$, $CellContext`p7$$, \
$CellContext`p8$$], $CellContext`R = $CellContext`result$$}; Null), Evaluator -> 
         Automatic, Method -> "Preemptive"]}, {
        DynamicBox[
         ToBoxes[
          Style[
           ToString[
            FullSimplify[$CellContext`result$$]], Bold], StandardForm], 
         ImageSizeCache -> {175.734375, {3.48046875, 12.55078125}}]}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
    DynamicModuleValues :> {}, Initialization :> ($CellContext`Fun3[
       Condition[
        Pattern[$CellContext`p1, 
         Blank[]], 
        BooleanQ[$CellContext`p1]], 
       Condition[
        Pattern[$CellContext`p2, 
         Blank[]], 
        BooleanQ[$CellContext`p2]], 
       Condition[
        Pattern[$CellContext`p3, 
         Blank[]], 
        BooleanQ[$CellContext`p3]], 
       Condition[
        Pattern[$CellContext`p4, 
         Blank[]], 
        BooleanQ[$CellContext`p4]], 
       Condition[
        Pattern[$CellContext`p5, 
         Blank[]], 
        BooleanQ[$CellContext`p5]], 
       Condition[
        Pattern[$CellContext`p6, 
         Blank[]], 
        BooleanQ[$CellContext`p6]], 
       Condition[
        Pattern[$CellContext`p7, 
         Blank[]], 
        BooleanQ[$CellContext`p7]], 
       Condition[
        Pattern[$CellContext`p8, 
         Blank[]], 
        BooleanQ[$CellContext`p8]]] := BooleanFunction[
       MapThread[# -> #2& , {
         Tuples[{True, False}, 
          3], {$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, $CellContext`p5, $CellContext`p6, $CellContext`p7, \
$CellContext`p8}}], {$CellContext`a, $CellContext`b, $CellContext`c}])]},
  "RowWithSeparator"]], "Output",
 CellChangeTimes->{3.9469181186800213`*^9},
 CellLabel->
  "Out[626]=",ExpressionUUID->"a2b8191f-a4b7-4758-a1f8-0aadec315ef9"]
}, Open  ]],

Cell["We ca rewrite the last clue a bit more compactly as", "Text",
 CellChangeTimes->{{3.946919259548254*^9, 
  3.946919274041901*^9}},ExpressionUUID->"22f81147-fbac-4521-b4e5-\
fc2ef194a2b4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"TautologyQ", "[", 
   RowBox[{
    RowBox[{"R", "\[Equivalent]", "c"}], "\[Implies]", 
    RowBox[{"Xor", "[", 
     RowBox[{"a", ",", "b"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SatisfiableQ", "[", 
  RowBox[{"P", "&&", "Q", "&&", "R", "&&", "b"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"SatisfiableQ", "[", 
  RowBox[{"P", "&&", "Q", "&&", "R", "&&", 
   RowBox[{"!", "b"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"SatisfiableQ", "[", 
  RowBox[{"P", "&&", "Q", "&&", "R", "&&", "a"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"SatisfiableQ", "[", 
  RowBox[{"P", "&&", "Q", "&&", "R", "&&", 
   RowBox[{"!", "a"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"SatisfiableQ", "[", 
  RowBox[{"P", "&&", "Q", "&&", "R", "&&", "c"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"SatisfiableQ", "[", 
  RowBox[{"P", "&&", "Q", "&&", "R", "&&", 
   RowBox[{"!", "c"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.946918750768797*^9, 3.946918841836626*^9}, {
   3.946918960534768*^9, 3.9469191153939857`*^9}, {3.946919207432787*^9, 
   3.946919251111609*^9}, {3.9469195463726263`*^9, 3.946919551264186*^9}, {
   3.947080729491938*^9, 3.9470807871626177`*^9}, {3.9470808294207373`*^9, 
   3.9470808814134274`*^9}, 3.947080945158545*^9},
 CellLabel->
  "In[1879]:=",ExpressionUUID->"1ece52d2-1460-468d-b590-d607fa637deb"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.946918765971434*^9, 3.946918781598084*^9}, 
   3.946918815927163*^9, 3.94691886240056*^9, {3.946918933612932*^9, 
   3.9469191161840887`*^9}, {3.9469192190099583`*^9, 3.9469192522907467`*^9}, 
   3.946919553026415*^9, 3.94708079862851*^9, {3.947080929394141*^9, 
   3.947080980996591*^9}},
 CellLabel->
  "Out[1880]=",ExpressionUUID->"858e19f4-5371-4f5b-a4b3-ae7bc2529530"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.946918765971434*^9, 3.946918781598084*^9}, 
   3.946918815927163*^9, 3.94691886240056*^9, {3.946918933612932*^9, 
   3.9469191161840887`*^9}, {3.9469192190099583`*^9, 3.9469192522907467`*^9}, 
   3.946919553026415*^9, 3.94708079862851*^9, {3.947080929394141*^9, 
   3.947080980998932*^9}},
 CellLabel->
  "Out[1881]=",ExpressionUUID->"8d79272f-3aa8-49a2-8924-26dbc7621872"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.946918765971434*^9, 3.946918781598084*^9}, 
   3.946918815927163*^9, 3.94691886240056*^9, {3.946918933612932*^9, 
   3.9469191161840887`*^9}, {3.9469192190099583`*^9, 3.9469192522907467`*^9}, 
   3.946919553026415*^9, 3.94708079862851*^9, {3.947080929394141*^9, 
   3.947080981001081*^9}},
 CellLabel->
  "Out[1882]=",ExpressionUUID->"a89ac8fb-78e4-4bf5-bff7-241d98c38c82"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.946918765971434*^9, 3.946918781598084*^9}, 
   3.946918815927163*^9, 3.94691886240056*^9, {3.946918933612932*^9, 
   3.9469191161840887`*^9}, {3.9469192190099583`*^9, 3.9469192522907467`*^9}, 
   3.946919553026415*^9, 3.94708079862851*^9, {3.947080929394141*^9, 
   3.94708098100286*^9}},
 CellLabel->
  "Out[1883]=",ExpressionUUID->"329b6e93-208f-4273-8a76-c6b13b82056b"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.946918765971434*^9, 3.946918781598084*^9}, 
   3.946918815927163*^9, 3.94691886240056*^9, {3.946918933612932*^9, 
   3.9469191161840887`*^9}, {3.9469192190099583`*^9, 3.9469192522907467`*^9}, 
   3.946919553026415*^9, 3.94708079862851*^9, {3.947080929394141*^9, 
   3.947080981004628*^9}},
 CellLabel->
  "Out[1884]=",ExpressionUUID->"8ab6dfd2-0a2b-4b44-b6a0-b9631bd43ac1"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.946918765971434*^9, 3.946918781598084*^9}, 
   3.946918815927163*^9, 3.94691886240056*^9, {3.946918933612932*^9, 
   3.9469191161840887`*^9}, {3.9469192190099583`*^9, 3.9469192522907467`*^9}, 
   3.946919553026415*^9, 3.94708079862851*^9, {3.947080929394141*^9, 
   3.94708098100638*^9}},
 CellLabel->
  "Out[1885]=",ExpressionUUID->"e2c0cabb-2938-473c-b007-d100b52f7626"]
}, Open  ]],

Cell["", "Text",
 CellChangeTimes->{{3.946919291465843*^9, 
  3.9469192969534197`*^9}},ExpressionUUID->"1ca3bc2a-c861-4927-ae19-\
168aa34f09cc"],

Cell["\<\
a= \[OpenCurlyDoubleQuote]Time travel will be possible.\[CloseCurlyDoubleQuote]
b= \[OpenCurlyDoubleQuote]Space travel will be possible.
c= \[OpenCurlyDoubleQuote]Technology will stop advancing.\
\[CloseCurlyDoubleQuote]

1.) Technology will stop advancing, or space travel will be possible. Maybe \
both.
2.) If time travel becomes possible, then space travel will be possible.
3.) If technology stops advancing, exactly one of time travel and space \
travel will be possible.
What can we say about the future?\
\>", "Text",
 CellChangeTimes->{{3.9469193064881563`*^9, 3.946919307265955*^9}, {
  3.946919369083415*^9, 3.9469196161771812`*^9}, {3.946977210468382*^9, 
  3.9469772115696774`*^9}},ExpressionUUID->"4ed0e77a-f682-40a0-8935-\
b262b97a4a86"],

Cell["", "Text",
 CellChangeTimes->{{3.946919277611444*^9, 
  3.946919286370363*^9}},ExpressionUUID->"1dc5d594-16d4-4642-a1ed-\
06f46db9298f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Larger Puzzles", "Subsection",
 CellChangeTimes->{{3.947004614705063*^9, 
  3.947004616966153*^9}},ExpressionUUID->"76d5ecdc-bb38-44cb-bb4f-\
db7a6038cae1"],

Cell["\<\
Let\[CloseCurlyQuote]s create larger puzzles. These could be of any type, but \
we give two examples of Puzzle Type 1.\
\>", "Text",
 CellChangeTimes->{{3.947004625866228*^9, 3.947004671542948*^9}, {
  3.947004783522223*^9, 3.947004796280114*^9}, {3.947024418485133*^9, 
  3.947024440016163*^9}, {3.965599028338327*^9, 
  3.965599064732296*^9}},ExpressionUUID->"95d9fa14-bdef-47bb-b7af-\
417e0755cdc7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "P", ",", "Q", ",", "R", ",", "S", ",", "T", ",", "a", ",", "b", ",", "c", 
   ",", "d"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"n", "=", "4"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fun3", "[", "p_", "]"}], ":=", 
  RowBox[{"BooleanFunction", "[", 
   RowBox[{
    RowBox[{"MapThread", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#1", "->", "#2"}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tuples", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}], ",", "n"}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"p", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"2", "^", "n"}]}], " ", "}"}]}], "]"}]}], "}"}]}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ColFunG", "[", "s_", "]"}], ":=", 
  RowBox[{"DynamicModule", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x1", "=", "True"}], ",", 
      RowBox[{"x2", "=", "True"}], ",", "\[IndentingNewLine]", "\t\t\t\t\t\t", 
      RowBox[{"x3", "=", "True"}], ",", 
      RowBox[{"x4", "=", "True"}], ",", "\[IndentingNewLine]", "\t\t\t\t\t\t", 
      RowBox[{"x5", "=", "True"}], ",", 
      RowBox[{"x6", "=", "True"}], ",", "\[IndentingNewLine]", "\t\t\t\t\t\t", 
      RowBox[{"x7", "=", "True"}], ",", 
      RowBox[{"x8", "=", "True"}], ",", "\[IndentingNewLine]", "\t\t\t\t\t\t", 
      RowBox[{"x9", "=", "True"}], ",", 
      RowBox[{"x10", "=", "True"}], ",", "\[IndentingNewLine]", 
      "\t\t\t\t\t\t", 
      RowBox[{"x11", "=", "True"}], ",", 
      RowBox[{"x12", "=", "True"}], ",", "\[IndentingNewLine]", 
      "\t\t\t\t\t\t", 
      RowBox[{"x13", "=", "True"}], ",", 
      RowBox[{"x14", "=", "True"}], ",", "\[IndentingNewLine]", 
      "\t\t\t\t\t\t", 
      RowBox[{"x15", "=", "True"}], ",", 
      RowBox[{"x16", "=", "True"}], ",", "\[IndentingNewLine]", 
      "\t\t\t\t\t\t", 
      RowBox[{"result", "=", "True"}]}], "}"}], ",", "\[IndentingNewLine]", 
    "  ", 
    RowBox[{"Grid", "@", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{"Join", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"ToString", "[", "s", "]"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x1", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x2", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x3", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x4", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x5", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x6", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x7", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x8", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x9", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x10", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x11", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x12", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x13", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x14", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x15", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x16", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Button", "[", 
            RowBox[{"\"\<Evaluate\>\"", ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"result", "=", 
                 RowBox[{"Fun3", "[", 
                  RowBox[{"{", 
                   RowBox[{
                   "x1", ",", "x2", ",", "x3", ",", "x4", ",", "x5", ",", 
                    "x6", ",", "x7", ",", "x8", ",", "x9", ",", "x10", ",", 
                    "x11", ",", "x12", ",", "x13", ",", "x14", ",", "x15", 
                    ",", "x16"}], "}"}], "]"}]}], ",", 
                RowBox[{"s", "=", "result"}]}], "}"}], ";"}]}], "]"}], ",", 
           "\[IndentingNewLine]", "    ", 
           RowBox[{"Dynamic", "[", " ", "\[IndentingNewLine]", "            ", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"ToString", "[", 
               RowBox[{"Simplify", "[", "result", "]"}], "]"}], ",", "Bold"}],
              "]"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", "  ", "]"}], 
       "}"}]}]}], ",", 
    RowBox[{"SaveDefinitions", "->", "True"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"Tuples", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"True", ",", "False"}], "}"}], ",", "n"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\"", ",", 
            "\"\<d\>\""}], "}"}]}], "]"}], ",", 
        RowBox[{"Spacings", "->", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", "1.15"}], "}"}]}], ",", 
        RowBox[{"BaselinePosition", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"10", ",", "1"}], "}"}], ",", "Bottom"}], "}"}]}]}], 
       "]"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ColFunG", "[", "P", "]"}], ",", 
       RowBox[{"ColFunG", "[", "Q", "]"}], ",", 
       RowBox[{"ColFunG", "[", "R", "]"}], ",", 
       RowBox[{"ColFunG", "[", "S", "]"}], ",", 
       RowBox[{"ColFunG", "[", "T", "]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"Spacer", "[", "2", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.947024465927013*^9, 3.947024466975553*^9}, {
  3.947024497170233*^9, 3.947024503644005*^9}},
 CellLabel->
  "In[862]:=",ExpressionUUID->"7d4457d3-7d3b-42eb-95e5-5b97375d9ab1"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.947024470873604*^9, 3.94702450488925*^9},
 CellLabel->
  "Out[863]=",ExpressionUUID->"7dc0ffe5-8415-4610-a153-bbc073ca6b5f"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{2}, "Spacer1"], 
   TagBox[
    GridBox[{{"\"a\"", "\"b\"", "\"c\"", "\"d\""}, {
      "True", "True", "True", "True"}, {"True", "True", "True", "False"}, {
      "True", "True", "False", "True"}, {"True", "True", "False", "False"}, {
      "True", "False", "True", "True"}, {"True", "False", "True", "False"}, {
      "True", "False", "False", "True"}, {
      "True", "False", "False", "False"}, {"False", "True", "True", "True"}, {
      "False", "True", "True", "False"}, {"False", "True", "False", "True"}, {
      "False", "True", "False", "False"}, {
      "False", "False", "True", "True"}, {
      "False", "False", "True", "False"}, {
      "False", "False", "False", "True"}, {
      "False", "False", "False", "False"}}, AutoDelete -> False, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.15}}}, 
     BaselinePosition -> {{10, 1}, Bottom}], "Grid"], 
   DynamicModuleBox[{$CellContext`x1$$ = True, $CellContext`x2$$ = 
     True, $CellContext`x3$$ = False, $CellContext`x4$$ = 
     True, $CellContext`x5$$ = True, $CellContext`x6$$ = 
     True, $CellContext`x7$$ = False, $CellContext`x8$$ = 
     True, $CellContext`x9$$ = True, $CellContext`x10$$ = 
     True, $CellContext`x11$$ = False, $CellContext`x12$$ = 
     True, $CellContext`x13$$ = True, $CellContext`x14$$ = 
     True, $CellContext`x15$$ = False, $CellContext`x16$$ = 
     True, $CellContext`result$$ = Or[$CellContext`c, 
       Not[$CellContext`d]]}, 
    TagBox[
     GridBox[{{"\"P\""}, {
        InputFieldBox[
         Dynamic[$CellContext`x1$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x2$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x3$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x4$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x5$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x6$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x7$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x8$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x9$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x10$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x11$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x12$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x13$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x14$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x15$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x16$$], FieldSize -> Small]}, {
        ButtonBox[
        "\"Evaluate\"", Appearance -> Automatic, 
         ButtonFunction :> ({$CellContext`result$$ = \
$CellContext`Fun3[{$CellContext`x1$$, $CellContext`x2$$, $CellContext`x3$$, \
$CellContext`x4$$, $CellContext`x5$$, $CellContext`x6$$, $CellContext`x7$$, \
$CellContext`x8$$, $CellContext`x9$$, $CellContext`x10$$, $CellContext`x11$$, \
$CellContext`x12$$, $CellContext`x13$$, $CellContext`x14$$, \
$CellContext`x15$$, $CellContext`x16$$}], $CellContext`P = \
$CellContext`result$$}; Null), Evaluator -> Automatic, Method -> 
         "Preemptive"]}, {
        DynamicBox[
         ToBoxes[
          Style[
           ToString[
            Simplify[$CellContext`result$$]], Bold], StandardForm], 
         ImageSizeCache -> {53.484375, {3.48046875, 12.55078125}}]}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
    DynamicModuleValues :> {}, Initialization :> {$CellContext`Fun3[
        Condition[
         Pattern[$CellContext`p1, 
          Blank[]], 
         BooleanQ[$CellContext`p1]], 
        Condition[
         Pattern[$CellContext`p2, 
          Blank[]], 
         BooleanQ[$CellContext`p2]], 
        Condition[
         Pattern[$CellContext`p3, 
          Blank[]], 
         BooleanQ[$CellContext`p3]], 
        Condition[
         Pattern[$CellContext`p4, 
          Blank[]], 
         BooleanQ[$CellContext`p4]], 
        Condition[
         Pattern[$CellContext`p5, 
          Blank[]], 
         BooleanQ[$CellContext`p5]], 
        Condition[
         Pattern[$CellContext`p6, 
          Blank[]], 
         BooleanQ[$CellContext`p6]], 
        Condition[
         Pattern[$CellContext`p7, 
          Blank[]], 
         BooleanQ[$CellContext`p7]], 
        Condition[
         Pattern[$CellContext`p8, 
          Blank[]], 
         BooleanQ[$CellContext`p8]]] := BooleanFunction[
        MapThread[# -> #2& , {
          
          Tuples[{True, False}, 
           3], {$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, $CellContext`p5, $CellContext`p6, $CellContext`p7, \
$CellContext`p8}}], {$CellContext`a, $CellContext`b, $CellContext`c}], \
$CellContext`Fun3[
        Pattern[$CellContext`p, 
         Blank[]]] := BooleanFunction[
        MapThread[# -> #2& , {
          Tuples[{True, False}, $CellContext`n], 
          Table[
           
           Part[$CellContext`p, $CellContext`i], {$CellContext`i, 1, 
            2^$CellContext`n}]}], {$CellContext`a, $CellContext`b, \
$CellContext`c, $CellContext`d}], $CellContext`n = 4, $CellContext`i = 5}], 
   DynamicModuleBox[{$CellContext`x1$$ = True, $CellContext`x2$$ = 
     True, $CellContext`x3$$ = True, $CellContext`x4$$ = 
     True, $CellContext`x5$$ = True, $CellContext`x6$$ = 
     True, $CellContext`x7$$ = True, $CellContext`x8$$ = 
     True, $CellContext`x9$$ = True, $CellContext`x10$$ = 
     False, $CellContext`x11$$ = True, $CellContext`x12$$ = 
     False, $CellContext`x13$$ = True, $CellContext`x14$$ = 
     False, $CellContext`x15$$ = True, $CellContext`x16$$ = 
     False, $CellContext`result$$ = Or[$CellContext`a, $CellContext`d]}, 
    TagBox[
     GridBox[{{"\"Q\""}, {
        InputFieldBox[
         Dynamic[$CellContext`x1$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x2$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x3$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x4$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x5$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x6$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x7$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x8$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x9$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x10$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x11$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x12$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x13$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x14$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x15$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x16$$], FieldSize -> Small]}, {
        ButtonBox[
        "\"Evaluate\"", Appearance -> Automatic, 
         ButtonFunction :> ({$CellContext`result$$ = \
$CellContext`Fun3[{$CellContext`x1$$, $CellContext`x2$$, $CellContext`x3$$, \
$CellContext`x4$$, $CellContext`x5$$, $CellContext`x6$$, $CellContext`x7$$, \
$CellContext`x8$$, $CellContext`x9$$, $CellContext`x10$$, $CellContext`x11$$, \
$CellContext`x12$$, $CellContext`x13$$, $CellContext`x14$$, \
$CellContext`x15$$, $CellContext`x16$$}], $CellContext`Q = \
$CellContext`result$$}; Null), Evaluator -> Automatic, Method -> 
         "Preemptive"]}, {
        DynamicBox[
         ToBoxes[
          Style[
           ToString[
            Simplify[$CellContext`result$$]], Bold], StandardForm], 
         ImageSizeCache -> {45.84375, {3.48046875, 12.55078125}}]}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
    DynamicModuleValues :> {}, Initialization :> {$CellContext`Fun3[
        Condition[
         Pattern[$CellContext`p1, 
          Blank[]], 
         BooleanQ[$CellContext`p1]], 
        Condition[
         Pattern[$CellContext`p2, 
          Blank[]], 
         BooleanQ[$CellContext`p2]], 
        Condition[
         Pattern[$CellContext`p3, 
          Blank[]], 
         BooleanQ[$CellContext`p3]], 
        Condition[
         Pattern[$CellContext`p4, 
          Blank[]], 
         BooleanQ[$CellContext`p4]], 
        Condition[
         Pattern[$CellContext`p5, 
          Blank[]], 
         BooleanQ[$CellContext`p5]], 
        Condition[
         Pattern[$CellContext`p6, 
          Blank[]], 
         BooleanQ[$CellContext`p6]], 
        Condition[
         Pattern[$CellContext`p7, 
          Blank[]], 
         BooleanQ[$CellContext`p7]], 
        Condition[
         Pattern[$CellContext`p8, 
          Blank[]], 
         BooleanQ[$CellContext`p8]]] := BooleanFunction[
        MapThread[# -> #2& , {
          
          Tuples[{True, False}, 
           3], {$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, $CellContext`p5, $CellContext`p6, $CellContext`p7, \
$CellContext`p8}}], {$CellContext`a, $CellContext`b, $CellContext`c}], \
$CellContext`Fun3[
        Pattern[$CellContext`p, 
         Blank[]]] := BooleanFunction[
        MapThread[# -> #2& , {
          Tuples[{True, False}, $CellContext`n], 
          Table[
           
           Part[$CellContext`p, $CellContext`i], {$CellContext`i, 1, 
            2^$CellContext`n}]}], {$CellContext`a, $CellContext`b, \
$CellContext`c, $CellContext`d}], $CellContext`n = 4, $CellContext`i = 5}], 
   DynamicModuleBox[{$CellContext`x1$$ = True, $CellContext`x2$$ = 
     False, $CellContext`x3$$ = True, $CellContext`x4$$ = 
     False, $CellContext`x5$$ = True, $CellContext`x6$$ = 
     False, $CellContext`x7$$ = True, $CellContext`x8$$ = 
     False, $CellContext`x9$$ = True, $CellContext`x10$$ = 
     True, $CellContext`x11$$ = True, $CellContext`x12$$ = 
     True, $CellContext`x13$$ = True, $CellContext`x14$$ = 
     False, $CellContext`x15$$ = True, $CellContext`x16$$ = 
     False, $CellContext`result$$ = Or[
       And[
        Not[$CellContext`a], $CellContext`b], $CellContext`d]}, 
    TagBox[
     GridBox[{{"\"R\""}, {
        InputFieldBox[
         Dynamic[$CellContext`x1$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x2$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x3$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x4$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x5$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x6$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x7$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x8$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x9$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x10$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x11$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x12$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x13$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x14$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x15$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x16$$], FieldSize -> Small]}, {
        ButtonBox[
        "\"Evaluate\"", Appearance -> Automatic, 
         ButtonFunction :> ({$CellContext`result$$ = \
$CellContext`Fun3[{$CellContext`x1$$, $CellContext`x2$$, $CellContext`x3$$, \
$CellContext`x4$$, $CellContext`x5$$, $CellContext`x6$$, $CellContext`x7$$, \
$CellContext`x8$$, $CellContext`x9$$, $CellContext`x10$$, $CellContext`x11$$, \
$CellContext`x12$$, $CellContext`x13$$, $CellContext`x14$$, \
$CellContext`x15$$, $CellContext`x16$$}], $CellContext`R = \
$CellContext`result$$}; Null), Evaluator -> Automatic, Method -> 
         "Preemptive"]}, {
        DynamicBox[
         ToBoxes[
          Style[
           ToString[
            Simplify[$CellContext`result$$]], Bold], StandardForm], 
         ImageSizeCache -> {106.96875, {3.48046875, 12.55078125}}]}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
    DynamicModuleValues :> {}, Initialization :> {$CellContext`Fun3[
        Condition[
         Pattern[$CellContext`p1, 
          Blank[]], 
         BooleanQ[$CellContext`p1]], 
        Condition[
         Pattern[$CellContext`p2, 
          Blank[]], 
         BooleanQ[$CellContext`p2]], 
        Condition[
         Pattern[$CellContext`p3, 
          Blank[]], 
         BooleanQ[$CellContext`p3]], 
        Condition[
         Pattern[$CellContext`p4, 
          Blank[]], 
         BooleanQ[$CellContext`p4]], 
        Condition[
         Pattern[$CellContext`p5, 
          Blank[]], 
         BooleanQ[$CellContext`p5]], 
        Condition[
         Pattern[$CellContext`p6, 
          Blank[]], 
         BooleanQ[$CellContext`p6]], 
        Condition[
         Pattern[$CellContext`p7, 
          Blank[]], 
         BooleanQ[$CellContext`p7]], 
        Condition[
         Pattern[$CellContext`p8, 
          Blank[]], 
         BooleanQ[$CellContext`p8]]] := BooleanFunction[
        MapThread[# -> #2& , {
          
          Tuples[{True, False}, 
           3], {$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, $CellContext`p5, $CellContext`p6, $CellContext`p7, \
$CellContext`p8}}], {$CellContext`a, $CellContext`b, $CellContext`c}], \
$CellContext`Fun3[
        Pattern[$CellContext`p, 
         Blank[]]] := BooleanFunction[
        MapThread[# -> #2& , {
          Tuples[{True, False}, $CellContext`n], 
          Table[
           
           Part[$CellContext`p, $CellContext`i], {$CellContext`i, 1, 
            2^$CellContext`n}]}], {$CellContext`a, $CellContext`b, \
$CellContext`c, $CellContext`d}], $CellContext`n = 4, $CellContext`i = 5}], 
   DynamicModuleBox[{$CellContext`x1$$ = False, $CellContext`x2$$ = 
     False, $CellContext`x3$$ = True, $CellContext`x4$$ = 
     True, $CellContext`x5$$ = False, $CellContext`x6$$ = 
     False, $CellContext`x7$$ = True, $CellContext`x8$$ = 
     True, $CellContext`x9$$ = False, $CellContext`x10$$ = 
     False, $CellContext`x11$$ = True, $CellContext`x12$$ = 
     True, $CellContext`x13$$ = True, $CellContext`x14$$ = 
     True, $CellContext`x15$$ = True, $CellContext`x16$$ = 
     True, $CellContext`result$$ = Or[
       And[
        Not[$CellContext`a], 
        Not[$CellContext`b]], 
       Not[$CellContext`c]]}, 
    TagBox[
     GridBox[{{"\"S\""}, {
        InputFieldBox[
         Dynamic[$CellContext`x1$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x2$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x3$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x4$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x5$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x6$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x7$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x8$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x9$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x10$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x11$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x12$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x13$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x14$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x15$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x16$$], FieldSize -> Small]}, {
        ButtonBox[
        "\"Evaluate\"", Appearance -> Automatic, 
         ButtonFunction :> ({$CellContext`result$$ = \
$CellContext`Fun3[{$CellContext`x1$$, $CellContext`x2$$, $CellContext`x3$$, \
$CellContext`x4$$, $CellContext`x5$$, $CellContext`x6$$, $CellContext`x7$$, \
$CellContext`x8$$, $CellContext`x9$$, $CellContext`x10$$, $CellContext`x11$$, \
$CellContext`x12$$, $CellContext`x13$$, $CellContext`x14$$, \
$CellContext`x15$$, $CellContext`x16$$}], $CellContext`S = \
$CellContext`result$$}; Null), Evaluator -> Automatic, Method -> 
         "Preemptive"]}, {
        DynamicBox[
         ToBoxes[
          Style[
           ToString[
            Simplify[$CellContext`result$$]], Bold], StandardForm], 
         ImageSizeCache -> {122.25, {3.48046875, 12.55078125}}]}}, AutoDelete -> 
      False, GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
    DynamicModuleValues :> {}, Initialization :> {$CellContext`Fun3[
        Condition[
         Pattern[$CellContext`p1, 
          Blank[]], 
         BooleanQ[$CellContext`p1]], 
        Condition[
         Pattern[$CellContext`p2, 
          Blank[]], 
         BooleanQ[$CellContext`p2]], 
        Condition[
         Pattern[$CellContext`p3, 
          Blank[]], 
         BooleanQ[$CellContext`p3]], 
        Condition[
         Pattern[$CellContext`p4, 
          Blank[]], 
         BooleanQ[$CellContext`p4]], 
        Condition[
         Pattern[$CellContext`p5, 
          Blank[]], 
         BooleanQ[$CellContext`p5]], 
        Condition[
         Pattern[$CellContext`p6, 
          Blank[]], 
         BooleanQ[$CellContext`p6]], 
        Condition[
         Pattern[$CellContext`p7, 
          Blank[]], 
         BooleanQ[$CellContext`p7]], 
        Condition[
         Pattern[$CellContext`p8, 
          Blank[]], 
         BooleanQ[$CellContext`p8]]] := BooleanFunction[
        MapThread[# -> #2& , {
          
          Tuples[{True, False}, 
           3], {$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, $CellContext`p5, $CellContext`p6, $CellContext`p7, \
$CellContext`p8}}], {$CellContext`a, $CellContext`b, $CellContext`c}], \
$CellContext`Fun3[
        Pattern[$CellContext`p, 
         Blank[]]] := BooleanFunction[
        MapThread[# -> #2& , {
          Tuples[{True, False}, $CellContext`n], 
          Table[
           
           Part[$CellContext`p, $CellContext`i], {$CellContext`i, 1, 
            2^$CellContext`n}]}], {$CellContext`a, $CellContext`b, \
$CellContext`c, $CellContext`d}], $CellContext`n = 4, $CellContext`i = 5}], 
   DynamicModuleBox[{$CellContext`x1$$ = True, $CellContext`x2$$ = 
     True, $CellContext`x3$$ = True, $CellContext`x4$$ = 
     True, $CellContext`x5$$ = True, $CellContext`x6$$ = 
     True, $CellContext`x7$$ = True, $CellContext`x8$$ = 
     True, $CellContext`x9$$ = True, $CellContext`x10$$ = 
     True, $CellContext`x11$$ = True, $CellContext`x12$$ = 
     True, $CellContext`x13$$ = True, $CellContext`x14$$ = 
     True, $CellContext`x15$$ = True, $CellContext`x16$$ = 
     True, $CellContext`result$$ = True}, 
    TagBox[
     GridBox[{{"\"T\""}, {
        InputFieldBox[
         Dynamic[$CellContext`x1$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x2$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x3$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x4$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x5$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x6$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x7$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x8$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x9$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x10$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x11$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x12$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x13$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x14$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x15$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x16$$], FieldSize -> Small]}, {
        ButtonBox[
        "\"Evaluate\"", 
         ButtonFunction :> ({$CellContext`result$$ = \
$CellContext`Fun3[{$CellContext`x1$$, $CellContext`x2$$, $CellContext`x3$$, \
$CellContext`x4$$, $CellContext`x5$$, $CellContext`x6$$, $CellContext`x7$$, \
$CellContext`x8$$, $CellContext`x9$$, $CellContext`x10$$, $CellContext`x11$$, \
$CellContext`x12$$, $CellContext`x13$$, $CellContext`x14$$, \
$CellContext`x15$$, $CellContext`x16$$}], $CellContext`T = \
$CellContext`result$$}; Null), Appearance -> Automatic, Evaluator -> 
         Automatic, Method -> "Preemptive"]}, {
        DynamicBox[
         ToBoxes[
          Style[
           ToString[
            Simplify[$CellContext`result$$]], Bold], StandardForm]]}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
    Initialization :> {$CellContext`Fun3[
        Condition[
         Pattern[$CellContext`p1, 
          Blank[]], 
         BooleanQ[$CellContext`p1]], 
        Condition[
         Pattern[$CellContext`p2, 
          Blank[]], 
         BooleanQ[$CellContext`p2]], 
        Condition[
         Pattern[$CellContext`p3, 
          Blank[]], 
         BooleanQ[$CellContext`p3]], 
        Condition[
         Pattern[$CellContext`p4, 
          Blank[]], 
         BooleanQ[$CellContext`p4]], 
        Condition[
         Pattern[$CellContext`p5, 
          Blank[]], 
         BooleanQ[$CellContext`p5]], 
        Condition[
         Pattern[$CellContext`p6, 
          Blank[]], 
         BooleanQ[$CellContext`p6]], 
        Condition[
         Pattern[$CellContext`p7, 
          Blank[]], 
         BooleanQ[$CellContext`p7]], 
        Condition[
         Pattern[$CellContext`p8, 
          Blank[]], 
         BooleanQ[$CellContext`p8]]] := BooleanFunction[
        MapThread[# -> #2& , {
          
          Tuples[{True, False}, 
           3], {$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, $CellContext`p5, $CellContext`p6, $CellContext`p7, \
$CellContext`p8}}], {$CellContext`a, $CellContext`b, $CellContext`c}], \
$CellContext`Fun3[
        Pattern[$CellContext`p, 
         Blank[]]] := BooleanFunction[
        MapThread[# -> #2& , {
          Tuples[{True, False}, $CellContext`n], 
          Table[
           
           Part[$CellContext`p, $CellContext`i], {$CellContext`i, 1, 
            2^$CellContext`n}]}], {$CellContext`a, $CellContext`b, \
$CellContext`c, $CellContext`d}], $CellContext`n = 4, $CellContext`i = 5}, 
    DynamicModuleValues :> {}]},
  "RowWithSeparator"]], "Output",
 CellChangeTimes->{3.947024470873604*^9, 3.947024504894096*^9},
 CellLabel->
  "Out[866]=",ExpressionUUID->"c6c33b61-a383-4ce2-a714-e14f8d412581"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SatisfiabilityCount", "[", 
  RowBox[{"P", "&&", "Q", "&&", "R", "&&", "S"}], "]"}]], "Input",
 CellChangeTimes->{{3.947024732637713*^9, 3.9470247426501226`*^9}, {
  3.947024792547029*^9, 3.947024850388629*^9}, {3.9470249350809727`*^9, 
  3.947024937915077*^9}, {3.947024974435816*^9, 3.947024981407592*^9}},
 CellLabel->
  "In[880]:=",ExpressionUUID->"613daeb4-ba85-45d0-93d2-e31021d6a24f"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.9470247439761753`*^9, {3.947024793826337*^9, 3.947024850820243*^9}, 
   3.947024982186575*^9},
 CellLabel->
  "Out[880]=",ExpressionUUID->"fb875bd3-ef5b-40b2-805d-1f5e446b2cc3"]
}, Open  ]],

Cell["\<\
\[OpenCurlyDoubleQuote]d= we attack\[CloseCurlyDoubleQuote]
\[OpenCurlyDoubleQuote]a= we implement economic sanctions\
\[CloseCurlyDoubleQuote]
\[OpenCurlyDoubleQuote]c= they counter attack\[CloseCurlyDoubleQuote]
\[OpenCurlyDoubleQuote]b=we try to negotiate.\[CloseCurlyDoubleQuote]
1.) We\[CloseCurlyQuote]re going to attack or implement sanctions. Maybe \
both.
2.) If we attack, they will counter attack.
3.) If they counter attack, then we will neither implement sanctions nor try \
to negotiate.
4.) If we don\[CloseCurlyQuote]t attack, then we won\[CloseCurlyQuote]t \
implement sanctions and we won\[CloseCurlyQuote]t implement and will instead \
negotiate.
What is the only logical course of action,?\
\>", "Text",
 CellChangeTimes->{{3.947025243502942*^9, 3.9470252786448402`*^9}, {
  3.947025330911611*^9, 3.9470253839895477`*^9}, {3.9470254305584497`*^9, 
  3.9470255878675947`*^9}, {3.947025636808929*^9, 
  3.947025656906398*^9}},ExpressionUUID->"10b4ccdd-e035-4c50-b9ae-\
f6cd6b32307b"],

Cell["\<\
To keep the clues simple, I defined them so that they each only depend on at \
most 3 of the facts.\
\>", "Text",
 CellChangeTimes->{{3.947025118184599*^9, 3.947025170356103*^9}, {
  3.947025660906089*^9, 
  3.94702568327712*^9}},ExpressionUUID->"94033eda-dcb5-4e97-95ba-\
888782972cbf"],

Cell[CellGroupData[{

Cell["Another large puzzle", "Subsubsection",
 CellChangeTimes->{{3.947058109697338*^9, 
  3.947058116955011*^9}},ExpressionUUID->"ed1f3490-5129-4777-80e7-\
2f2057b00216"],

Cell["\<\
For this puzzle, let\[CloseCurlyQuote]s require that no two clues are enough \
to determine any fact.\
\>", "Text",
 CellChangeTimes->{{3.947058122855906*^9, 
  3.9470581440425797`*^9}},ExpressionUUID->"fda5488d-76d6-4dc5-8446-\
d3dfabdf15ec"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "P", ",", "Q", ",", "R", ",", "S", ",", "T", ",", "a", ",", "b", ",", "c", 
   ",", "d"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"n", "=", "4"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fun3", "[", "p_", "]"}], ":=", 
  RowBox[{"BooleanFunction", "[", 
   RowBox[{
    RowBox[{"MapThread", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#1", "->", "#2"}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tuples", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}], ",", "n"}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"p", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"2", "^", "n"}]}], " ", "}"}]}], "]"}]}], "}"}]}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ColFunG", "[", "s_", "]"}], ":=", 
  RowBox[{"DynamicModule", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x1", "=", "True"}], ",", 
      RowBox[{"x2", "=", "True"}], ",", "\[IndentingNewLine]", "\t\t\t\t\t\t", 
      RowBox[{"x3", "=", "True"}], ",", 
      RowBox[{"x4", "=", "True"}], ",", "\[IndentingNewLine]", "\t\t\t\t\t\t", 
      RowBox[{"x5", "=", "True"}], ",", 
      RowBox[{"x6", "=", "True"}], ",", "\[IndentingNewLine]", "\t\t\t\t\t\t", 
      RowBox[{"x7", "=", "True"}], ",", 
      RowBox[{"x8", "=", "True"}], ",", "\[IndentingNewLine]", "\t\t\t\t\t\t", 
      RowBox[{"x9", "=", "True"}], ",", 
      RowBox[{"x10", "=", "True"}], ",", "\[IndentingNewLine]", 
      "\t\t\t\t\t\t", 
      RowBox[{"x11", "=", "True"}], ",", 
      RowBox[{"x12", "=", "True"}], ",", "\[IndentingNewLine]", 
      "\t\t\t\t\t\t", 
      RowBox[{"x13", "=", "True"}], ",", 
      RowBox[{"x14", "=", "True"}], ",", "\[IndentingNewLine]", 
      "\t\t\t\t\t\t", 
      RowBox[{"x15", "=", "True"}], ",", 
      RowBox[{"x16", "=", "True"}], ",", "\[IndentingNewLine]", 
      "\t\t\t\t\t\t", 
      RowBox[{"result", "=", "True"}]}], "}"}], ",", "\[IndentingNewLine]", 
    "  ", 
    RowBox[{"Grid", "@", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{"Join", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"ToString", "[", "s", "]"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x1", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x2", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x3", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x4", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x5", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x6", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x7", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x8", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x9", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x10", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x11", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x12", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x13", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x14", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x15", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x16", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Button", "[", 
            RowBox[{"\"\<Evaluate\>\"", ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"result", "=", 
                 RowBox[{"Fun3", "[", 
                  RowBox[{"{", 
                   RowBox[{
                   "x1", ",", "x2", ",", "x3", ",", "x4", ",", "x5", ",", 
                    "x6", ",", "x7", ",", "x8", ",", "x9", ",", "x10", ",", 
                    "x11", ",", "x12", ",", "x13", ",", "x14", ",", "x15", 
                    ",", "x16"}], "}"}], "]"}]}], ",", 
                RowBox[{"s", "=", "result"}]}], "}"}], ";"}]}], "]"}], ",", 
           "\[IndentingNewLine]", "    ", 
           RowBox[{"Dynamic", "[", " ", "\[IndentingNewLine]", "            ", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"ToString", "[", 
               RowBox[{"Simplify", "[", "result", "]"}], "]"}], ",", "Bold"}],
              "]"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", "  ", "]"}], 
       "}"}]}]}], ",", 
    RowBox[{"SaveDefinitions", "->", "True"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"Tuples", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"True", ",", "False"}], "}"}], ",", "n"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\"", ",", 
            "\"\<d\>\""}], "}"}]}], "]"}], ",", 
        RowBox[{"Spacings", "->", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", "1.15"}], "}"}]}], ",", 
        RowBox[{"BaselinePosition", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"10", ",", "1"}], "}"}], ",", "Bottom"}], "}"}]}]}], 
       "]"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ColFunG", "[", "P", "]"}], ",", 
       RowBox[{"ColFunG", "[", "Q", "]"}], ",", 
       RowBox[{"ColFunG", "[", "R", "]"}], ",", 
       RowBox[{"ColFunG", "[", "S", "]"}], ",", 
       RowBox[{"ColFunG", "[", "T", "]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"Spacer", "[", "2", "]"}]}], "]"}]}], "Input",
 CellLabel->
  "In[885]:=",ExpressionUUID->"4247a710-70c9-49cd-a595-6888e7e31d50"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.947058149014923*^9},
 CellLabel->
  "Out[886]=",ExpressionUUID->"bd134075-d97e-4802-96b2-88e34fd52469"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{2}, "Spacer1"], 
   TagBox[
    GridBox[{{"\"a\"", "\"b\"", "\"c\"", "\"d\""}, {
      "True", "True", "True", "True"}, {"True", "True", "True", "False"}, {
      "True", "True", "False", "True"}, {"True", "True", "False", "False"}, {
      "True", "False", "True", "True"}, {"True", "False", "True", "False"}, {
      "True", "False", "False", "True"}, {
      "True", "False", "False", "False"}, {"False", "True", "True", "True"}, {
      "False", "True", "True", "False"}, {"False", "True", "False", "True"}, {
      "False", "True", "False", "False"}, {
      "False", "False", "True", "True"}, {
      "False", "False", "True", "False"}, {
      "False", "False", "False", "True"}, {
      "False", "False", "False", "False"}}, AutoDelete -> False, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.15}}}, 
     BaselinePosition -> {{10, 1}, Bottom}], "Grid"], 
   DynamicModuleBox[{$CellContext`x1$$ = True, $CellContext`x2$$ = 
     False, $CellContext`x3$$ = True, $CellContext`x4$$ = 
     True, $CellContext`x5$$ = False, $CellContext`x6$$ = 
     True, $CellContext`x7$$ = True, $CellContext`x8$$ = 
     True, $CellContext`x9$$ = True, $CellContext`x10$$ = 
     False, $CellContext`x11$$ = True, $CellContext`x12$$ = 
     True, $CellContext`x13$$ = False, $CellContext`x14$$ = 
     True, $CellContext`x15$$ = True, $CellContext`x16$$ = 
     True, $CellContext`result$$ = Or[
       And[$CellContext`b, $CellContext`d], 
       And[
        Not[$CellContext`b], 
        Not[$CellContext`d]], 
       Not[$CellContext`c]]}, 
    TagBox[
     GridBox[{{"\"P\""}, {
        InputFieldBox[
         Dynamic[$CellContext`x1$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x2$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x3$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x4$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x5$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x6$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x7$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x8$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x9$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x10$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x11$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x12$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x13$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x14$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x15$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x16$$], FieldSize -> Small]}, {
        ButtonBox[
        "\"Evaluate\"", Appearance -> Automatic, 
         ButtonFunction :> ({$CellContext`result$$ = \
$CellContext`Fun3[{$CellContext`x1$$, $CellContext`x2$$, $CellContext`x3$$, \
$CellContext`x4$$, $CellContext`x5$$, $CellContext`x6$$, $CellContext`x7$$, \
$CellContext`x8$$, $CellContext`x9$$, $CellContext`x10$$, $CellContext`x11$$, \
$CellContext`x12$$, $CellContext`x13$$, $CellContext`x14$$, \
$CellContext`x15$$, $CellContext`x16$$}], $CellContext`P = \
$CellContext`result$$}; Null), Evaluator -> Automatic, Method -> 
         "Preemptive"]}, {
        DynamicBox[
         ToBoxes[
          Style[
           ToString[
            Simplify[$CellContext`result$$]], Bold], StandardForm], 
         ImageSizeCache -> {152.8125, {3.48046875, 12.55078125}}]}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
    DynamicModuleValues :> {}, Initialization :> {$CellContext`Fun3[
        Condition[
         Pattern[$CellContext`p1, 
          Blank[]], 
         BooleanQ[$CellContext`p1]], 
        Condition[
         Pattern[$CellContext`p2, 
          Blank[]], 
         BooleanQ[$CellContext`p2]], 
        Condition[
         Pattern[$CellContext`p3, 
          Blank[]], 
         BooleanQ[$CellContext`p3]], 
        Condition[
         Pattern[$CellContext`p4, 
          Blank[]], 
         BooleanQ[$CellContext`p4]], 
        Condition[
         Pattern[$CellContext`p5, 
          Blank[]], 
         BooleanQ[$CellContext`p5]], 
        Condition[
         Pattern[$CellContext`p6, 
          Blank[]], 
         BooleanQ[$CellContext`p6]], 
        Condition[
         Pattern[$CellContext`p7, 
          Blank[]], 
         BooleanQ[$CellContext`p7]], 
        Condition[
         Pattern[$CellContext`p8, 
          Blank[]], 
         BooleanQ[$CellContext`p8]]] := BooleanFunction[
        MapThread[# -> #2& , {
          
          Tuples[{True, False}, 
           3], {$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, $CellContext`p5, $CellContext`p6, $CellContext`p7, \
$CellContext`p8}}], {$CellContext`a, $CellContext`b, $CellContext`c}], \
$CellContext`Fun3[
        Pattern[$CellContext`p, 
         Blank[]]] := BooleanFunction[
        MapThread[# -> #2& , {
          Tuples[{True, False}, $CellContext`n], 
          Table[
           
           Part[$CellContext`p, $CellContext`i], {$CellContext`i, 1, 
            2^$CellContext`n}]}], {$CellContext`a, $CellContext`b, \
$CellContext`c, $CellContext`d}], $CellContext`n = 4, $CellContext`i = 5}], 
   DynamicModuleBox[{$CellContext`x1$$ = True, $CellContext`x2$$ = 
     True, $CellContext`x3$$ = True, $CellContext`x4$$ = 
     True, $CellContext`x5$$ = True, $CellContext`x6$$ = 
     True, $CellContext`x7$$ = True, $CellContext`x8$$ = 
     True, $CellContext`x9$$ = True, $CellContext`x10$$ = 
     True, $CellContext`x11$$ = False, $CellContext`x12$$ = 
     False, $CellContext`x13$$ = True, $CellContext`x14$$ = 
     True, $CellContext`x15$$ = False, $CellContext`x16$$ = 
     False, $CellContext`result$$ = Or[$CellContext`a, $CellContext`c]}, 
    TagBox[
     GridBox[{{"\"Q\""}, {
        InputFieldBox[
         Dynamic[$CellContext`x1$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x2$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x3$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x4$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x5$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x6$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x7$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x8$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x9$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x10$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x11$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x12$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x13$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x14$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x15$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x16$$], FieldSize -> Small]}, {
        ButtonBox[
        "\"Evaluate\"", Appearance -> Automatic, 
         ButtonFunction :> ({$CellContext`result$$ = \
$CellContext`Fun3[{$CellContext`x1$$, $CellContext`x2$$, $CellContext`x3$$, \
$CellContext`x4$$, $CellContext`x5$$, $CellContext`x6$$, $CellContext`x7$$, \
$CellContext`x8$$, $CellContext`x9$$, $CellContext`x10$$, $CellContext`x11$$, \
$CellContext`x12$$, $CellContext`x13$$, $CellContext`x14$$, \
$CellContext`x15$$, $CellContext`x16$$}], $CellContext`Q = \
$CellContext`result$$}; Null), Evaluator -> Automatic, Method -> 
         "Preemptive"]}, {
        DynamicBox[
         ToBoxes[
          Style[
           ToString[
            Simplify[$CellContext`result$$]], Bold], StandardForm], 
         ImageSizeCache -> {45.84375, {3.48046875, 12.55078125}}]}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
    DynamicModuleValues :> {}, Initialization :> {$CellContext`Fun3[
        Condition[
         Pattern[$CellContext`p1, 
          Blank[]], 
         BooleanQ[$CellContext`p1]], 
        Condition[
         Pattern[$CellContext`p2, 
          Blank[]], 
         BooleanQ[$CellContext`p2]], 
        Condition[
         Pattern[$CellContext`p3, 
          Blank[]], 
         BooleanQ[$CellContext`p3]], 
        Condition[
         Pattern[$CellContext`p4, 
          Blank[]], 
         BooleanQ[$CellContext`p4]], 
        Condition[
         Pattern[$CellContext`p5, 
          Blank[]], 
         BooleanQ[$CellContext`p5]], 
        Condition[
         Pattern[$CellContext`p6, 
          Blank[]], 
         BooleanQ[$CellContext`p6]], 
        Condition[
         Pattern[$CellContext`p7, 
          Blank[]], 
         BooleanQ[$CellContext`p7]], 
        Condition[
         Pattern[$CellContext`p8, 
          Blank[]], 
         BooleanQ[$CellContext`p8]]] := BooleanFunction[
        MapThread[# -> #2& , {
          
          Tuples[{True, False}, 
           3], {$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, $CellContext`p5, $CellContext`p6, $CellContext`p7, \
$CellContext`p8}}], {$CellContext`a, $CellContext`b, $CellContext`c}], \
$CellContext`Fun3[
        Pattern[$CellContext`p, 
         Blank[]]] := BooleanFunction[
        MapThread[# -> #2& , {
          Tuples[{True, False}, $CellContext`n], 
          Table[
           
           Part[$CellContext`p, $CellContext`i], {$CellContext`i, 1, 
            2^$CellContext`n}]}], {$CellContext`a, $CellContext`b, \
$CellContext`c, $CellContext`d}], $CellContext`n = 4, $CellContext`i = 5}], 
   DynamicModuleBox[{$CellContext`x1$$ = True, $CellContext`x2$$ = 
     False, $CellContext`x3$$ = True, $CellContext`x4$$ = 
     False, $CellContext`x5$$ = True, $CellContext`x6$$ = 
     False, $CellContext`x7$$ = True, $CellContext`x8$$ = 
     False, $CellContext`x9$$ = False, $CellContext`x10$$ = 
     True, $CellContext`x11$$ = False, $CellContext`x12$$ = 
     True, $CellContext`x13$$ = True, $CellContext`x14$$ = 
     False, $CellContext`x15$$ = True, $CellContext`x16$$ = 
     False, $CellContext`result$$ = Or[
       And[$CellContext`a, $CellContext`d], 
       And[
        Not[$CellContext`a], $CellContext`b, 
        Not[$CellContext`d]], 
       And[
        Not[$CellContext`b], $CellContext`d]]}, 
    TagBox[
     GridBox[{{"\"R\""}, {
        InputFieldBox[
         Dynamic[$CellContext`x1$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x2$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x3$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x4$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x5$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x6$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x7$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x8$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x9$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x10$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x11$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x12$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x13$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x14$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x15$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x16$$], FieldSize -> Small]}, {
        ButtonBox[
        "\"Evaluate\"", Appearance -> Automatic, 
         ButtonFunction :> ({$CellContext`result$$ = \
$CellContext`Fun3[{$CellContext`x1$$, $CellContext`x2$$, $CellContext`x3$$, \
$CellContext`x4$$, $CellContext`x5$$, $CellContext`x6$$, $CellContext`x7$$, \
$CellContext`x8$$, $CellContext`x9$$, $CellContext`x10$$, $CellContext`x11$$, \
$CellContext`x12$$, $CellContext`x13$$, $CellContext`x14$$, \
$CellContext`x15$$, $CellContext`x16$$}], $CellContext`R = \
$CellContext`result$$}; Null), Evaluator -> Automatic, Method -> 
         "Preemptive"]}, {
        DynamicBox[
         ToBoxes[
          Style[
           ToString[
            Simplify[$CellContext`result$$]], Bold], StandardForm], 
         ImageSizeCache -> {129.890625, {3.48046875, 12.55078125}}]}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
    DynamicModuleValues :> {}, Initialization :> {$CellContext`Fun3[
        Condition[
         Pattern[$CellContext`p1, 
          Blank[]], 
         BooleanQ[$CellContext`p1]], 
        Condition[
         Pattern[$CellContext`p2, 
          Blank[]], 
         BooleanQ[$CellContext`p2]], 
        Condition[
         Pattern[$CellContext`p3, 
          Blank[]], 
         BooleanQ[$CellContext`p3]], 
        Condition[
         Pattern[$CellContext`p4, 
          Blank[]], 
         BooleanQ[$CellContext`p4]], 
        Condition[
         Pattern[$CellContext`p5, 
          Blank[]], 
         BooleanQ[$CellContext`p5]], 
        Condition[
         Pattern[$CellContext`p6, 
          Blank[]], 
         BooleanQ[$CellContext`p6]], 
        Condition[
         Pattern[$CellContext`p7, 
          Blank[]], 
         BooleanQ[$CellContext`p7]], 
        Condition[
         Pattern[$CellContext`p8, 
          Blank[]], 
         BooleanQ[$CellContext`p8]]] := BooleanFunction[
        MapThread[# -> #2& , {
          
          Tuples[{True, False}, 
           3], {$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, $CellContext`p5, $CellContext`p6, $CellContext`p7, \
$CellContext`p8}}], {$CellContext`a, $CellContext`b, $CellContext`c}], \
$CellContext`Fun3[
        Pattern[$CellContext`p, 
         Blank[]]] := BooleanFunction[
        MapThread[# -> #2& , {
          Tuples[{True, False}, $CellContext`n], 
          Table[
           
           Part[$CellContext`p, $CellContext`i], {$CellContext`i, 1, 
            2^$CellContext`n}]}], {$CellContext`a, $CellContext`b, \
$CellContext`c, $CellContext`d}], $CellContext`n = 4, $CellContext`i = 5}], 
   DynamicModuleBox[{$CellContext`x1$$ = False, $CellContext`x2$$ = 
     False, $CellContext`x3$$ = False, $CellContext`x4$$ = 
     False, $CellContext`x5$$ = False, $CellContext`x6$$ = 
     False, $CellContext`x7$$ = True, $CellContext`x8$$ = 
     True, $CellContext`x9$$ = True, $CellContext`x10$$ = 
     True, $CellContext`x11$$ = True, $CellContext`x12$$ = 
     True, $CellContext`x13$$ = True, $CellContext`x14$$ = 
     True, $CellContext`x15$$ = True, $CellContext`x16$$ = 
     True, $CellContext`result$$ = Or[
       Not[$CellContext`a], 
       And[
        Not[$CellContext`b], 
        Not[$CellContext`c]]]}, 
    TagBox[
     GridBox[{{"\"S\""}, {
        InputFieldBox[
         Dynamic[$CellContext`x1$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x2$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x3$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x4$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x5$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x6$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x7$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x8$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x9$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x10$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x11$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x12$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x13$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x14$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x15$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x16$$], FieldSize -> Small]}, {
        ButtonBox[
        "\"Evaluate\"", Appearance -> Automatic, 
         ButtonFunction :> ({$CellContext`result$$ = \
$CellContext`Fun3[{$CellContext`x1$$, $CellContext`x2$$, $CellContext`x3$$, \
$CellContext`x4$$, $CellContext`x5$$, $CellContext`x6$$, $CellContext`x7$$, \
$CellContext`x8$$, $CellContext`x9$$, $CellContext`x10$$, $CellContext`x11$$, \
$CellContext`x12$$, $CellContext`x13$$, $CellContext`x14$$, \
$CellContext`x15$$, $CellContext`x16$$}], $CellContext`S = \
$CellContext`result$$}; Null), Evaluator -> Automatic, Method -> 
         "Preemptive"]}, {
        DynamicBox[
         ToBoxes[
          Style[
           ToString[
            Simplify[$CellContext`result$$]], Bold], StandardForm], 
         ImageSizeCache -> {122.25, {3.48046875, 12.55078125}}]}}, AutoDelete -> 
      False, GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
    DynamicModuleValues :> {}, Initialization :> {$CellContext`Fun3[
        Condition[
         Pattern[$CellContext`p1, 
          Blank[]], 
         BooleanQ[$CellContext`p1]], 
        Condition[
         Pattern[$CellContext`p2, 
          Blank[]], 
         BooleanQ[$CellContext`p2]], 
        Condition[
         Pattern[$CellContext`p3, 
          Blank[]], 
         BooleanQ[$CellContext`p3]], 
        Condition[
         Pattern[$CellContext`p4, 
          Blank[]], 
         BooleanQ[$CellContext`p4]], 
        Condition[
         Pattern[$CellContext`p5, 
          Blank[]], 
         BooleanQ[$CellContext`p5]], 
        Condition[
         Pattern[$CellContext`p6, 
          Blank[]], 
         BooleanQ[$CellContext`p6]], 
        Condition[
         Pattern[$CellContext`p7, 
          Blank[]], 
         BooleanQ[$CellContext`p7]], 
        Condition[
         Pattern[$CellContext`p8, 
          Blank[]], 
         BooleanQ[$CellContext`p8]]] := BooleanFunction[
        MapThread[# -> #2& , {
          
          Tuples[{True, False}, 
           3], {$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, $CellContext`p5, $CellContext`p6, $CellContext`p7, \
$CellContext`p8}}], {$CellContext`a, $CellContext`b, $CellContext`c}], \
$CellContext`Fun3[
        Pattern[$CellContext`p, 
         Blank[]]] := BooleanFunction[
        MapThread[# -> #2& , {
          Tuples[{True, False}, $CellContext`n], 
          Table[
           
           Part[$CellContext`p, $CellContext`i], {$CellContext`i, 1, 
            2^$CellContext`n}]}], {$CellContext`a, $CellContext`b, \
$CellContext`c, $CellContext`d}], $CellContext`n = 4, $CellContext`i = 5}], 
   DynamicModuleBox[{$CellContext`x1$$ = True, $CellContext`x2$$ = 
     True, $CellContext`x3$$ = True, $CellContext`x4$$ = 
     True, $CellContext`x5$$ = True, $CellContext`x6$$ = 
     True, $CellContext`x7$$ = True, $CellContext`x8$$ = 
     True, $CellContext`x9$$ = True, $CellContext`x10$$ = 
     True, $CellContext`x11$$ = True, $CellContext`x12$$ = 
     True, $CellContext`x13$$ = True, $CellContext`x14$$ = 
     True, $CellContext`x15$$ = True, $CellContext`x16$$ = 
     True, $CellContext`result$$ = True}, 
    TagBox[
     GridBox[{{"\"T\""}, {
        InputFieldBox[
         Dynamic[$CellContext`x1$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x2$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x3$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x4$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x5$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x6$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x7$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x8$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x9$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x10$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x11$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x12$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x13$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x14$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x15$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x16$$], FieldSize -> Small]}, {
        ButtonBox[
        "\"Evaluate\"", 
         ButtonFunction :> ({$CellContext`result$$ = \
$CellContext`Fun3[{$CellContext`x1$$, $CellContext`x2$$, $CellContext`x3$$, \
$CellContext`x4$$, $CellContext`x5$$, $CellContext`x6$$, $CellContext`x7$$, \
$CellContext`x8$$, $CellContext`x9$$, $CellContext`x10$$, $CellContext`x11$$, \
$CellContext`x12$$, $CellContext`x13$$, $CellContext`x14$$, \
$CellContext`x15$$, $CellContext`x16$$}], $CellContext`T = \
$CellContext`result$$}; Null), Appearance -> Automatic, Evaluator -> 
         Automatic, Method -> "Preemptive"]}, {
        DynamicBox[
         ToBoxes[
          Style[
           ToString[
            Simplify[$CellContext`result$$]], Bold], StandardForm]]}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
    Initialization :> {$CellContext`Fun3[
        Condition[
         Pattern[$CellContext`p1, 
          Blank[]], 
         BooleanQ[$CellContext`p1]], 
        Condition[
         Pattern[$CellContext`p2, 
          Blank[]], 
         BooleanQ[$CellContext`p2]], 
        Condition[
         Pattern[$CellContext`p3, 
          Blank[]], 
         BooleanQ[$CellContext`p3]], 
        Condition[
         Pattern[$CellContext`p4, 
          Blank[]], 
         BooleanQ[$CellContext`p4]], 
        Condition[
         Pattern[$CellContext`p5, 
          Blank[]], 
         BooleanQ[$CellContext`p5]], 
        Condition[
         Pattern[$CellContext`p6, 
          Blank[]], 
         BooleanQ[$CellContext`p6]], 
        Condition[
         Pattern[$CellContext`p7, 
          Blank[]], 
         BooleanQ[$CellContext`p7]], 
        Condition[
         Pattern[$CellContext`p8, 
          Blank[]], 
         BooleanQ[$CellContext`p8]]] := BooleanFunction[
        MapThread[# -> #2& , {
          
          Tuples[{True, False}, 
           3], {$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, $CellContext`p5, $CellContext`p6, $CellContext`p7, \
$CellContext`p8}}], {$CellContext`a, $CellContext`b, $CellContext`c}], \
$CellContext`Fun3[
        Pattern[$CellContext`p, 
         Blank[]]] := BooleanFunction[
        MapThread[# -> #2& , {
          Tuples[{True, False}, $CellContext`n], 
          Table[
           
           Part[$CellContext`p, $CellContext`i], {$CellContext`i, 1, 
            2^$CellContext`n}]}], {$CellContext`a, $CellContext`b, \
$CellContext`c, $CellContext`d}], $CellContext`n = 4, $CellContext`i = 5}, 
    DynamicModuleValues :> {}]},
  "RowWithSeparator"]], "Output",
 CellChangeTimes->{3.9470581490216923`*^9},
 CellLabel->
  "Out[889]=",ExpressionUUID->"f3ffeaa4-67a2-4a78-8d91-7cc068ae3942"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SatisfiabilityCount", "[", 
   RowBox[{"P", "&&", "Q", "&&", "R", "&&", "S"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Sholud", " ", "be", " ", "1"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"clues", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"P", ",", "Q", ",", "R", ",", "S"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"literals", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", 
     RowBox[{"!", "a"}], ",", 
     RowBox[{"!", "b"}], ",", 
     RowBox[{"!", "c"}], ",", 
     RowBox[{"!", "d"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cluePairs", " ", "=", " ", 
   RowBox[{"Subsets", "[", 
    RowBox[{"clues", ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cluePairs", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "&&", 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "&"}], ")"}], ",", "cluePairs"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"Outer", "[", 
     RowBox[{"List", ",", "cluePairs", ",", "literals"}], "]"}], ",", "1"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "&&", 
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "&"}], ")"}], ",", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Outer", "[", 
       RowBox[{"List", ",", "cluePairs", ",", "literals"}], "]"}], ",", "1"}],
      "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"SatisfiabilityCount", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}], "]"}], "&"}], 
     ")"}], ",", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "&&", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "&"}], ")"}], ",", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Outer", "[", 
         RowBox[{"List", ",", "cluePairs", ",", "literals"}], "]"}], ",", 
        "1"}], "]"}]}], "]"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"Should", " ", "not", " ", "contain", " ", 
    RowBox[{"0", "'"}], "s"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.947059775558584*^9, 3.947059806899081*^9}, {
   3.9470599060040493`*^9, 3.947059912437248*^9}, {3.947059994849592*^9, 
   3.947060167399178*^9}, {3.9470602215581083`*^9, 3.9470602432281322`*^9}, {
   3.947060283740838*^9, 3.9470603463437557`*^9}, {3.9470603867552547`*^9, 
   3.947060387255333*^9}, {3.947060429050495*^9, 3.9470604591596823`*^9}, {
   3.947060495932147*^9, 3.947060498307222*^9}, {3.947060583481916*^9, 
   3.947060589847815*^9}, {3.947060637295957*^9, 3.947060661001768*^9}, {
   3.947060692798582*^9, 3.947060699543254*^9}, {3.947060733817691*^9, 
   3.947060738300973*^9}, 3.947060775485817*^9, {3.9470608156316223`*^9, 
   3.9470610217829*^9}, {3.9470652494301453`*^9, 3.9470652544865227`*^9}, {
   3.947065287756517*^9, 3.947065311594912*^9}, {3.94706551255128*^9, 
   3.9470655510998173`*^9}, 3.947065586508356*^9, {3.947065757326313*^9, 
   3.9470657841476603`*^9}, {3.947066033162003*^9, 3.947066036364167*^9}, {
   3.947067506298109*^9, 3.947067516227314*^9}, {3.9470685491912823`*^9, 
   3.947068553106784*^9}, {3.947068670140944*^9, 3.947068715185285*^9}, {
   3.94706960827735*^9, 3.9470696086070347`*^9}, {3.947069648742269*^9, 
   3.947069669486957*^9}, {3.947070215416621*^9, 3.947070251388054*^9}, {
   3.9470704025484533`*^9, 3.947070438055903*^9}, {3.947071401007338*^9, 
   3.947071452503642*^9}, {3.9470715671346416`*^9, 3.947071579157175*^9}},
 CellLabel->
  "In[1685]:=",ExpressionUUID->"8d52d18b-a2c1-48aa-ab12-a07076275b60"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.94707144395002*^9, 3.9470714543709173`*^9}, 
   3.94707158026134*^9, {3.947072285723343*^9, 3.947072309941338*^9}},
 CellLabel->
  "Out[1685]=",ExpressionUUID->"687c23fa-b307-4772-8f70-6f28968827b2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "6", ",", "4", ",", "4", ",", "4", ",", "2", ",", "4", ",", "4", ",", "4", 
   ",", "3", ",", "3", ",", "1", ",", "4", ",", "2", ",", "2", ",", "4", ",", 
   "1", ",", "2", ",", "3", ",", "2", ",", "4", ",", "6", ",", "5", ",", "6", 
   ",", "4", ",", "4", ",", "3", ",", "4", ",", "5", ",", "2", ",", "3", ",", 
   "2", ",", "1", ",", "2", ",", "2", ",", "4", ",", "3", ",", "4", ",", "4", 
   ",", "2", ",", "3", ",", "1", ",", "2", ",", "2", ",", "3", ",", "4", ",", 
   "3", ",", "3", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{{3.94707144395002*^9, 3.9470714543709173`*^9}, 
   3.94707158026134*^9, {3.947072285723343*^9, 3.947072309945368*^9}},
 CellLabel->
  "Out[1692]=",ExpressionUUID->"7a6e975a-14c0-4c71-8214-34ccbbae0ec4"]
}, Open  ]],

Cell["\<\
a = \[OpenCurlyDoubleQuote]I become president.\[CloseCurlyDoubleQuote]
b= \[OpenCurlyDoubleQuote]I\[CloseCurlyQuote]m happy.\[CloseCurlyDoubleQuote]
c= \[OpenCurlyDoubleQuote]I start a company.\[CloseCurlyDoubleQuote]
d= \[OpenCurlyDoubleQuote]I am healthy.\[CloseCurlyDoubleQuote]

1.) If I start a company, then I\[CloseCurlyQuote]ll be happy iff I am healthy.
2.) I\[CloseCurlyQuote]ll become president or start a company. Maybe both.
3.) If I\[CloseCurlyQuote]m happy, then either I\[CloseCurlyQuote]ll  be \
healthy or become president, but not both. Otherwise, I\[CloseCurlyQuote]ll \
at least be healthy.
4.) If I become president, I\[CloseCurlyQuote]ll neither be happy nor start a \
company.\
\>", "Text",
 CellChangeTimes->{{3.947070881763736*^9, 3.9470711041951*^9}, {
  3.947071144371707*^9, 
  3.947071325607242*^9}},ExpressionUUID->"cda1a556-f1aa-4265-a130-\
cba9613bb00c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["More operators", "Subsection",
 CellChangeTimes->{{3.9470718963150377`*^9, 
  3.9470719062265778`*^9}},ExpressionUUID->"459774cb-9cc9-4d80-acec-\
fca9315c8ec3"],

Cell["\<\
In order to have a nice puzzle, it\[CloseCurlyQuote]s important that the \
clues be simple. Mathematica is nice because it comes with the Simplify \
function, but this function has limitations. We can circumvent these \
limitations by choosing clues that are easily stated using a different set of \
operators than the ones that appear in Mathematica\[CloseCurlyQuote]s \
simplify function. One such operator is the Majority function, which returns \
True if the majority of the inputs is True and False otherwise. We can also \
use the Threshold functions, which are True iff a certain number of the \
inputs are true.\
\>", "Text",
 CellChangeTimes->{{3.9470719125910673`*^9, 3.94707191289178*^9}, {
  3.947071958791214*^9, 
  3.947072071625473*^9}},ExpressionUUID->"c5f0615e-0d42-4506-9825-\
868092e136eb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "P", ",", "Q", ",", "R", ",", "S", ",", "T", ",", "a", ",", "b", ",", "c", 
   ",", "d"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"n", "=", "4"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fun3", "[", "p_", "]"}], ":=", 
  RowBox[{"BooleanFunction", "[", 
   RowBox[{
    RowBox[{"MapThread", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#1", "->", "#2"}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tuples", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}], ",", "n"}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"p", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"2", "^", "n"}]}], " ", "}"}]}], "]"}]}], "}"}]}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ColFunG", "[", "s_", "]"}], ":=", 
  RowBox[{"DynamicModule", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x1", "=", "True"}], ",", 
      RowBox[{"x2", "=", "True"}], ",", "\[IndentingNewLine]", "\t\t\t\t\t\t", 
      RowBox[{"x3", "=", "True"}], ",", 
      RowBox[{"x4", "=", "True"}], ",", "\[IndentingNewLine]", "\t\t\t\t\t\t", 
      RowBox[{"x5", "=", "True"}], ",", 
      RowBox[{"x6", "=", "True"}], ",", "\[IndentingNewLine]", "\t\t\t\t\t\t", 
      RowBox[{"x7", "=", "True"}], ",", 
      RowBox[{"x8", "=", "True"}], ",", "\[IndentingNewLine]", "\t\t\t\t\t\t", 
      RowBox[{"x9", "=", "True"}], ",", 
      RowBox[{"x10", "=", "True"}], ",", "\[IndentingNewLine]", 
      "\t\t\t\t\t\t", 
      RowBox[{"x11", "=", "True"}], ",", 
      RowBox[{"x12", "=", "True"}], ",", "\[IndentingNewLine]", 
      "\t\t\t\t\t\t", 
      RowBox[{"x13", "=", "True"}], ",", 
      RowBox[{"x14", "=", "True"}], ",", "\[IndentingNewLine]", 
      "\t\t\t\t\t\t", 
      RowBox[{"x15", "=", "True"}], ",", 
      RowBox[{"x16", "=", "True"}], ",", "\[IndentingNewLine]", 
      "\t\t\t\t\t\t", 
      RowBox[{"result", "=", "True"}]}], "}"}], ",", "\[IndentingNewLine]", 
    "  ", 
    RowBox[{"Grid", "@", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{"Join", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"ToString", "[", "s", "]"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x1", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x2", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x3", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x4", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x5", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x6", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x7", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x8", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x9", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x10", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x11", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x12", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x13", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x14", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x15", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"InputField", "[", 
            RowBox[{
             RowBox[{"Dynamic", "[", "x16", "]"}], ",", 
             RowBox[{"FieldSize", "->", "Small"}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Button", "[", 
            RowBox[{"\"\<Evaluate\>\"", ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"result", "=", 
                 RowBox[{"Fun3", "[", 
                  RowBox[{"{", 
                   RowBox[{
                   "x1", ",", "x2", ",", "x3", ",", "x4", ",", "x5", ",", 
                    "x6", ",", "x7", ",", "x8", ",", "x9", ",", "x10", ",", 
                    "x11", ",", "x12", ",", "x13", ",", "x14", ",", "x15", 
                    ",", "x16"}], "}"}], "]"}]}], ",", 
                RowBox[{"s", "=", "result"}]}], "}"}], ";"}]}], "]"}], ",", 
           "\[IndentingNewLine]", "    ", 
           RowBox[{"Dynamic", "[", " ", "\[IndentingNewLine]", "            ", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"ToString", "[", 
               RowBox[{"Simplify", "[", "result", "]"}], "]"}], ",", "Bold"}],
              "]"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", "  ", "]"}], 
       "}"}]}]}], ",", 
    RowBox[{"SaveDefinitions", "->", "True"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"Tuples", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"True", ",", "False"}], "}"}], ",", "n"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\"", ",", 
            "\"\<d\>\""}], "}"}]}], "]"}], ",", 
        RowBox[{"Spacings", "->", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", "1.15"}], "}"}]}], ",", 
        RowBox[{"BaselinePosition", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"10", ",", "1"}], "}"}], ",", "Bottom"}], "}"}]}]}], 
       "]"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ColFunG", "[", "P", "]"}], ",", 
       RowBox[{"ColFunG", "[", "Q", "]"}], ",", 
       RowBox[{"ColFunG", "[", "R", "]"}], ",", 
       RowBox[{"ColFunG", "[", "S", "]"}], ",", 
       RowBox[{"ColFunG", "[", "T", "]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"Spacer", "[", "2", "]"}]}], "]"}]}], "Input",
 CellLabel->
  "In[1672]:=",ExpressionUUID->"4dbf0198-f628-4f4c-bdb8-63678e5004c0"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.947072079729298*^9},
 CellLabel->
  "Out[1673]=",ExpressionUUID->"5120a60e-5aac-48ec-aa82-abb4fc9370c0"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{2}, "Spacer1"], 
   TagBox[
    GridBox[{{"\"a\"", "\"b\"", "\"c\"", "\"d\""}, {
      "True", "True", "True", "True"}, {"True", "True", "True", "False"}, {
      "True", "True", "False", "True"}, {"True", "True", "False", "False"}, {
      "True", "False", "True", "True"}, {"True", "False", "True", "False"}, {
      "True", "False", "False", "True"}, {
      "True", "False", "False", "False"}, {"False", "True", "True", "True"}, {
      "False", "True", "True", "False"}, {"False", "True", "False", "True"}, {
      "False", "True", "False", "False"}, {
      "False", "False", "True", "True"}, {
      "False", "False", "True", "False"}, {
      "False", "False", "False", "True"}, {
      "False", "False", "False", "False"}}, AutoDelete -> False, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.15}}}, 
     BaselinePosition -> {{10, 1}, Bottom}], "Grid"], 
   DynamicModuleBox[{$CellContext`x1$$ = True, $CellContext`x2$$ = 
     True, $CellContext`x3$$ = True, $CellContext`x4$$ = 
     True, $CellContext`x5$$ = True, $CellContext`x6$$ = 
     True, $CellContext`x7$$ = True, $CellContext`x8$$ = 
     False, $CellContext`x9$$ = True, $CellContext`x10$$ = 
     True, $CellContext`x11$$ = True, $CellContext`x12$$ = 
     False, $CellContext`x13$$ = True, $CellContext`x14$$ = 
     False, $CellContext`x15$$ = False, $CellContext`x16$$ = 
     False, $CellContext`result$$ = 
     Or[$CellContext`b, $CellContext`c, $CellContext`d]}, 
    TagBox[
     GridBox[{{"\"P\""}, {
        InputFieldBox[
         Dynamic[$CellContext`x1$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x2$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x3$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x4$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x5$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x6$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x7$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x8$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x9$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x10$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x11$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x12$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x13$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x14$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x15$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x16$$], FieldSize -> Small]}, {
        ButtonBox[
        "\"Evaluate\"", Appearance -> Automatic, 
         ButtonFunction :> ({$CellContext`result$$ = \
$CellContext`Fun3[{$CellContext`x1$$, $CellContext`x2$$, $CellContext`x3$$, \
$CellContext`x4$$, $CellContext`x5$$, $CellContext`x6$$, $CellContext`x7$$, \
$CellContext`x8$$, $CellContext`x9$$, $CellContext`x10$$, $CellContext`x11$$, \
$CellContext`x12$$, $CellContext`x13$$, $CellContext`x14$$, \
$CellContext`x15$$, $CellContext`x16$$}], $CellContext`P = \
$CellContext`result$$}; Null), Evaluator -> Automatic, Method -> 
         "Preemptive"]}, {
        DynamicBox[
         ToBoxes[
          Style[
           ToString[
            Simplify[$CellContext`result$$]], Bold], StandardForm], 
         ImageSizeCache -> {84.046875, {3.48046875, 12.55078125}}]}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
    DynamicModuleValues :> {}, Initialization :> {$CellContext`Fun3[
        Condition[
         Pattern[$CellContext`p1, 
          Blank[]], 
         BooleanQ[$CellContext`p1]], 
        Condition[
         Pattern[$CellContext`p2, 
          Blank[]], 
         BooleanQ[$CellContext`p2]], 
        Condition[
         Pattern[$CellContext`p3, 
          Blank[]], 
         BooleanQ[$CellContext`p3]], 
        Condition[
         Pattern[$CellContext`p4, 
          Blank[]], 
         BooleanQ[$CellContext`p4]], 
        Condition[
         Pattern[$CellContext`p5, 
          Blank[]], 
         BooleanQ[$CellContext`p5]], 
        Condition[
         Pattern[$CellContext`p6, 
          Blank[]], 
         BooleanQ[$CellContext`p6]], 
        Condition[
         Pattern[$CellContext`p7, 
          Blank[]], 
         BooleanQ[$CellContext`p7]], 
        Condition[
         Pattern[$CellContext`p8, 
          Blank[]], 
         BooleanQ[$CellContext`p8]]] := BooleanFunction[
        MapThread[# -> #2& , {
          
          Tuples[{True, False}, 
           3], {$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, $CellContext`p5, $CellContext`p6, $CellContext`p7, \
$CellContext`p8}}], {$CellContext`a, $CellContext`b, $CellContext`c}], \
$CellContext`Fun3[
        Pattern[$CellContext`p, 
         Blank[]]] := BooleanFunction[
        MapThread[# -> #2& , {
          Tuples[{True, False}, $CellContext`n], 
          Table[
           
           Part[$CellContext`p, $CellContext`i], {$CellContext`i, 1, 
            2^$CellContext`n}]}], {$CellContext`a, $CellContext`b, \
$CellContext`c, $CellContext`d}], $CellContext`n = 4, $CellContext`i = 5}], 
   DynamicModuleBox[{$CellContext`x1$$ = False, $CellContext`x2$$ = 
     True, $CellContext`x3$$ = True, $CellContext`x4$$ = 
     True, $CellContext`x5$$ = False, $CellContext`x6$$ = 
     True, $CellContext`x7$$ = True, $CellContext`x8$$ = 
     True, $CellContext`x9$$ = False, $CellContext`x10$$ = 
     True, $CellContext`x11$$ = True, $CellContext`x12$$ = 
     True, $CellContext`x13$$ = False, $CellContext`x14$$ = 
     True, $CellContext`x15$$ = True, $CellContext`x16$$ = 
     True, $CellContext`result$$ = Or[
       Not[$CellContext`c], 
       Not[$CellContext`d]]}, 
    TagBox[
     GridBox[{{"\"Q\""}, {
        InputFieldBox[
         Dynamic[$CellContext`x1$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x2$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x3$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x4$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x5$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x6$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x7$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x8$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x9$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x10$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x11$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x12$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x13$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x14$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x15$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x16$$], FieldSize -> Small]}, {
        ButtonBox[
        "\"Evaluate\"", Appearance -> Automatic, 
         ButtonFunction :> ({$CellContext`result$$ = \
$CellContext`Fun3[{$CellContext`x1$$, $CellContext`x2$$, $CellContext`x3$$, \
$CellContext`x4$$, $CellContext`x5$$, $CellContext`x6$$, $CellContext`x7$$, \
$CellContext`x8$$, $CellContext`x9$$, $CellContext`x10$$, $CellContext`x11$$, \
$CellContext`x12$$, $CellContext`x13$$, $CellContext`x14$$, \
$CellContext`x15$$, $CellContext`x16$$}], $CellContext`Q = \
$CellContext`result$$}; Null), Evaluator -> Automatic, Method -> 
         "Preemptive"]}, {
        DynamicBox[
         ToBoxes[
          Style[
           ToString[
            Simplify[$CellContext`result$$]], Bold], StandardForm], 
         ImageSizeCache -> {68.765625, {3.48046875, 12.55078125}}]}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
    DynamicModuleValues :> {}, Initialization :> {$CellContext`Fun3[
        Condition[
         Pattern[$CellContext`p1, 
          Blank[]], 
         BooleanQ[$CellContext`p1]], 
        Condition[
         Pattern[$CellContext`p2, 
          Blank[]], 
         BooleanQ[$CellContext`p2]], 
        Condition[
         Pattern[$CellContext`p3, 
          Blank[]], 
         BooleanQ[$CellContext`p3]], 
        Condition[
         Pattern[$CellContext`p4, 
          Blank[]], 
         BooleanQ[$CellContext`p4]], 
        Condition[
         Pattern[$CellContext`p5, 
          Blank[]], 
         BooleanQ[$CellContext`p5]], 
        Condition[
         Pattern[$CellContext`p6, 
          Blank[]], 
         BooleanQ[$CellContext`p6]], 
        Condition[
         Pattern[$CellContext`p7, 
          Blank[]], 
         BooleanQ[$CellContext`p7]], 
        Condition[
         Pattern[$CellContext`p8, 
          Blank[]], 
         BooleanQ[$CellContext`p8]]] := BooleanFunction[
        MapThread[# -> #2& , {
          
          Tuples[{True, False}, 
           3], {$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, $CellContext`p5, $CellContext`p6, $CellContext`p7, \
$CellContext`p8}}], {$CellContext`a, $CellContext`b, $CellContext`c}], \
$CellContext`Fun3[
        Pattern[$CellContext`p, 
         Blank[]]] := BooleanFunction[
        MapThread[# -> #2& , {
          Tuples[{True, False}, $CellContext`n], 
          Table[
           
           Part[$CellContext`p, $CellContext`i], {$CellContext`i, 1, 
            2^$CellContext`n}]}], {$CellContext`a, $CellContext`b, \
$CellContext`c, $CellContext`d}], $CellContext`n = 4, $CellContext`i = 5}], 
   DynamicModuleBox[{$CellContext`x1$$ = True, $CellContext`x2$$ = 
     False, $CellContext`x3$$ = True, $CellContext`x4$$ = 
     False, $CellContext`x5$$ = False, $CellContext`x6$$ = 
     False, $CellContext`x7$$ = False, $CellContext`x8$$ = 
     False, $CellContext`x9$$ = True, $CellContext`x10$$ = 
     True, $CellContext`x11$$ = True, $CellContext`x12$$ = 
     True, $CellContext`x13$$ = True, $CellContext`x14$$ = 
     True, $CellContext`x15$$ = True, $CellContext`x16$$ = 
     True, $CellContext`result$$ = Or[
       Not[$CellContext`a], 
       And[$CellContext`b, $CellContext`d]]}, 
    TagBox[
     GridBox[{{"\"R\""}, {
        InputFieldBox[
         Dynamic[$CellContext`x1$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x2$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x3$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x4$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x5$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x6$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x7$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x8$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x9$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x10$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x11$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x12$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x13$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x14$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x15$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x16$$], FieldSize -> Small]}, {
        ButtonBox[
        "\"Evaluate\"", Appearance -> Automatic, 
         ButtonFunction :> ({$CellContext`result$$ = \
$CellContext`Fun3[{$CellContext`x1$$, $CellContext`x2$$, $CellContext`x3$$, \
$CellContext`x4$$, $CellContext`x5$$, $CellContext`x6$$, $CellContext`x7$$, \
$CellContext`x8$$, $CellContext`x9$$, $CellContext`x10$$, $CellContext`x11$$, \
$CellContext`x12$$, $CellContext`x13$$, $CellContext`x14$$, \
$CellContext`x15$$, $CellContext`x16$$}], $CellContext`R = \
$CellContext`result$$}; Null), Evaluator -> Automatic, Method -> 
         "Preemptive"]}, {
        DynamicBox[
         ToBoxes[
          Style[
           ToString[
            Simplify[$CellContext`result$$]], Bold], StandardForm], 
         ImageSizeCache -> {106.96875, {3.48046875, 12.55078125}}]}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
    DynamicModuleValues :> {}, Initialization :> {$CellContext`Fun3[
        Condition[
         Pattern[$CellContext`p1, 
          Blank[]], 
         BooleanQ[$CellContext`p1]], 
        Condition[
         Pattern[$CellContext`p2, 
          Blank[]], 
         BooleanQ[$CellContext`p2]], 
        Condition[
         Pattern[$CellContext`p3, 
          Blank[]], 
         BooleanQ[$CellContext`p3]], 
        Condition[
         Pattern[$CellContext`p4, 
          Blank[]], 
         BooleanQ[$CellContext`p4]], 
        Condition[
         Pattern[$CellContext`p5, 
          Blank[]], 
         BooleanQ[$CellContext`p5]], 
        Condition[
         Pattern[$CellContext`p6, 
          Blank[]], 
         BooleanQ[$CellContext`p6]], 
        Condition[
         Pattern[$CellContext`p7, 
          Blank[]], 
         BooleanQ[$CellContext`p7]], 
        Condition[
         Pattern[$CellContext`p8, 
          Blank[]], 
         BooleanQ[$CellContext`p8]]] := BooleanFunction[
        MapThread[# -> #2& , {
          
          Tuples[{True, False}, 
           3], {$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, $CellContext`p5, $CellContext`p6, $CellContext`p7, \
$CellContext`p8}}], {$CellContext`a, $CellContext`b, $CellContext`c}], \
$CellContext`Fun3[
        Pattern[$CellContext`p, 
         Blank[]]] := BooleanFunction[
        MapThread[# -> #2& , {
          Tuples[{True, False}, $CellContext`n], 
          Table[
           
           Part[$CellContext`p, $CellContext`i], {$CellContext`i, 1, 
            2^$CellContext`n}]}], {$CellContext`a, $CellContext`b, \
$CellContext`c, $CellContext`d}], $CellContext`n = 4, $CellContext`i = 5}], 
   DynamicModuleBox[{$CellContext`x1$$ = True, $CellContext`x2$$ = 
     True, $CellContext`x3$$ = True, $CellContext`x4$$ = 
     True, $CellContext`x5$$ = True, $CellContext`x6$$ = 
     True, $CellContext`x7$$ = True, $CellContext`x8$$ = 
     True, $CellContext`x9$$ = False, $CellContext`x10$$ = 
     False, $CellContext`x11$$ = False, $CellContext`x12$$ = 
     False, $CellContext`x13$$ = True, $CellContext`x14$$ = 
     True, $CellContext`x15$$ = True, $CellContext`x16$$ = 
     True, $CellContext`result$$ = Or[$CellContext`a, 
       Not[$CellContext`b]]}, 
    TagBox[
     GridBox[{{"\"S\""}, {
        InputFieldBox[
         Dynamic[$CellContext`x1$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x2$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x3$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x4$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x5$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x6$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x7$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x8$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x9$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x10$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x11$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x12$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x13$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x14$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x15$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x16$$], FieldSize -> Small]}, {
        ButtonBox[
        "\"Evaluate\"", Appearance -> Automatic, 
         ButtonFunction :> ({$CellContext`result$$ = \
$CellContext`Fun3[{$CellContext`x1$$, $CellContext`x2$$, $CellContext`x3$$, \
$CellContext`x4$$, $CellContext`x5$$, $CellContext`x6$$, $CellContext`x7$$, \
$CellContext`x8$$, $CellContext`x9$$, $CellContext`x10$$, $CellContext`x11$$, \
$CellContext`x12$$, $CellContext`x13$$, $CellContext`x14$$, \
$CellContext`x15$$, $CellContext`x16$$}], $CellContext`S = \
$CellContext`result$$}; Null), Evaluator -> Automatic, Method -> 
         "Preemptive"]}, {
        DynamicBox[
         ToBoxes[
          Style[
           ToString[
            Simplify[$CellContext`result$$]], Bold], StandardForm], 
         ImageSizeCache -> {53.484375, {3.48046875, 12.55078125}}]}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
    DynamicModuleValues :> {}, Initialization :> {$CellContext`Fun3[
        Condition[
         Pattern[$CellContext`p1, 
          Blank[]], 
         BooleanQ[$CellContext`p1]], 
        Condition[
         Pattern[$CellContext`p2, 
          Blank[]], 
         BooleanQ[$CellContext`p2]], 
        Condition[
         Pattern[$CellContext`p3, 
          Blank[]], 
         BooleanQ[$CellContext`p3]], 
        Condition[
         Pattern[$CellContext`p4, 
          Blank[]], 
         BooleanQ[$CellContext`p4]], 
        Condition[
         Pattern[$CellContext`p5, 
          Blank[]], 
         BooleanQ[$CellContext`p5]], 
        Condition[
         Pattern[$CellContext`p6, 
          Blank[]], 
         BooleanQ[$CellContext`p6]], 
        Condition[
         Pattern[$CellContext`p7, 
          Blank[]], 
         BooleanQ[$CellContext`p7]], 
        Condition[
         Pattern[$CellContext`p8, 
          Blank[]], 
         BooleanQ[$CellContext`p8]]] := BooleanFunction[
        MapThread[# -> #2& , {
          
          Tuples[{True, False}, 
           3], {$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, $CellContext`p5, $CellContext`p6, $CellContext`p7, \
$CellContext`p8}}], {$CellContext`a, $CellContext`b, $CellContext`c}], \
$CellContext`Fun3[
        Pattern[$CellContext`p, 
         Blank[]]] := BooleanFunction[
        MapThread[# -> #2& , {
          Tuples[{True, False}, $CellContext`n], 
          Table[
           
           Part[$CellContext`p, $CellContext`i], {$CellContext`i, 1, 
            2^$CellContext`n}]}], {$CellContext`a, $CellContext`b, \
$CellContext`c, $CellContext`d}], $CellContext`n = 4, $CellContext`i = 5}], 
   DynamicModuleBox[{$CellContext`x1$$ = True, $CellContext`x2$$ = 
     True, $CellContext`x3$$ = True, $CellContext`x4$$ = 
     True, $CellContext`x5$$ = True, $CellContext`x6$$ = 
     True, $CellContext`x7$$ = True, $CellContext`x8$$ = 
     True, $CellContext`x9$$ = True, $CellContext`x10$$ = 
     True, $CellContext`x11$$ = True, $CellContext`x12$$ = 
     True, $CellContext`x13$$ = True, $CellContext`x14$$ = 
     True, $CellContext`x15$$ = True, $CellContext`x16$$ = 
     True, $CellContext`result$$ = True}, 
    TagBox[
     GridBox[{{"\"T\""}, {
        InputFieldBox[
         Dynamic[$CellContext`x1$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x2$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x3$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x4$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x5$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x6$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x7$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x8$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x9$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x10$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x11$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x12$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x13$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x14$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x15$$], FieldSize -> Small]}, {
        InputFieldBox[
         Dynamic[$CellContext`x16$$], FieldSize -> Small]}, {
        ButtonBox[
        "\"Evaluate\"", 
         ButtonFunction :> ({$CellContext`result$$ = \
$CellContext`Fun3[{$CellContext`x1$$, $CellContext`x2$$, $CellContext`x3$$, \
$CellContext`x4$$, $CellContext`x5$$, $CellContext`x6$$, $CellContext`x7$$, \
$CellContext`x8$$, $CellContext`x9$$, $CellContext`x10$$, $CellContext`x11$$, \
$CellContext`x12$$, $CellContext`x13$$, $CellContext`x14$$, \
$CellContext`x15$$, $CellContext`x16$$}], $CellContext`T = \
$CellContext`result$$}; Null), Appearance -> Automatic, Evaluator -> 
         Automatic, Method -> "Preemptive"]}, {
        DynamicBox[
         ToBoxes[
          Style[
           ToString[
            Simplify[$CellContext`result$$]], Bold], StandardForm]]}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
    Initialization :> {$CellContext`Fun3[
        Condition[
         Pattern[$CellContext`p1, 
          Blank[]], 
         BooleanQ[$CellContext`p1]], 
        Condition[
         Pattern[$CellContext`p2, 
          Blank[]], 
         BooleanQ[$CellContext`p2]], 
        Condition[
         Pattern[$CellContext`p3, 
          Blank[]], 
         BooleanQ[$CellContext`p3]], 
        Condition[
         Pattern[$CellContext`p4, 
          Blank[]], 
         BooleanQ[$CellContext`p4]], 
        Condition[
         Pattern[$CellContext`p5, 
          Blank[]], 
         BooleanQ[$CellContext`p5]], 
        Condition[
         Pattern[$CellContext`p6, 
          Blank[]], 
         BooleanQ[$CellContext`p6]], 
        Condition[
         Pattern[$CellContext`p7, 
          Blank[]], 
         BooleanQ[$CellContext`p7]], 
        Condition[
         Pattern[$CellContext`p8, 
          Blank[]], 
         BooleanQ[$CellContext`p8]]] := BooleanFunction[
        MapThread[# -> #2& , {
          
          Tuples[{True, False}, 
           3], {$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, $CellContext`p5, $CellContext`p6, $CellContext`p7, \
$CellContext`p8}}], {$CellContext`a, $CellContext`b, $CellContext`c}], \
$CellContext`Fun3[
        Pattern[$CellContext`p, 
         Blank[]]] := BooleanFunction[
        MapThread[# -> #2& , {
          Tuples[{True, False}, $CellContext`n], 
          Table[
           
           Part[$CellContext`p, $CellContext`i], {$CellContext`i, 1, 
            2^$CellContext`n}]}], {$CellContext`a, $CellContext`b, \
$CellContext`c, $CellContext`d}], $CellContext`n = 4, $CellContext`i = 5}, 
    DynamicModuleValues :> {}]},
  "RowWithSeparator"]], "Output",
 CellChangeTimes->{3.947072079737351*^9},
 CellLabel->
  "Out[1676]=",ExpressionUUID->"9c5ef5a7-0c72-4f94-ae3a-e0fc6c5a73da"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SatisfiabilityCount", "[", 
   RowBox[{"P", "&&", "Q", "&&", "R", "&&", "S"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Sholud", " ", "be", " ", "1"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"clues", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"P", ",", "Q", ",", "R", ",", "S"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"literals", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", 
     RowBox[{"!", "a"}], ",", 
     RowBox[{"!", "b"}], ",", 
     RowBox[{"!", "c"}], ",", 
     RowBox[{"!", "d"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cluePairs", " ", "=", " ", 
   RowBox[{"Subsets", "[", 
    RowBox[{"clues", ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cluePairs", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "&&", 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "&"}], ")"}], ",", "cluePairs"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"Outer", "[", 
     RowBox[{"List", ",", "cluePairs", ",", "literals"}], "]"}], ",", "1"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "&&", 
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "&"}], ")"}], ",", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Outer", "[", 
       RowBox[{"List", ",", "cluePairs", ",", "literals"}], "]"}], ",", "1"}],
      "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"SatisfiabilityCount", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}], "]"}], "&"}], 
     ")"}], ",", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "&&", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "&"}], ")"}], ",", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Outer", "[", 
         RowBox[{"List", ",", "cluePairs", ",", "literals"}], "]"}], ",", 
        "1"}], "]"}]}], "]"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"clueTriples", " ", "=", "  ", 
    RowBox[{"Subsets", "[", 
     RowBox[{"clues", ",", 
      RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Check", " ", "that", " ", "no", " ", "three", " ", "clues", " ", "are", 
    " ", "enough", " ", "to", " ", "solve", " ", "the", " ", "puzzle"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"clueTriples", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "&&", 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "&&", 
        RowBox[{"#", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], "&"}], ")"}], ",", "clueTriples"}],
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"SatisfiabilityCount", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}], "]"}], "&"}], 
     ")"}], ",", " ", "clueTriples"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "1", " ", "should", " ", "not", " ", "be", " ", "in", " ", "the", " ", 
    "list", " ", "of", " ", "outputs", " ", 
    RowBox[{"here", "."}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.947074047388173*^9, 3.947074149268124*^9}, {
  3.947074207511417*^9, 3.947074265844268*^9}},
 CellLabel->
  "In[1816]:=",ExpressionUUID->"f8ed2560-192e-468a-bc6a-7b8c86aeaf0e"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.947073307184416*^9, 3.947073888467393*^9, 3.9470739848458147`*^9, {
   3.947074111862327*^9, 3.947074150067122*^9}, 3.947074211306959*^9, 
   3.947074268068173*^9, {3.947077583551499*^9, 3.947077606147237*^9}, {
   3.9470776377039957`*^9, 3.947077643428985*^9}},
 CellLabel->
  "Out[1816]=",ExpressionUUID->"1cf7fc61-d679-4028-b486-d5f3ac6afd9d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "5", ",", "5", ",", "3", ",", "3", ",", "2", ",", "2", ",", "4", ",", "4", 
   ",", "2", ",", "5", ",", "4", ",", "5", ",", "4", ",", "1", ",", "2", ",", 
   "1", ",", "7", ",", "4", ",", "5", ",", "5", ",", "1", ",", "4", ",", "3", 
   ",", "3", ",", "1", ",", "4", ",", "2", ",", "3", ",", "6", ",", "3", ",", 
   "5", ",", "4", ",", "6", ",", "3", ",", "3", ",", "3", ",", "3", ",", "6", 
   ",", "6", ",", "6", ",", "2", ",", "2", ",", "3", ",", "4", ",", "4", ",", 
   "4", ",", "3", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{
  3.947073307184416*^9, 3.947073888467393*^9, 3.9470739848458147`*^9, {
   3.947074111862327*^9, 3.947074150067122*^9}, 3.947074211306959*^9, 
   3.947074268068173*^9, {3.947077583551499*^9, 3.947077606147237*^9}, {
   3.9470776377039957`*^9, 3.947077643432767*^9}},
 CellLabel->
  "Out[1823]=",ExpressionUUID->"2d99ca38-9457-4600-b844-d750f6056875"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "5", ",", "3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{
  3.947073307184416*^9, 3.947073888467393*^9, 3.9470739848458147`*^9, {
   3.947074111862327*^9, 3.947074150067122*^9}, 3.947074211306959*^9, 
   3.947074268068173*^9, {3.947077583551499*^9, 3.947077606147237*^9}, {
   3.9470776377039957`*^9, 3.94707764343622*^9}},
 CellLabel->
  "Out[1826]=",ExpressionUUID->"2a8b2ec1-f51b-44a0-b805-ec446d8aa8b0"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9470733454939823`*^9, 
  3.9470733525217113`*^9}},ExpressionUUID->"bf8772a2-3731-4db1-a8dd-\
437bff237e7a"],

Cell["\<\
I have 4 cars, an Audi, a Benz, a Cadillac, and a Dodge.
1.) At least 2 of my cars work now.
2.) The Cadillac and the Dodge are not both working.
3.) If the Audi is working, then both the Benz and Dodge are both working.
4.) If the Benz is working, then the Audi is working.\
\>", "Text",
 CellChangeTimes->{{3.9470734691596746`*^9, 3.947073595828878*^9}, {
  3.947073998803462*^9, 3.9470740119692097`*^9}, {3.9470743426894007`*^9, 
  3.94707435010393*^9}},ExpressionUUID->"aae9d73e-8be0-4100-a365-\
ec012313ce49"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440, 701.25},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"14.1 for Linux x86 (64-bit) (July 16, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"9dbd6165-2098-46a0-a965-354733d17a20"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 163, 3, 96, "Title",ExpressionUUID->"8d56379c-42a4-4ed5-a246-22858e3b684f"],
Cell[742, 27, 478, 10, 77, "Text",ExpressionUUID->"bc43c1da-6c59-4e6c-9ac6-6ec1553fa041"],
Cell[CellGroupData[{
Cell[1245, 41, 201, 4, 65, "Section",ExpressionUUID->"47af226d-4166-4864-913f-776d2dd51c4b"],
Cell[CellGroupData[{
Cell[1471, 49, 219, 4, 53, "Subsection",ExpressionUUID->"b9c98a55-4c9e-44a3-9618-a949d01780d2"],
Cell[1693, 55, 1232, 19, 121, "Text",ExpressionUUID->"7181c2db-bbce-420b-b525-1a3949b2a1a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2962, 79, 191, 3, 53, "Subsection",ExpressionUUID->"eaeff5ea-5c9e-41ca-a4cf-7e28efd348ee"],
Cell[3156, 84, 729, 12, 55, "Text",ExpressionUUID->"2396eb69-b4a2-4f0d-932d-5f0a31e26ce5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3922, 101, 220, 4, 53, "Subsection",ExpressionUUID->"c12e9b30-5c89-4486-91de-c784e255ff7f"],
Cell[4145, 107, 384, 9, 99, "Text",ExpressionUUID->"bb31eb30-c2ba-407c-91c5-afb04ea95a6f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[4578, 122, 161, 3, 65, "Section",ExpressionUUID->"7ed8a72d-0f0f-4a2e-bec0-2b6b9c98a7c4"],
Cell[4742, 127, 289, 6, 33, "Text",ExpressionUUID->"0bf7b99d-b5f6-4d17-ba3d-4f69703d0188"],
Cell[CellGroupData[{
Cell[5056, 137, 185, 3, 53, "Subsection",ExpressionUUID->"55a09f87-ebe0-45f8-af6c-962c82285a55"],
Cell[5244, 142, 785, 16, 186, "Text",ExpressionUUID->"6f62e4e5-1504-47ca-a6ad-8d86e2541d7c"],
Cell[CellGroupData[{
Cell[6054, 162, 5914, 148, 421, "Input",ExpressionUUID->"40c2c7b8-a6b4-4e82-8249-81168f07eda8"],
Cell[11971, 312, 9923, 266, 301, "Output",ExpressionUUID->"93f68006-d28d-484c-adde-8b3a4dfaf0f7"]
}, Open  ]],
Cell[21909, 581, 525, 10, 55, "Text",ExpressionUUID->"cd41720e-b546-4ce8-a819-ac4fde2ae934"],
Cell[22437, 593, 871, 24, 71, "Input",ExpressionUUID->"10425265-16ce-4ed0-b7d9-7e1767a7074b"],
Cell[23311, 619, 1944, 37, 339, "Text",ExpressionUUID->"cd041a3b-ce92-4d16-8b26-3d9bb443982f"],
Cell[25258, 658, 213, 4, 33, "Text",ExpressionUUID->"7314eb5f-bae7-45a4-b56f-027feb22e849"],
Cell[CellGroupData[{
Cell[25496, 666, 3556, 103, 193, "Input",ExpressionUUID->"ba4f868b-0b5c-48b5-a398-17705f15a437"],
Cell[29055, 771, 151, 2, 33, "Output",ExpressionUUID->"84df695b-3a03-4c42-a9a3-ab3b9d1e6deb"],
Cell[29209, 775, 152, 2, 33, "Output",ExpressionUUID->"d541d8a7-bbde-4bea-a728-812687b0e4a4"],
Cell[29364, 779, 152, 2, 33, "Output",ExpressionUUID->"babe2da3-53fd-438b-81cd-2a98c55cb7fb"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[29565, 787, 262, 4, 53, "Subsection",ExpressionUUID->"9caf9bb8-b28b-41c2-a370-219d228027c9"],
Cell[CellGroupData[{
Cell[29852, 795, 5251, 139, 421, "Input",ExpressionUUID->"f4aa970b-02bd-40d5-b6f9-78c8b385db3f"],
Cell[35106, 936, 9515, 255, 301, "Output",ExpressionUUID->"a179e639-eb78-4b0f-bb40-ffb252f1fcf5"]
}, Open  ]],
Cell[44636, 1194, 686, 12, 99, "Text",ExpressionUUID->"ce01fe12-1ced-4827-85ab-cd0933fd8f3b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45359, 1211, 183, 3, 53, "Subsection",ExpressionUUID->"54614cb7-d4c1-4e30-b808-a47fdf0b9170"],
Cell[45545, 1216, 703, 12, 77, "Text",ExpressionUUID->"a96b4e16-8819-4eb7-b3b9-9fca630ed7f0"],
Cell[CellGroupData[{
Cell[46273, 1232, 5231, 138, 421, "Input",ExpressionUUID->"ce2c65b1-2926-4fef-ad87-fc9536fabd82"],
Cell[51507, 1372, 9541, 255, 301, "Output",ExpressionUUID->"68944a0c-77f2-4bb3-9d4c-c7b1193274d6"]
}, Open  ]],
Cell[61063, 1630, 1334, 24, 230, "Text",ExpressionUUID->"ef10f1ea-24c3-4a7b-8f63-77907ae00e50"],
Cell[CellGroupData[{
Cell[62422, 1658, 531, 12, 69, "Input",ExpressionUUID->"5ee9f470-5e21-4fe6-983e-f6baa0c01be4"],
Cell[62956, 1672, 155, 3, 33, "Output",ExpressionUUID->"a6d73137-e14f-418c-8eb2-bcfb1539d797"],
Cell[63114, 1677, 152, 3, 33, "Output",ExpressionUUID->"e790646b-7385-43b1-b2f2-cb8dfb9fafca"],
Cell[63269, 1682, 153, 3, 33, "Output",ExpressionUUID->"17633067-7c85-4aa2-840d-4667b12910aa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63459, 1690, 363, 9, 29, "Input",ExpressionUUID->"9282194a-0dac-4188-97db-5c8d9859bb96"],
Cell[63825, 1701, 267, 6, 33, "Output",ExpressionUUID->"e923d682-6287-4a5b-8833-61538b662ed4"]
}, Open  ]],
Cell[64107, 1710, 120, 3, 33, "Text",ExpressionUUID->"00e11c36-5c99-46e4-b044-2e0bc56b7db0"],
Cell[CellGroupData[{
Cell[64252, 1717, 5329, 140, 421, "Input",ExpressionUUID->"41582be3-3c62-40bf-9ebb-51403e3c7ec7"],
Cell[69584, 1859, 11119, 294, 301, "Output",ExpressionUUID->"db3b0227-ba0e-4d77-9d68-c57c6e54ab40"]
}, Open  ]],
Cell[80718, 2156, 1029, 20, 164, "Text",ExpressionUUID->"b9d96f98-b416-42d8-98f0-c5af331013e3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81784, 2181, 234, 4, 53, "Subsection",ExpressionUUID->"73446e25-c2ef-47bd-b46f-34c80c4fde23"],
Cell[82021, 2187, 430, 8, 55, "Text",ExpressionUUID->"8c21504a-44ec-427e-a16d-91943c914d90"],
Cell[CellGroupData[{
Cell[82476, 2199, 5322, 140, 421, "Input",ExpressionUUID->"838ea2a0-5dab-4f04-8bcf-6c68c6cb3250"],
Cell[87801, 2341, 9367, 249, 301, "Output",ExpressionUUID->"21d79508-5115-408b-8e5e-7e59f234c1d2"]
}, Open  ]],
Cell[97183, 2593, 712, 14, 186, "Text",ExpressionUUID->"a0624347-0969-4aff-98d1-def07950e764"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97932, 2612, 247, 4, 53, "Subsection",ExpressionUUID->"f0e06ed1-9543-42f9-8e16-4cdb91283351"],
Cell[CellGroupData[{
Cell[98204, 2620, 5231, 138, 421, "Input",ExpressionUUID->"24030975-6190-4b16-8bd4-297f2745e6b7"],
Cell[103438, 2760, 9457, 252, 301, "Output",ExpressionUUID->"a2b8191f-a4b7-4758-a1f8-0aadec315ef9"]
}, Open  ]],
Cell[112910, 3015, 193, 3, 33, "Text",ExpressionUUID->"22f81147-fbac-4521-b4e5-fc2ef194a2b4"],
Cell[CellGroupData[{
Cell[113128, 3022, 1377, 31, 149, "Input",ExpressionUUID->"1ece52d2-1460-468d-b590-d607fa637deb"],
Cell[114508, 3055, 427, 7, 33, "Output",ExpressionUUID->"858e19f4-5371-4f5b-a4b3-ae7bc2529530"],
Cell[114938, 3064, 428, 7, 33, "Output",ExpressionUUID->"8d79272f-3aa8-49a2-8924-26dbc7621872"],
Cell[115369, 3073, 427, 7, 33, "Output",ExpressionUUID->"a89ac8fb-78e4-4bf5-bff7-241d98c38c82"],
Cell[115799, 3082, 426, 7, 33, "Output",ExpressionUUID->"329b6e93-208f-4273-8a76-c6b13b82056b"],
Cell[116228, 3091, 427, 7, 33, "Output",ExpressionUUID->"8ab6dfd2-0a2b-4b44-b6a0-b9631bd43ac1"],
Cell[116658, 3100, 426, 7, 33, "Output",ExpressionUUID->"e2c0cabb-2938-473c-b007-d100b52f7626"]
}, Open  ]],
Cell[117099, 3110, 144, 3, 33, "Text",ExpressionUUID->"1ca3bc2a-c861-4927-ae19-168aa34f09cc"],
Cell[117246, 3115, 762, 16, 186, "Text",ExpressionUUID->"4ed0e77a-f682-40a0-8935-b262b97a4a86"],
Cell[118011, 3133, 142, 3, 33, "Text",ExpressionUUID->"1dc5d594-16d4-4642-a1ed-06f46db9298f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118190, 3141, 162, 3, 53, "Subsection",ExpressionUUID->"76d5ecdc-bb38-44cb-bb4f-db7a6038cae1"],
Cell[118355, 3146, 412, 8, 33, "Text",ExpressionUUID->"95d9fa14-bdef-47bb-b7af-417e0755cdc7"],
Cell[CellGroupData[{
Cell[118792, 3158, 8596, 212, 750, "Input",ExpressionUUID->"7d4457d3-7d3b-42eb-95e5-5b97375d9ab1"],
Cell[127391, 3372, 174, 3, 33, "Output",ExpressionUUID->"7dc0ffe5-8415-4610-a153-bbc073ca6b5f"],
Cell[127568, 3377, 24027, 583, 511, "Output",ExpressionUUID->"c6c33b61-a383-4ce2-a714-e14f8d412581"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151632, 3965, 415, 7, 29, "Input",ExpressionUUID->"613daeb4-ba85-45d0-93d2-e31021d6a24f"],
Cell[152050, 3974, 230, 5, 33, "Output",ExpressionUUID->"fb875bd3-ef5b-40b2-805d-1f5e446b2cc3"]
}, Open  ]],
Cell[152295, 3982, 1011, 20, 208, "Text",ExpressionUUID->"10b4ccdd-e035-4c50-b9ae-f6cd6b32307b"],
Cell[153309, 4004, 297, 7, 33, "Text",ExpressionUUID->"94033eda-dcb5-4e97-95ba-888782972cbf"],
Cell[CellGroupData[{
Cell[153631, 4015, 171, 3, 43, "Subsubsection",ExpressionUUID->"ed1f3490-5129-4777-80e7-2f2057b00216"],
Cell[153805, 4020, 253, 6, 33, "Text",ExpressionUUID->"fda5488d-76d6-4dc5-8446-d3dfabdf15ec"],
Cell[CellGroupData[{
Cell[154083, 4030, 8481, 210, 750, "Input",ExpressionUUID->"4247a710-70c9-49cd-a595-6888e7e31d50"],
Cell[162567, 4242, 153, 3, 33, "Output",ExpressionUUID->"bd134075-d97e-4802-96b2-88e34fd52469"],
Cell[162723, 4247, 24229, 591, 511, "Output",ExpressionUUID->"f3ffeaa4-67a2-4a78-8d91-7cc068ae3942"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186989, 4843, 4173, 104, 189, "Input",ExpressionUUID->"8d52d18b-a2c1-48aa-ab12-a07076275b60"],
Cell[191165, 4949, 250, 4, 33, "Output",ExpressionUUID->"687c23fa-b307-4772-8f70-6f28968827b2"],
Cell[191418, 4955, 782, 13, 33, "Output",ExpressionUUID->"7a6e975a-14c0-4c71-8214-34ccbbae0ec4"]
}, Open  ]],
Cell[192215, 4971, 897, 17, 208, "Text",ExpressionUUID->"cda1a556-f1aa-4265-a130-cba9613bb00c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[193161, 4994, 166, 3, 53, "Subsection",ExpressionUUID->"459774cb-9cc9-4d80-acec-fca9315c8ec3"],
Cell[193330, 4999, 819, 14, 77, "Text",ExpressionUUID->"c5f0615e-0d42-4506-9825-868092e136eb"],
Cell[CellGroupData[{
Cell[194174, 5017, 8482, 210, 750, "Input",ExpressionUUID->"4dbf0198-f628-4f4c-bdb8-63678e5004c0"],
Cell[202659, 5229, 154, 3, 33, "Output",ExpressionUUID->"5120a60e-5aac-48ec-aa82-abb4fc9370c0"],
Cell[202816, 5234, 23993, 583, 511, "Output",ExpressionUUID->"9c5ef5a7-0c72-4f94-ae3a-e0fc6c5a73da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[226846, 5822, 4140, 125, 271, "Input",ExpressionUUID->"f8ed2560-192e-468a-bc6a-7b8c86aeaf0e"],
Cell[230989, 5949, 399, 7, 33, "Output",ExpressionUUID->"1cf7fc61-d679-4028-b486-d5f3ac6afd9d"],
Cell[231391, 5958, 931, 16, 33, "Output",ExpressionUUID->"2d99ca38-9457-4600-b844-d750f6056875"],
Cell[232325, 5976, 463, 9, 33, "Output",ExpressionUUID->"2a8b2ec1-f51b-44a0-b805-ec446d8aa8b0"]
}, Open  ]],
Cell[232803, 5988, 156, 3, 29, "Input",ExpressionUUID->"bf8772a2-3731-4db1-a8dd-437bff237e7a"],
Cell[232962, 5993, 524, 10, 121, "Text",ExpressionUUID->"aae9d73e-8be0-4100-a365-ec012313ce49"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

