(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[     18599,        543]
NotebookOptionsPosition[     16148,        496]
NotebookOutlinePosition[     16563,        513]
CellTagsIndexPosition[     16520,        510]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Puzzle Certification", "Title",
 CellChangeTimes->{{3.9461666220094852`*^9, 
  3.946166634360154*^9}},ExpressionUUID->"f4e3c762-2f86-462d-bbe8-\
ffa840b324d0"],

Cell["\<\
This notebook provides some functions that are helpful in the puzzle \
certification. This notebook is only designed for 3 basic propositions and 3 \
clues at the moment.

First, fill in this Truth Table with the values for your propositions.\
\>", "Text",
 CellChangeTimes->{{3.946166647689836*^9, 
  3.946166697169936*^9}},ExpressionUUID->"f8c81883-4c67-48b9-8c73-\
78e7d498a7f9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"Prepend", "[", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"x", ",", 
        RowBox[{"Join", "[", 
         RowBox[{"x", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"InputField", "[", "]"}], ",", 
            RowBox[{"{", "3", "}"}]}], "]"}]}], "]"}]}], " ", "]"}], ",", 
      RowBox[{"Tuples", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"True", ",", "False"}], "}"}], ",", "3"}], "]"}]}], "]"}], 
    ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\""}], "}"}], ",", 
      " ", 
      RowBox[{"{", 
       RowBox[{"\"\<P\>\"", ",", "\"\<Q\>\"", ",", "\"\<R\>\""}], "}"}]}], 
     "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.946166827397753*^9, 3.946167077941065*^9}, 
   3.9464787766281033`*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"b0cca5ef-11df-4e72-be0a-4da31f43352e"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"a\"\>", "\<\"b\"\>", "\<\"c\"\>", "\<\"P\"\>", "\<\"Q\"\>", \
"\<\"R\"\>"},
    {"True", "True", "True", 
     TagBox[
      DynamicModuleBox[{Typeset`i$$ = Null}, 
       InputFieldBox[Dynamic[Typeset`i$$]],
       DynamicModuleValues:>{}],
      InputField[
       Setting[#]]& ], 
     TagBox[
      DynamicModuleBox[{Typeset`i$$ = Null}, 
       InputFieldBox[Dynamic[Typeset`i$$]],
       DynamicModuleValues:>{}],
      InputField[
       Setting[#]]& ], 
     TagBox[
      DynamicModuleBox[{Typeset`i$$ = Null}, 
       InputFieldBox[Dynamic[Typeset`i$$]],
       DynamicModuleValues:>{}],
      InputField[
       Setting[#]]& ]},
    {"True", "True", "False", 
     TagBox[
      DynamicModuleBox[{Typeset`i$$ = Null}, 
       InputFieldBox[Dynamic[Typeset`i$$]],
       DynamicModuleValues:>{}],
      InputField[
       Setting[#]]& ], 
     TagBox[
      DynamicModuleBox[{Typeset`i$$ = Null}, 
       InputFieldBox[Dynamic[Typeset`i$$]],
       DynamicModuleValues:>{}],
      InputField[
       Setting[#]]& ], 
     TagBox[
      DynamicModuleBox[{Typeset`i$$ = Null}, 
       InputFieldBox[Dynamic[Typeset`i$$]],
       DynamicModuleValues:>{}],
      InputField[
       Setting[#]]& ]},
    {"True", "False", "True", 
     TagBox[
      DynamicModuleBox[{Typeset`i$$ = Null}, 
       InputFieldBox[Dynamic[Typeset`i$$]],
       DynamicModuleValues:>{}],
      InputField[
       Setting[#]]& ], 
     TagBox[
      DynamicModuleBox[{Typeset`i$$ = Null}, 
       InputFieldBox[Dynamic[Typeset`i$$]],
       DynamicModuleValues:>{}],
      InputField[
       Setting[#]]& ], 
     TagBox[
      DynamicModuleBox[{Typeset`i$$ = Null}, 
       InputFieldBox[Dynamic[Typeset`i$$]],
       DynamicModuleValues:>{}],
      InputField[
       Setting[#]]& ]},
    {"True", "False", "False", 
     TagBox[
      DynamicModuleBox[{Typeset`i$$ = Null}, 
       InputFieldBox[Dynamic[Typeset`i$$]],
       DynamicModuleValues:>{}],
      InputField[
       Setting[#]]& ], 
     TagBox[
      DynamicModuleBox[{Typeset`i$$ = Null}, 
       InputFieldBox[Dynamic[Typeset`i$$]],
       DynamicModuleValues:>{}],
      InputField[
       Setting[#]]& ], 
     TagBox[
      DynamicModuleBox[{Typeset`i$$ = Null}, 
       InputFieldBox[Dynamic[Typeset`i$$]],
       DynamicModuleValues:>{}],
      InputField[
       Setting[#]]& ]},
    {"False", "True", "True", 
     TagBox[
      DynamicModuleBox[{Typeset`i$$ = Null}, 
       InputFieldBox[Dynamic[Typeset`i$$]],
       DynamicModuleValues:>{}],
      InputField[
       Setting[#]]& ], 
     TagBox[
      DynamicModuleBox[{Typeset`i$$ = Null}, 
       InputFieldBox[Dynamic[Typeset`i$$]],
       DynamicModuleValues:>{}],
      InputField[
       Setting[#]]& ], 
     TagBox[
      DynamicModuleBox[{Typeset`i$$ = Null}, 
       InputFieldBox[Dynamic[Typeset`i$$]],
       DynamicModuleValues:>{}],
      InputField[
       Setting[#]]& ]},
    {"False", "True", "False", 
     TagBox[
      DynamicModuleBox[{Typeset`i$$ = Null}, 
       InputFieldBox[Dynamic[Typeset`i$$]],
       DynamicModuleValues:>{}],
      InputField[
       Setting[#]]& ], 
     TagBox[
      DynamicModuleBox[{Typeset`i$$ = Null}, 
       InputFieldBox[Dynamic[Typeset`i$$]],
       DynamicModuleValues:>{}],
      InputField[
       Setting[#]]& ], 
     TagBox[
      DynamicModuleBox[{Typeset`i$$ = Null}, 
       InputFieldBox[Dynamic[Typeset`i$$]],
       DynamicModuleValues:>{}],
      InputField[
       Setting[#]]& ]},
    {"False", "False", "True", 
     TagBox[
      DynamicModuleBox[{Typeset`i$$ = Null}, 
       InputFieldBox[Dynamic[Typeset`i$$]],
       DynamicModuleValues:>{}],
      InputField[
       Setting[#]]& ], 
     TagBox[
      DynamicModuleBox[{Typeset`i$$ = Null}, 
       InputFieldBox[Dynamic[Typeset`i$$]],
       DynamicModuleValues:>{}],
      InputField[
       Setting[#]]& ], 
     TagBox[
      DynamicModuleBox[{Typeset`i$$ = Null}, 
       InputFieldBox[Dynamic[Typeset`i$$]],
       DynamicModuleValues:>{}],
      InputField[
       Setting[#]]& ]},
    {"False", "False", "False", 
     TagBox[
      DynamicModuleBox[{Typeset`i$$ = Null}, 
       InputFieldBox[Dynamic[Typeset`i$$]],
       DynamicModuleValues:>{}],
      InputField[
       Setting[#]]& ], 
     TagBox[
      DynamicModuleBox[{Typeset`i$$ = Null}, 
       InputFieldBox[Dynamic[Typeset`i$$]],
       DynamicModuleValues:>{}],
      InputField[
       Setting[#]]& ], 
     TagBox[
      DynamicModuleBox[{Typeset`i$$ = Null}, 
       InputFieldBox[Dynamic[Typeset`i$$]],
       DynamicModuleValues:>{}],
      InputField[
       Setting[#]]& ]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.946166904258615*^9, 3.9461669356551447`*^9, 3.94616701466546*^9, {
   3.9461670506734877`*^9, 3.946167078706374*^9}, {3.94647877416842*^9, 
   3.946478777301877*^9}},
 CellLabel->"Out[2]=",ExpressionUUID->"cf0bb583-c9bc-4555-a3cf-c288876310fe"]
}, Open  ]],

Cell["\<\
Use your output to define propositions P,Q,R to be filled in below by using \
the technique to produce a proposition from a table. Note that the current \
definitions of P,Q,R don\[CloseCurlyQuote]t work and are just placeholders.\
\>", "Text",
 CellChangeTimes->{{3.94616709295604*^9, 3.9461671416723623`*^9}, {
  3.946167581295176*^9, 
  3.946167624975358*^9}},ExpressionUUID->"bbd80e50-657f-42de-a1d1-\
8cbddb31a5a6"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.946167554088338*^9, 
  3.9461675634567833`*^9}},ExpressionUUID->"214a08f1-633c-436d-a12c-\
7b61f2bd9b14"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"P", "  ", "=", " ", 
  RowBox[{"!", 
   RowBox[{"Xor", "[", 
    RowBox[{"a", ",", "b", ",", "c"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Q", " ", "=", " ", 
  RowBox[{"a", "||", 
   RowBox[{"!", "c"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"R", " ", "=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"a", " ", "&&", " ", 
     RowBox[{"!", "c"}]}], ")"}], "||", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"!", "a"}], " ", "&&", " ", "b"}], ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.946167108992797*^9, 3.946167113577857*^9}, {
   3.9461671448066673`*^9, 3.9461671620463057`*^9}, {3.946167529637539*^9, 
   3.9461676088450613`*^9}, {3.946167672143461*^9, 3.946167672940237*^9}, {
   3.946555892696423*^9, 3.9465559162637453`*^9}, {3.9467314027140837`*^9, 
   3.9467314397440023`*^9}, 3.946857341421195*^9},
 CellLabel->
  "In[150]:=",ExpressionUUID->"cc8f5b74-08ea-427c-b94f-5f32b2d17e25"],

Cell[BoxData[
 RowBox[{"!", 
  RowBox[{"(", 
   RowBox[{"a", "\[Xor]", "b", "\[Xor]", "c"}], ")"}]}]], "Output",
 CellChangeTimes->{3.94616767358426*^9, 3.9465559187813168`*^9, 
  3.946731390230647*^9, 3.94673145549288*^9, 3.946857342709517*^9},
 CellLabel->
  "Out[150]=",ExpressionUUID->"71395ca1-42f3-4fcf-8111-de807f9b79a7"],

Cell[BoxData[
 RowBox[{"a", "||", 
  RowBox[{"!", "c"}]}]], "Output",
 CellChangeTimes->{3.94616767358426*^9, 3.9465559187813168`*^9, 
  3.946731390230647*^9, 3.94673145549288*^9, 3.9468573427106447`*^9},
 CellLabel->
  "Out[151]=",ExpressionUUID->"8d256fe6-5b1c-4218-ba1a-25fde48af888"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"a", "&&", 
    RowBox[{"!", "c"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"!", "a"}], "&&", "b"}], ")"}]}]], "Output",
 CellChangeTimes->{3.94616767358426*^9, 3.9465559187813168`*^9, 
  3.946731390230647*^9, 3.94673145549288*^9, 3.94685734271185*^9},
 CellLabel->
  "Out[152]=",ExpressionUUID->"ad1d648b-f5ef-4e2c-9a5f-3bbfbbdd1a27"]
}, Open  ]],

Cell["\<\
Now we check that P,Q,R have the desired properties. First, if there is a \
unique solution, then the satisfiability count is 1.
\
\>", "Text",
 CellChangeTimes->{{3.946167177921711*^9, 
  3.9461672368854*^9}},ExpressionUUID->"e01d0cca-d7f8-488d-abcf-d7726c0f5759"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SatisfiabilityCount", "[", 
  RowBox[{
   RowBox[{"P", "&&", "Q", "&&", "R"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.94616725284422*^9, {3.9461676366504183`*^9, 3.9461676384051037`*^9}},
 CellLabel->
  "In[153]:=",ExpressionUUID->"9761da36-026a-496e-8d77-9437183b8a94"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.946167253462247*^9, {3.94616762965278*^9, 3.946167639082999*^9}, 
   3.946167677116127*^9, 3.946731395276483*^9, 3.94673145802949*^9, 
   3.946857347576268*^9},
 CellLabel->
  "Out[153]=",ExpressionUUID->"7ea6ec29-e92e-4f82-af64-f828f4bbbdff"]
}, Open  ]],

Cell["\<\
Next, we check that no pair of clues solves the puzzle. Every pair should \
have a higher satisfiability count than 1.
\
\>", "Text",
 CellChangeTimes->{{3.9461672609062643`*^9, 
  3.94616728582801*^9}},ExpressionUUID->"d5eb4cdd-4e71-4a7d-8d39-\
ef588393bd63"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"clues", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"P", ",", "Q", ",", "R"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cluepairs", " ", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Outer", "[", 
      RowBox[{"List", ",", 
       RowBox[{"{", 
        RowBox[{"P", ",", "Q", ",", "R"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"P", ",", "Q", ",", "R"}], "}"}]}], "]"}], ",", "1"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"subpuzzlesToCheck", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{"Function", "[", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "&&", 
        RowBox[{"x", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], ",", "cluepairs"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"AllTrue", "[", 
  RowBox[{"subpuzzlesToCheck", ",", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"SatisfiabilityCount", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}], ">", "1"}], " ", 
     "&"}], ")"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.946167300959333*^9, 3.9461673262375307`*^9}, {
  3.9461676890380373`*^9, 3.94616769841201*^9}, {3.9468576376631813`*^9, 
  3.9468576459352016`*^9}, {3.9468576949826193`*^9, 3.946858072540071*^9}, {
  3.946858132768412*^9, 3.946858171031499*^9}, {3.946858201166997*^9, 
  3.9468582017204*^9}, {3.946858232622237*^9, 3.946858346508107*^9}, {
  3.946858388365388*^9, 3.946858457547874*^9}},
 CellLabel->
  "In[275]:=",ExpressionUUID->"ea1a9471-cd3a-43c8-aba5-250a7d9d8420"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.9468584526071463`*^9, 3.94685846045905*^9}},
 CellLabel->
  "Out[278]=",ExpressionUUID->"cf63a819-2234-46c7-9df8-0f61b25667d2"]
}, Open  ]],

Cell["\<\
We need to check that every literal (a variable or its negation) and each \
clue are satisfiable together. We should see a string of \
\[OpenCurlyDoubleQuote]True\[CloseCurlyDoubleQuote] assertions, 16 in total.\
\>", "Text",
 CellChangeTimes->{{3.9461673358819447`*^9, 3.946167374242318*^9}, {
  3.9461674684280567`*^9, 
  3.946167483302993*^9}},ExpressionUUID->"21507572-abfc-46a1-b8c1-\
671c92d3a7e1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"LiteralList", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c", ",", 
    RowBox[{"!", "a"}], ",", 
    RowBox[{"!", "b"}], ",", 
    RowBox[{"!", "c"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"ClueList", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"P", ",", "Q", ",", "R"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"AllTrue", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"SatisfiableQ", "[", 
         RowBox[{
          RowBox[{"ClueList", "[", 
           RowBox[{"[", "clueIndex", "]"}], "]"}], " ", "&&", " ", 
          RowBox[{"LiteralList", "[", 
           RowBox[{"[", "literalIndex", "]"}], "]"}]}], "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"literalIndex", ",", " ", "1", ",", "6"}], "}"}]}], "]"}], 
      ",", " ", 
      RowBox[{"{", 
       RowBox[{"clueIndex", ",", "1", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
   " ", 
   RowBox[{"(", 
    RowBox[{"#", "&"}], ")"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.9461673910317707`*^9, 3.9461674590176477`*^9}, {
  3.946857384898345*^9, 3.946857432770692*^9}, {3.94685756847258*^9, 
  3.946857575593253*^9}},
 CellLabel->
  "In[185]:=",ExpressionUUID->"215d28c0-60f9-4ad9-bd37-92bea48cdb4c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "c", ",", 
   RowBox[{"!", "a"}], ",", 
   RowBox[{"!", "b"}], ",", 
   RowBox[{"!", "c"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9461674601047573`*^9, 3.946167716253171*^9, {3.9468573632824183`*^9, 
   3.94685744068442*^9}, {3.9468575785024433`*^9, 3.946857586194467*^9}},
 CellLabel->
  "Out[185]=",ExpressionUUID->"6bf4ca6b-4d46-40e8-acaf-7adf6ab9fcb1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"!", 
    RowBox[{"(", 
     RowBox[{"a", "\[Xor]", "b", "\[Xor]", "c"}], ")"}]}], ",", 
   RowBox[{"a", "||", 
    RowBox[{"!", "c"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"a", "&&", 
      RowBox[{"!", "c"}]}], ")"}], "||", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"!", "a"}], "&&", "b"}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9461674601047573`*^9, 3.946167716253171*^9, {3.9468573632824183`*^9, 
   3.94685744068442*^9}, {3.9468575785024433`*^9, 3.946857586196357*^9}},
 CellLabel->
  "Out[186]=",ExpressionUUID->"86a03820-ab3a-49d0-96fd-b9153c802332"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.9461674601047573`*^9, 3.946167716253171*^9, {3.9468573632824183`*^9, 
   3.94685744068442*^9}, {3.9468575785024433`*^9, 3.9468575861980867`*^9}},
 CellLabel->
  "Out[187]=",ExpressionUUID->"e415a1b1-5dd2-4666-8d40-b69ada67755c"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440, 701.25},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
CellContext->Notebook,
FrontEndVersion->"14.1 for Linux x86 (64-bit) (July 16, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"2ba487c9-c236-4699-a6f2-9078f821a742"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 165, 3, 96, "Title",ExpressionUUID->"f4e3c762-2f86-462d-bbe8-ffa840b324d0"],
Cell[744, 27, 392, 9, 77, "Text",ExpressionUUID->"f8c81883-4c67-48b9-8c73-78e7d498a7f9"],
Cell[CellGroupData[{
Cell[1161, 40, 1022, 29, 30, "Input",ExpressionUUID->"b0cca5ef-11df-4e72-be0a-4da31f43352e"],
Cell[2186, 71, 5035, 164, 246, "Output",ExpressionUUID->"cf0bb583-c9bc-4555-a3cf-c288876310fe"]
}, Open  ]],
Cell[7236, 238, 430, 8, 33, "Text",ExpressionUUID->"bbd80e50-657f-42de-a1d1-8cbddb31a5a6"],
Cell[7669, 248, 154, 3, 29, "Input",ExpressionUUID->"214a08f1-633c-436d-a12c-7b61f2bd9b14"],
Cell[CellGroupData[{
Cell[7848, 255, 924, 22, 71, "Input",ExpressionUUID->"cc8f5b74-08ea-427c-b94f-5f32b2d17e25"],
Cell[8775, 279, 328, 7, 33, "Output",ExpressionUUID->"71395ca1-42f3-4fcf-8111-de807f9b79a7"],
Cell[9106, 288, 287, 6, 33, "Output",ExpressionUUID->"8d256fe6-5b1c-4218-ba1a-25fde48af888"],
Cell[9396, 296, 402, 11, 33, "Output",ExpressionUUID->"ad1d648b-f5ef-4e2c-9a5f-3bbfbbdd1a27"]
}, Open  ]],
Cell[9813, 310, 275, 6, 55, "Text",ExpressionUUID->"e01d0cca-d7f8-488d-abcf-d7726c0f5759"],
Cell[CellGroupData[{
Cell[10113, 320, 367, 9, 29, "Input",ExpressionUUID->"9761da36-026a-496e-8d77-9437183b8a94"],
Cell[10483, 331, 296, 6, 33, "Output",ExpressionUUID->"7ea6ec29-e92e-4f82-af64-f828f4bbbdff"]
}, Open  ]],
Cell[10794, 340, 270, 7, 55, "Text",ExpressionUUID->"d5eb4cdd-4e71-4a7d-8d39-ef588393bd63"],
Cell[CellGroupData[{
Cell[11089, 351, 1716, 46, 91, "Input",ExpressionUUID->"ea1a9471-cd3a-43c8-aba5-250a7d9d8420"],
Cell[12808, 399, 181, 3, 33, "Output",ExpressionUUID->"cf63a819-2234-46c7-9df8-0f61b25667d2"]
}, Open  ]],
Cell[13004, 405, 414, 8, 33, "Text",ExpressionUUID->"21507572-abfc-46a1-b8c1-671c92d3a7e1"],
Cell[CellGroupData[{
Cell[13443, 417, 1321, 35, 71, "Input",ExpressionUUID->"215d28c0-60f9-4ad9-bd37-92bea48cdb4c"],
Cell[14767, 454, 421, 10, 33, "Output",ExpressionUUID->"6bf4ca6b-4d46-40e8-acaf-7adf6ab9fcb1"],
Cell[15191, 466, 642, 19, 33, "Output",ExpressionUUID->"86a03820-ab3a-49d0-96fd-b9153c802332"],
Cell[15836, 487, 284, 5, 33, "Output",ExpressionUUID->"e415a1b1-5dd2-4666-8d40-b69ada67755c"]
}, Open  ]]
}, Open  ]]
}
]
*)

